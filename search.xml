<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用next主题调整blog的样式【持续更新】</title>
    <url>/2023/03/24/b03%20%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98%E8%B0%83%E6%95%B4blog%E7%9A%84%E6%A0%B7%E5%BC%8F/</url>
    <content><![CDATA[<p>next主题虽然配置简单，但是界面太素了，其实本身自带的配置文件就可以实现一些不错的功能，以下是我从网络上整理<del>copy</del>的一些设置技巧。工具需要:git bash或者cmd，都需要使用管理员权限打开。</p>
<span id="more"></span>

<h2 id="为blog增加字数统计，预计阅读时间的功能"><a href="#为blog增加字数统计，预计阅读时间的功能" class="headerlink" title="为blog增加字数统计，预计阅读时间的功能"></a>为blog增加字数统计，预计阅读时间的功能</h2><h3 id="安装hexo-word-counter"><a href="#安装hexo-word-counter" class="headerlink" title="安装hexo-word-counter"></a>安装hexo-word-counter</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-word-counter</span></span><br><span class="line"><span class="string">$</span> <span class="string">hexo</span> <span class="string">clean</span> <span class="comment">#安装完成后要清除一次，不然会出错</span></span><br></pre></td></tr></table></figure>

<h3 id="在hexo的配置文件中"><a href="#在hexo的配置文件中" class="headerlink" title="在hexo的配置文件中"></a>在hexo的配置文件中</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span>                <span class="comment"># 文章字数统计</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span>                   <span class="comment"># 文章阅读时长</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span>          <span class="comment"># 站点总字数统计</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span>             <span class="comment"># 站点总阅读时长</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span>     <span class="comment"># 排除代码字数统计</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span>                       <span class="comment">#平均字节长度</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span></span><br><span class="line">  <span class="attr">suffix:</span> <span class="string">&quot;mins.&quot;</span></span><br></pre></td></tr></table></figure>

<ol>
<li>awl – 平均字节长度（Average Word Length）。默认为4</li>
</ol>
<ul>
<li>CN ≈ 2</li>
<li>EN ≈ 5</li>
<li>RU ≈ 6</li>
</ul>
<ol start="2">
<li>wpm – 每分钟阅读字数（Words Per Minute）。默认为275</li>
</ol>
<ul>
<li>-Slow ≈ 200</li>
<li>Normal ≈ 275</li>
<li>Fast ≈ 350</li>
</ul>
<p><strong>如果文章中大多中文，那么设置awl为2，wpm为300比较合适</strong></p>
<h2 id="为blog添加评论区功能"><a href="#为blog添加评论区功能" class="headerlink" title="为blog添加评论区功能"></a>为blog添加评论区功能</h2><p>使用来必力网站</p>
<ol>
<li>首先需要注册账号并登录，有一点点韩文需要使用翻译，登录后选择安装，点击免费版，选择现在安装。</li>
</ol>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324201325383.png" alt="image-20230324201325383"></p>
<ol start="2">
<li><p>根据提示填写网站地址，以及名称，来必力会生成一段代码。复制这段代码的uid至next主题的配置文件。</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324201532414.png" alt="image-20230324201532414"></p>
</li>
<li><p>配置文件内修改这一段，将uid改成刚刚复制的uid</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># LiveRe comments system</span></span><br><span class="line"><span class="comment"># You can get your uid from https://livere.com/insight/myCode (General web site)</span></span><br><span class="line"><span class="attr">livere_uid:</span> <span class="string">MTAyMC81ODIzMi8zNDY5NQ==</span> <span class="comment">#修改这里！</span></span><br></pre></td></tr></table></figure>


</li>
<li><p>完成，现在打开网页看看，在每篇博文的底下都会有评论区了</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324201821112.png" alt="image-20230324201821112"></p>
</li>
</ol>
<h2 id="为blog添加live2d宠物"><a href="#为blog添加live2d宠物" class="headerlink" title="为blog添加live2d宠物"></a>为blog添加live2d宠物</h2><ol>
<li><p>在blog根目录下，打开git bash here</p>
</li>
<li><p>输入<code>npm install -save hexo-helper-live2d</code></p>
</li>
<li><p>然后点开<strong>hexo的配置文件</strong>，在最后添加这一段代码</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-</span> <span class="comment">#&lt;你喜欢的模型名字&gt;</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>可以供选择的模型有：</p>
<p>模型名字就是<code>live2d-widget-model-hijiki</code>最后单词hijiki</p>
<blockquote>
<p>live2d-widget-model-chitose</p>
<p>live2d-widget-model-epsilon2_1</p>
<p>live2d-widget-model-gf</p>
<p>live2d-widget-model-haru&#x2F;01 (use npm install –save live2d-widget-model-haru)</p>
<p>live2d-widget-model-haru&#x2F;02 (use npm install –save live2d-widget-model-haru)</p>
<p>live2d-widget-model-haruto</p>
<p>live2d-widget-model-hibiki</p>
<p>live2d-widget-model-hijiki</p>
<p>live2d-widget-model-izumi</p>
<p>live2d-widget-model-koharu</p>
<p>live2d-widget-model-miku</p>
<p>live2d-widget-model-ni-j</p>
<p>live2d-widget-model-nico</p>
<p>live2d-widget-model-nietzsche</p>
<p>live2d-widget-model-nipsilon</p>
<p>live2d-widget-model-nito</p>
<p>live2d-widget-model-shizuku</p>
<p>live2d-widget-model-tororo</p>
<p>live2d-widget-model-tsumiki</p>
<p>live2d-widget-model-unitychan</p>
<p>live2d-widget-model-wanko</p>
<p>live2d-widget-model-z16<br>————————————————</p>
<p>版权声明：本文为CSDN博主「Z小旋」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</p>
<p>原文链接：<a href="https://blog.csdn.net/as480133937/article/details/100138838">https://blog.csdn.net/as480133937/article/details/100138838</a></p>
</blockquote>
</li>
<li><ul>
<li>在站点目录下建文件夹<code>live2d_models</code>，</li>
<li>-再在<code>live2d_models</code>下建文件夹<code>&lt;你喜欢的模型名字</code>&gt;,如我要选择wanko，就新建一个名叫wanko的文件夹</li>
<li>再在<code>&lt;你喜欢的模型名字&gt;</code>下建json文件：<code>&lt;你喜欢的模型名字&gt;.model.json</code>,如我要选择wanko，就新建一个<code>wanko.model.json</code>的文件。</li>
</ul>
</li>
<li><p>如果要预览效果，可以去<a href="https://blog.csdn.net/as480133937/article/details/100138838">这个网站</a>查看，里面也有更多详细的教程。</p>
</li>
<li><p>选择好后，还是使用<code>git bash</code>命令，输入<code>npm install --save live2d-widget-model-&lt;你喜欢的模型名字&gt;</code>即可</p>
</li>
<li><p>安装完成，进入博客看看效果吧！</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230325103925803.png" alt="image-20230325103925803"></p>
</li>
</ol>
<h2 id="修改muse主题的颜色"><a href="#修改muse主题的颜色" class="headerlink" title="修改muse主题的颜色"></a>修改muse主题的颜色</h2><p>网络上这部分内容讲的比较少，这部分内容大部分由本人摸索出来，由于我的基础比较薄弱，可能有一些地方没办法用专业术语表达，如果有不对的地方，请指正。</p>
<h3 id="建议使用vscode来查看源码"><a href="#建议使用vscode来查看源码" class="headerlink" title="建议使用vscode来查看源码"></a>建议使用vscode来查看源码</h3><p>vscode是微软出的一款功能强大的编辑器，安装部分这里就不细说，可以前往<a href="https://code.visualstudio.com/">vscode官网下载安装</a>。</p>
<h3 id="next主题的样式位置"><a href="#next主题的样式位置" class="headerlink" title="next主题的样式位置"></a>next主题的样式位置</h3><p>使用vscode将<code>\themes\next\source\css</code>添加至工作区，可以看到该文件夹底下有<code>_common</code>,<code>_schemes</code>,<code>_variables</code>三个文件夹以及三个.styl文件，以下是这些文件的大概用途：</p>
<ol>
<li><code>_common</code>:这个是存放几个主题共用的一些样式，在这里修改了样式，切换主题后也会保留。</li>
<li><code>_schemes</code>这里是四个主题各自私有的一些样式，包括各个主题不共用的结构的样式，在这里修改了样式，只有切换到这个主题才能看得出来。</li>
<li><code>_variables</code>这里面主要存放了一些公用的颜色，以及不同主题针对公共颜色、尺寸的一些微调（这里我也没有太明白，只知道这里主要是调颜色用的）</li>
<li>剩下的三个.styl文件主要是用于复用一些sass写的动画，样式等，如果你不知道什么是sass，那么可以不用理会</li>
</ol>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230325232059556.png" alt="image-20230325232059556"></p>
<h3 id="muse主题添加自己喜欢的颜色"><a href="#muse主题添加自己喜欢的颜色" class="headerlink" title="muse主题添加自己喜欢的颜色"></a>muse主题添加自己喜欢的颜色</h3><p>我们这里打开<code>themes\next\source\css\_variables\base.styl</code>，上一节有提到这里主要是调整公共颜色，那么我们可以去选择一些我们喜欢的颜色添加进去，这里我推荐<a href="https://tool.chinaz.com/tools/pagecolor.aspx">网页颜色选择器 - 站长工具 (chinaz.com)</a>，这个网站提供了一些常用的颜色并有预览效果。对于一个简约风博客够用了。</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230325233757196.png" alt="image-20230325233757196"></p>
<p>打开后我们会看到颜色有中文名和代码，例如我想用粉红色（pink），就对应记录下粉红色的代码#FF0CB。</p>
<p>然后我们回到<code>base.styl</code>,可以看到开头就有一大堆的颜色</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">Colors</span></span><br><span class="line"><span class="string">//</span> <span class="string">colors</span> <span class="string">for</span> <span class="string">use</span> <span class="string">across</span> <span class="string">theme.</span></span><br><span class="line"><span class="string">//</span> <span class="string">--------------------------------------------------</span></span><br><span class="line"><span class="string">$whitesmoke</span>   <span class="string">=</span> <span class="comment">#f5f5f5;</span></span><br><span class="line"><span class="string">$gainsboro</span>    <span class="string">=</span> <span class="comment">#eee;</span></span><br><span class="line"><span class="string">$grey-lighter</span> <span class="string">=</span> <span class="comment">#ddd;</span></span><br><span class="line"><span class="string">$grey-light</span>   <span class="string">=</span> <span class="comment">#ccc;</span></span><br><span class="line"><span class="string">$grey</span>         <span class="string">=</span> <span class="comment">#bbb;</span></span><br><span class="line"><span class="string">$grey-dark</span>    <span class="string">=</span> <span class="comment">#999;</span></span><br><span class="line"><span class="string">$grey-dim</span>     <span class="string">=</span> <span class="comment">#666;</span></span><br><span class="line"><span class="string">$black-light</span>  <span class="string">=</span> <span class="comment">#555;</span></span><br><span class="line"><span class="string">$black-dim</span>    <span class="string">=</span> <span class="comment">#333;</span></span><br><span class="line"><span class="string">$black-deep</span>   <span class="string">=</span> <span class="comment">#222;</span></span><br><span class="line"><span class="string">$red</span>          <span class="string">=</span> <span class="comment">#ff2a2a;</span></span><br><span class="line"><span class="string">$blue-bright</span>  <span class="string">=</span> <span class="comment">#87daff;</span></span><br><span class="line"><span class="string">$blue</span>         <span class="string">=</span> <span class="comment">#0684bd;</span></span><br><span class="line"><span class="string">$blue-deep</span>    <span class="string">=</span> <span class="comment">#262a30;</span></span><br><span class="line"><span class="string">$orange</span>       <span class="string">=</span> <span class="comment">#fc6423;</span></span><br><span class="line"><span class="string">$royolblue</span>    <span class="string">=</span> <span class="comment">#4169E1; //我在这里增加了三个颜色</span></span><br><span class="line"><span class="string">$aliceblue</span>    <span class="string">=</span> <span class="comment">#F0F8FF;</span></span><br><span class="line"><span class="string">$steelblue</span>    <span class="string">=</span> <span class="comment">#4682B4;</span></span><br></pre></td></tr></table></figure>

<p><code>$whitesmoke</code>这里是sass语法里指定一个参数的命令，添加新的颜色就复制粘贴一下在最后面，如上面我的代码一样。</p>
<h3 id="muse主题修改各个位置的颜色"><a href="#muse主题修改各个位置的颜色" class="headerlink" title="muse主题修改各个位置的颜色"></a>muse主题修改各个位置的颜色</h3><p>和上节一样，我们在<code>base.styl</code>下面可以看到有作者写的一些注释，这个时候我们就需要拿出<a href="https://translate.google.com/?hl=zh-CN">Google 翻译</a>，如果您是资深的前端开发工程师，请退出此篇博客。</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Scaffolding //翻译：整体框架</span></span><br><span class="line"><span class="comment">// Settings for some of the most global styles. //翻译：此处是设置一些最全局的样式</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="comment">// Global text color on &lt;body&gt; //翻译：全局&lt;body&gt;标签里的字体颜色</span></span><br><span class="line"><span class="variable">$text-color</span>                   = <span class="variable">$black-light</span>;</span><br><span class="line"><span class="variable">$text-color-dark</span>              = <span class="variable">$grey-light</span>;<span class="comment">//dark是指夜间模式，有同学想做夜间模式适配的可以研究</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Global link color.</span></span><br><span class="line"><span class="variable">$link-color</span>                   = <span class="variable">$black-light</span>;</span><br><span class="line"><span class="variable">$link-color-dark</span>              = <span class="variable">$grey-light</span>;</span><br><span class="line"><span class="variable">$link-hover-color</span>             = <span class="variable">$royolblue</span>;</span><br><span class="line"><span class="variable">$link-hover-color-dark</span>        = <span class="variable">$gainsboro</span>;</span><br><span class="line"><span class="variable">$link-decoration-color</span>        = <span class="variable">$grey-dark</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$blockquote-color</span>             = <span class="variable">$grey-dim</span>;</span><br><span class="line"><span class="variable">$blockquote-color-dark</span>        = <span class="variable">$grey</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Global border color.</span></span><br><span class="line"><span class="variable">$border-color</span>                 = <span class="variable">$grey-light</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Background color for &lt;body&gt;</span></span><br><span class="line"><span class="comment">//例如这里我想修改bg-color（background-color),我只需要修改相应的定义就可以了</span></span><br><span class="line"><span class="variable">$body-bg-color</span>                = <span class="variable">$aliceblue</span>; <span class="comment">//这里我已经将原本的颜色改成了我之前添加的aliceblue</span></span><br><span class="line"><span class="variable">$body-bg-color-dark</span>           = <span class="selector-id">#282828</span>;</span><br><span class="line"><span class="variable">$content-bg-color</span>             = white; <span class="comment">//也可以和作者一样直接使用颜色名，或者颜色编号来定义，但是不推荐，不利于整体修改。</span></span><br><span class="line"><span class="variable">$content-bg-color-dark</span>        = <span class="variable">$black-dim</span>;</span><br></pre></td></tr></table></figure>



<p>Tips：原本的主题是黑白灰风格，如果我只是简单的想把黑色换成其他颜色，可以直接ctrl+f搜索对应的颜色定义，直接改成你想要的颜色即可</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230326001116137.png" alt="image-20230326001116137"></p>
<p>虽然<code>base.styl</code>提供了很多地方可以修改，但是还有一部分页面的构成部分的颜色不是在这里修改的，如果实在找不到，那么先阅读完下面的章节，我会再介绍一个<strong>笨办法</strong></p>
<h4 id="挑几个经常修改到的样式来举栗子"><a href="#挑几个经常修改到的样式来举栗子" class="headerlink" title="挑几个经常修改到的样式来举栗子"></a>挑几个经常修改到的样式来举栗子</h4><p>我们在修改样式的时候，可以用<code>hexo s</code>命令来本地生成页面动态预览</p>
<ol>
<li><p><code>$body-bg-color</code>这个是修改整个页面的底色，我修改成了aliceblue,效果如下</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230326001731671.png" alt="image-20230326001731671"></p>
</li>
<li><p><code>$btn-default-bg </code>修改的是按钮默认的颜色,我修改成了蓝色</p>
<p><code>$btn-default-hover-color</code>修改的是按钮鼠标悬停时默认的颜色,我修改成了蓝色</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230326002249089.png" alt="image-20230326002249089"></p>
</li>
</ol>
<h3 id="muse主题的侧边栏样式修改"><a href="#muse主题的侧边栏样式修改" class="headerlink" title="muse主题的侧边栏样式修改"></a>muse主题的侧边栏样式修改</h3><p>侧边栏的样式比较特殊，他不是在上一节的文件里修改的，他的文件目录在<code>themes\next\source\css\_common\outline\sidebar</code>里面，打开后可以看到里面有不少.styl文件，这些就是构成侧边栏的“组件”的样式，我们可以用谷歌翻译大致翻译出来对应哪个文件。然后就慢慢尝试即可。</p>
<h4 id="以“修改侧边栏收起展开按钮”举例"><a href="#以“修改侧边栏收起展开按钮”举例" class="headerlink" title="以“修改侧边栏收起展开按钮”举例"></a>以“修改侧边栏收起展开按钮”举例</h4><p>直接打开<code>themes\next\source\css\_common\outline\sidebar\sidebar-toggle.styl</code></p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.sidebar-toggle</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="variable">$royolblue</span>; <span class="comment">//修改他的背景颜色</span></span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">45px</span>; </span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="variable">$b2t-position-right</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="variable">$zindex-3</span>;</span><br><span class="line"></span><br><span class="line">  +<span class="built_in">tablet-mobile</span>() &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="variable">$b2t-position-right-mobile</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="variable">$b2t-opacity-hover</span>;</span><br><span class="line"></span><br><span class="line">    if (!hexo-config(&#x27;sidebar.onmobile&#x27;)) &#123;</span><br><span class="line">      <span class="attribute">display</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar-toggle</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.toggle-line</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="variable">$sidebar-highlight</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="推荐按6-3-1的配色配置blog"><a href="#推荐按6-3-1的配色配置blog" class="headerlink" title="推荐按6:3:1的配色配置blog"></a>推荐按6:3:1的配色配置blog</h3><p>最好遵循6:3:1的原则来配置，即主题色占6成，副颜色占3成，剩下1成作为点睛之笔</p>
<p>例如我的blog主题色是aliceblue,副颜色是白色，点睛色是Capri blue，合理的色彩搭配可以更方便自己和别人的阅读，也符合next主题简约大方的内核。</p>
<p>经过修改这些配置文件，我们可以将自己的blog改成自己喜欢的颜色，这里只是基础的依据别人的框架修改，如果想更深度的定制，则需要更多的前端知识，单纯修改背景颜色就只需要看懂background-color这两个单词即可，如果想了解更多css知识，推荐阅读</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS">CSS：层叠样式表 | MDN (mozilla.org)</a></p>
<h2 id="为blog文章设置置顶"><a href="#为blog文章设置置顶" class="headerlink" title="为blog文章设置置顶"></a>为blog文章设置置顶</h2><h3 id="卸载原置顶功能的插件，安装新插件"><a href="#卸载原置顶功能的插件，安装新插件" class="headerlink" title="卸载原置顶功能的插件，安装新插件"></a>卸载原置顶功能的插件，安装新插件</h3><p>next主题自带有插件置顶的命令，但是并不好用，所以我们需要先卸载，再重新安装一次别人的插件</p>
<p>同样的，去<strong>hexo根目录下</strong>打开git bash</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line"></span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在需要置顶的文章的<code>Front-matter</code>中加上<code>top: true</code> 或者<code>top: 任意数字</code>，比如</p>
<p>如果有多篇文章想置顶，则用<code>top: 任意数字</code>给他们排序，1是最大的。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 使用next主题调整blog的样式【持续更新】</span><br><span class="line">date: 2023-03-24 20:09:52</span><br><span class="line">categories: [技术]</span><br><span class="line">tags: [博客编写,hexo,next]</span><br><span class="line">top:true</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>博客编写</tag>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>日后装修的一些设想</title>
    <url>/2023/04/05/b09%20%E6%97%A5%E5%90%8E%E8%A3%85%E4%BF%AE%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%BE%E6%83%B3/</url>
    <content><![CDATA[<p>在增城这边也已经住了有两个月的时间了，碧桂园的精装房的装修风格说不上丑，但是绝对谈不上好看。在工作后我会对这边进行一些轻改造，下面记录一下改造的一些灵感。<span id="more"></span>基本思路是，能不定制就不定制，尽可能选择可移动的家居，方便转换布局。</p>
<h2 id="书房（储物间）"><a href="#书房（储物间）" class="headerlink" title="书房（储物间）"></a>书房（储物间）</h2><p>现有条件：有两扇比较小的窗户加一个鸡肋飘窗，飘窗左侧有网线口以及两个五孔插座。</p>
<p>这个房间的用途主要是放电脑以及杂物，空间比较小，首先需要多加几个插座。</p>
<p>我预计会在这边做一个储物间加电脑房，但是飘窗比较尴尬，那块地方我想做一个地台柜子做到与桌面平齐，用来放书，但是这样放窗边下雨的话比较难搞。</p>
<p>桌子我会选择两张升降桌子顶到两边，靠近网线口的一边就放网络机柜及电脑主机。但是插座的位置比较尴尬，我可能需要一个带电力轨道的桌子，桌子带可调色氛围灯带。打造良好的游戏氛围。</p>
<p>桌子左边的墙放置一个展示柜。</p>
<p>另外，可能这个小房间需要有隔音需求，自带的门隔音确实不行，在里面说话外面听得很清楚。</p>
<p>飘窗对面的墙我打算刷上深色的油漆，直接用黑色的超市货架，用来补充收纳，因为客厅不打算做柜子背景墙，日用品的收纳打算都移到这边。但是置物架不能太宽，不然会影响人在里面的活动空间。</p>
<h2 id="阳台部分"><a href="#阳台部分" class="headerlink" title="阳台部分"></a>阳台部分</h2><h3 id="封窗"><a href="#封窗" class="headerlink" title="封窗"></a>封窗</h3><p>养了猫必须要封窗，现在我用的临时的塑料网围蔽，以及妈妈装的防护网是不够的，第一步我就需要将原来的防护网拆除，栏杆锯掉。但是我不追求大平面落地窗，在原来的栏杆位置做六格窗，中间的格子窗做成平开可移动的，再加上纱窗保证透气。</p>
<p>这个对面楼的邻居有已经做了的，可以直接叫师傅过来照着对面的做就行。</p>
<h3 id="洗衣机、烘干机，以及生活柜子"><a href="#洗衣机、烘干机，以及生活柜子" class="headerlink" title="洗衣机、烘干机，以及生活柜子"></a>洗衣机、烘干机，以及生活柜子</h3><p>现有条件：阳台左侧有墙，右侧没有墙，刷了粗砂漆，左边有一个洗衣机入水口，一个排水口，</p>
<p>这部分我打算在阳台的左侧做一个生活柜子，尺寸顶天立地，占满一整面阳台墙，柜子的左边用来放洗衣机烘干机组合。右边上面放清洁工具组合，右边下面放自动猫砂盆。颜色白色，用密度板做，清洁工具柜内衬不锈钢挡板。</p>
<p>阳台的右侧的墙装晾衣架子的把手。</p>
]]></content>
      <categories>
        <category>树洞</category>
      </categories>
      <tags>
        <tag>思考</tag>
        <tag>树洞</tag>
      </tags>
  </entry>
  <entry>
    <title>抛开工作，思考一下未来</title>
    <url>/2023/04/01/b07%20%E6%8A%9B%E5%BC%80%E5%B7%A5%E4%BD%9C%EF%BC%8C%E6%89%8D%E6%9C%89%E6%97%B6%E9%97%B4%E6%80%9D%E8%80%83/</url>
    <content><![CDATA[<p>最近闲下来有两个月左右，之前工作实在是太忙，感觉自己全身心投入工作中，已经没有时间思考了。就像下棋没有了对策。</p>
<span id="more"></span>

<p>目前在学习培训，感觉又像回到了学生时代，不需要考虑业绩，没有上下级，没有内卷的同事。感觉就是非常爽，虽然现在就业形式都说非常严峻，嘴上说着焦虑，但是身体可不会骗人，走路的步伐都比之前轻松了很多。</p>
<p>现在的状态是纯吃老本，实习加正式工作也存了有一些钱。靠这些钱挺过学习期间是没问题，就怕到时候毕业了一直找不到工作，那就直接gg了。还没开始学习之前，我就已经开始发白日梦，毕业后的工作地点最好选在科学城附近，离家里近，而且差不多也算郊区，到时候可以骑摩托车兜风。</p>
<p>目前学下来还算可以，班上虽然有计算机相关专业的，但是他们的学历不如我，我有自信可以卷赢他们，毕竟在前端这个领域，大家都是小白。经过上周的分享会环节，我发现很多人的表达能力也有问题，在面试时可能一慌张直接就被pass了。</p>
<p>总结一下我的优缺点：</p>
<p>优点：</p>
<ul>
<li>英文还算能用，方便阅读各种技术文档</li>
<li>学东西比较快，并且对编程有强烈的兴趣</li>
<li>家里条件还算不错，目前住家里面不需要房租，可以打持久战</li>
<li>学历有本科，而不是大专</li>
<li>有折腾其他软硬件的经历</li>
</ul>
<p>缺点：</p>
<ul>
<li>几乎0基础转行，没有实际工作经验</li>
<li>目前的存款不能支持我几个月找不到工作，最迟也要在毕业后一个月后找到工作</li>
<li>住的地方离市区太远，对工作地点有要求</li>
</ul>
<p>目前来看，优点很明显，缺点其实说白了就是钱的问题。我需要赶紧努力学，学完尽快找到一份工作保证自己不被饿死，再开始追求福利待遇。在学习的过程中我需要多找几个开源项目练手，提高一下我写代码的质量，尽量能看起来像一个专业人士。</p>
<p>另外，我需要继续提高我的英文水平，我的最终目标是进外企工作，如果有机会外派出国就更好了。我现在在使用百词斩来巩固我的词汇量，但是对于进外企来说，我认为在口语方面还需要提升，所以在找到一份糊口的工作之后需要再思考下一步，是存钱得到一个研究生学历还是先提升英语水平，这个只能走一步看一步先了。</p>
]]></content>
      <categories>
        <category>树洞</category>
      </categories>
      <tags>
        <tag>思考</tag>
        <tag>树洞</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用腾讯云cos实现前端性能监控以及配合picgo实现图床功能</title>
    <url>/2022/06/28/b02%20%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91cos%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E4%BB%A5%E5%8F%8A%E9%85%8D%E5%90%88picgo%E5%AE%9E%E7%8E%B0%E5%9B%BE%E5%BA%8A%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<p>这篇文章花费0元，复现时间约2小时（应该）<span id="more"></span></p>
<h2 id="配置储存桶及上传网站"><a href="#配置储存桶及上传网站" class="headerlink" title="配置储存桶及上传网站"></a>配置储存桶及上传网站</h2><h3 id="第一步：注册"><a href="#第一步：注册" class="headerlink" title="第一步：注册"></a>第一步：注册</h3><p>首先登录腾讯云网站，然后用微信登录，登录后可能需要实名制，按提示实名制登录。</p>
<h3 id="第二步：打开控制台"><a href="#第二步：打开控制台" class="headerlink" title="第二步：打开控制台"></a>第二步：打开控制台</h3><ol>
<li>按图提示打开控制台，打开控制台后搜索“对象存储”，点进搜索出来的“控制台入口-对象存储”进入对象存储控制台。</li>
</ol>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/20230324152150.png"></p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/20230324152840.png"></p>
<ol start="2">
<li>点击储存桶列表，点击新建储存桶</li>
</ol>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/20230324153611.png"><br>3. “访问权限”建议采用公有读私有写，其余都是默认，然后如上面的图片所示，你就会拥有一个储存桶<br><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/20230324153738.png"></p>
<ol start="4">
<li>留意一下储存桶名称以及所属地域，后续有用。</li>
</ol>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324155557186.png" alt="image-20230324155557186"></p>
<h3 id="第三步：配置储存桶"><a href="#第三步：配置储存桶" class="headerlink" title="第三步：配置储存桶"></a>第三步：配置储存桶</h3><p>上面的步骤后，我们就拥有了一个储存桶，点击配置管理，进入储存桶管理界面，<strong>左边的导航栏</strong>可以看到”文件列表””基础配置“两栏</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324160140954.png" alt="image-20230324160140954"></p>
<h4 id="打开文件列表，上传文件"><a href="#打开文件列表，上传文件" class="headerlink" title="打开文件列表，上传文件"></a>打开文件列表，上传文件</h4><p>我们的项目文件通常会包括css,sass,img,以及各个html页面。在这里一次性打包上去</p>
<p><em><strong>注意</strong></em>：</p>
<ul>
<li>上传文件后内部文件夹的关系，例如将项目打包成一个大文件夹上传，html文件中引用css使用了.&#x2F;  表示平级，上传后会导致引用的路径出错（外包文件夹导致相对路径有变）</li>
<li>解决方法：统一项目编写时文件引用的路径，如果使用了平级路径，则不要外包文件夹</li>
<li>思考上传后的相对路径！！</li>
</ul>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324160815918.png" alt="image-20230324160815918"></p>
<h4 id="配置静态网站"><a href="#配置静态网站" class="headerlink" title="配置静态网站"></a>配置静态网站</h4><p>点击基础配置-静态网站，默认“当前状态”是关闭的，我们把它打开</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324161918091.png" alt="image-20230324161918091"></p>
<p>打开后就有如下界面：</p>
<ul>
<li>红色框框里的链接代表你的储存桶的域名，可以在任何设备通过这个链接访问你的储存桶</li>
<li>蓝色框框里的需要你填一个索引文档的路径，这里是填你<em><strong>上一步上传的文件</strong></em>里的首页，建议采用你想<em><strong>展示的首页</strong></em>的相对路径填入，这样通过链接访问你的储存桶就会第一时间打开这个<em><strong>展示的首页</strong></em></li>
<li>一定要注意<em><strong>相对路径</strong></em>！！</li>
<li>配置成功后复制红色框框里的链接到浏览器，成功的话就会显示你的主页。其他人也可以通过你的这个链接来访问你的主页。</li>
<li>如果设置后提示404或者dns错误，或者是index没有样式，多半是上面提到的<em><strong>引入路径</strong></em>的问题。仔细检查。</li>
</ul>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324162218939.png" alt="image-20230324162218939"></p>
<p>这时候你的储存桶就已经配置完毕了，并且成功配置了一个域名给你的网站。</p>
<h2 id="使用前端性能监控页面性能"><a href="#使用前端性能监控页面性能" class="headerlink" title="使用前端性能监控页面性能"></a>使用前端性能监控页面性能</h2><h3 id="打开前端性能监控控制台及购买"><a href="#打开前端性能监控控制台及购买" class="headerlink" title="打开前端性能监控控制台及购买"></a>打开前端性能监控控制台及购买</h3><p>同上，在控制台页面搜索“前端性能监控”，并进入</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324163523307.png" alt="image-20230324163523307"></p>
<p>然后在数据总览页面点击应用接入</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324163804692.png" alt="image-20230324163804692"></p>
<p>按提示输入各种信息，红框处建议填*略过检查。首次应用接入需要点击蓝色框框的链接去创建一个业务系统。</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324163942616.png" alt="image-20230324163942616"></p>
<p>创建业务系统，如果人在国内就选择广州，提示是34元&#x2F;百万条，但是新用户<em><strong>点击购买后有50万条&#x2F;月</strong></em>的优惠，持续六个月，四舍五入等于白嫖。</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324164140591.png" alt="image-20230324164140591"></p>
<p>领取或购买后就可以回到刚刚的页面，选择刚刚创建的业务系统</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324164421897.png" alt="image-20230324164421897"></p>
<p>然后点击接入！接入后会有一段js代码，复制他，粘贴到你希望监控性能的网站的header里。第一步我们上传了网站并绑定了腾讯云的子域名，我就复制到这个index里面，</p>
<ul>
<li>复制完了之后要<em><strong>重新上传</strong></em></li>
<li>重新上传可以只传有修改的文件，同名称的会自动覆盖。</li>
</ul>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324164700237.png" alt="image-20230324164700237"></p>
<p>重新上传后再回到性能监控的主页，就会发现多了一个监视窗口。这个时候我们通过储存桶里的链接访问几次网站，稍等一会就会有数据了。点击图表按钮，则会到更详细的监控页面</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324165114674.png" alt="image-20230324165114674"></p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324165317646.png" alt="image-20230324165317646"></p>
<p>但是要注意访问流量的消耗，留意之前我们免费领取的流量，如果访问的人数超出了流量，则会产生费用。</p>
<h2 id="picgo图床功能"><a href="#picgo图床功能" class="headerlink" title="picgo图床功能"></a>picgo图床功能</h2><h3 id="picgo功能及配置"><a href="#picgo功能及配置" class="headerlink" title="picgo功能及配置"></a>picgo功能及配置</h3><p>picgo可以很方便的配合typora输出笔记，他可以将图片转化为在线链接插入到md文档中，本篇blog也是采用这种方式编写。</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324165819377.png" alt="image-20230324165819377"></p>
<p><a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#%E8%85%BE%E8%AE%AF%E4%BA%91cos">配置手册 | PicGo</a></p>
<p>具体可以看官方文档配置picgo</p>
<h4 id="typora配合设置"><a href="#typora配合设置" class="headerlink" title="typora配合设置"></a>typora配合设置</h4><ol>
<li><p>打开文件-偏好设置</p>
</li>
<li><p>选择图片选项，按图配置，pico路径可以直接选择桌面的快捷方式<img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230324170023355.png" alt="image-20230324170023355"></p>
</li>
<li><p>配置完成后，验证图片上传选项测试，会有成功提示</p>
</li>
<li><p>配合<a href="https://www.snipaste.com/">snipaste截图工具</a>来截图，复制后直接粘贴到typora上，就会直接转化为在线图床链接了。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>腾讯云</tag>
        <tag>图床应用</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记17-继承</title>
    <url>/2022/05/07/b23%20%E7%BB%A7%E6%89%BF/</url>
    <content><![CDATA[<h2 id="继承"><a href="#继承" class="headerlink" title="继承 "></a>继承 <span id="more"></span></h2><h3 id="1-认识继承"><a href="#1-认识继承" class="headerlink" title="1. 认识继承"></a>1. 认识继承</h3><p>关于 构造函数 的高阶应用<br>继承是出现在两个构造函数之间的关系</p>
<p>当构造函数 B 的实例，使用了构造函数 A 内书写的属性和方法<br>此时我们就说 构造函数 B 继承自 构造函数 A<br>构造函数 A 是构造函数 B 的父类<br>构造函数 B 是构造函数 A 的子类</p>
<ol>
<li>原型继承</li>
<li>call 继承</li>
<li>组合继承</li>
<li>es6 的继承(完美)</li>
</ol>
<h3 id="2-原型继承"><a href="#2-原型继承" class="headerlink" title="2. 原型继承"></a>2. 原型继承</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Student</span>(<span class="params">gender</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">gender</span> = gender;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当Student 构造函数书写完毕后</span></span><br><span class="line"><span class="comment">//此时 会伴生出一个Student.prototype的对象数据类型</span></span><br><span class="line"><span class="comment">//我们可以向Student.prototype添加属性</span></span><br><span class="line"><span class="comment">// Student.prototype.a=100</span></span><br><span class="line"><span class="comment">// 我们也可以重新赋值</span></span><br><span class="line"><span class="comment">//本身你的Student.prototype保存的是一个 对象数据类型的 地址</span></span><br><span class="line"><span class="comment">//我 给你赋值为一个 新的 对象数据类型 的 地址</span></span><br><span class="line"><span class="comment">//就把你本身保存的地址覆盖掉</span></span><br><span class="line"><span class="comment">// const obj = &#123;</span></span><br><span class="line"><span class="comment">//   msg: &#x27;objjjjjj&#x27;,</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// //验证覆盖</span></span><br><span class="line"><span class="comment">// Student.prototype = obj;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//实现继承</span></span><br><span class="line"><span class="title class_">Student</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;alex&#x27;</span>, <span class="number">18</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Student.prototype = obj;</span></span><br><span class="line"><span class="title class_">Student</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">play</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;没日没夜的玩&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//目前 s只有play属性和gender属性</span></span><br><span class="line"><span class="comment">//继承就是要s有name和age 还有sayHi</span></span><br><span class="line"><span class="keyword">const</span> s = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="comment">// console.log(s.name, s.age, s.sayHi);</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s);</span><br></pre></td></tr></table></figure>

<ul>
<li>核心:子类原型指向父类的 实例</li>
<li>子类.prototype &#x3D; new 父类</li>
</ul>
<p>优缺点:<br>优化:父类的 构造函数体内 和 原型上的所有内容都能继承<br>缺点:继承下来的属性不在自己身上，子类的实例的所有属性分开了两部分书写，s 自身有一部份，原型上面有一部份。同样是给 子类的实例 使用的属性，在两个位置传递参数 new Person()传递一部份，new Student() 传递一部份</p>
<p>不是不可以，只是不够友好</p>
<h3 id="3-call-继承"><a href="#3-call-继承" class="headerlink" title="3. call 继承"></a>3. call 继承</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      call继承</span></span><br><span class="line"><span class="comment">      + 核心 利用call调用父类的构造函数</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Student</span>(<span class="params">gender, ...arg</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">gender</span> = gender;</span><br><span class="line">  <span class="comment">//this 只要你new 永远是实例对象</span></span><br><span class="line">  <span class="comment">//实现继承</span></span><br><span class="line">  <span class="title class_">Person</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, ...arg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// function Student(gender, name, age) &#123;</span></span><br><span class="line"><span class="comment">//   this.gender = gender;</span></span><br><span class="line"><span class="comment">//   //this 只要你new 永远是实例对象</span></span><br><span class="line"><span class="comment">//   //实现继承</span></span><br><span class="line"><span class="comment">//   Person.call(this, name, age);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="title class_">Student</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">play</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;没日没夜的玩&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> s = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;alex&#x27;</span>, <span class="number">18</span>);</span><br><span class="line"><span class="comment">// Person.call(s, &#x27;alex&#x27;, 18);</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      构造函数 </span></span><br><span class="line"><span class="comment">        构造函数本身也是一个函数</span></span><br><span class="line"><span class="comment">        是函数就能直接调用，可以不和new连用</span></span><br><span class="line"><span class="comment">        只是没有new的话，就没有创建对象的能力</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="comment">//把Person当作一个普通函数来调用，Person内的this-&gt;window</span></span><br><span class="line"><span class="comment">//Person函数体内的两个属性 加给了window</span></span><br><span class="line"><span class="comment">// Person(&#x27;haha&#x27;, 18);不报错</span></span><br><span class="line"><span class="comment">//既然Person能够当作普通函数来调用</span></span><br><span class="line"><span class="comment">//call来调用函数并且改变里面的this指向</span></span><br><span class="line"><span class="comment">// const obj = &#123; msg: &#x27;我是obj&#x27; &#125;;</span></span><br><span class="line"><span class="comment">// Person.call(obj, &#x27;tom&#x27;, 28);</span></span><br><span class="line"><span class="comment">// console.log(obj);</span></span><br></pre></td></tr></table></figure>

<p>核心:利用 call 调用父类的构造函数</p>
<p>优缺点:<br>优点:可以把继承来的属性直接出现在 子类的实例 身上，一个实例需要用的属性可以在同一个位置传递参数<br>缺点:只能继承 构造函数体内书写的内容， 构造函数 原型上的 不能继承</p>
<h3 id="4-组合继承"><a href="#4-组合继承" class="headerlink" title="4. 组合继承"></a>4. 组合继承</h3><p>原型继承和 call&#x2F;apply 继承 优缺点刚好互补<br>一种新的相对完美的继承方式就出来了，利用好这两种方式的优缺点</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      组合继承:</span></span><br><span class="line"><span class="comment">        核心:把 原型继承 和 call继承 合在一起</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Student</span>(<span class="params">gender, ...arg</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">gender</span> = gender;</span><br><span class="line">  <span class="comment">//实现call继承，</span></span><br><span class="line">  <span class="comment">//目的:把构造函数体内的属性都拿到</span></span><br><span class="line">  <span class="title class_">Person</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, ...arg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//实现原型继承</span></span><br><span class="line"><span class="comment">//目的:拿到Person.prototype上的方法</span></span><br><span class="line"><span class="comment">//这里new Person()可以不用写，因为对象属性的访问机制</span></span><br><span class="line"><span class="comment">// Student.prototype = new Person(&#x27;jack&#x27;, 18);</span></span><br><span class="line"><span class="title class_">Student</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"><span class="title class_">Student</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">play</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;没日没夜的玩&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> s = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;alex&#x27;</span>, <span class="number">88</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s.<span class="property">name</span>, s.<span class="property">age</span>); <span class="comment">//alex 88</span></span><br></pre></td></tr></table></figure>

<h3 id="5-es6-继承"><a href="#5-es6-继承" class="headerlink" title="5. es6 继承"></a>5. es6 继承</h3><ol>
<li>使用 extends 关键字<br>class 子类 extends 父类{…}</li>
<li>在子类的 constructor 内书写<br>super()</li>
</ol>
<p>注意:必须两个条件同时书写，super 必须写在所有的 this 之前，父类如果是一个 es5 的构造函数，那么也可以正常继承</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="comment">// class Person &#123;</span></span><br><span class="line"><span class="comment">//   constructor(name, age) &#123;</span></span><br><span class="line"><span class="comment">//     this.name = name;</span></span><br><span class="line"><span class="comment">//     this.age = age;</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">//   sayHi() &#123;</span></span><br><span class="line"><span class="comment">//     console.log(&#x27;hello world&#x27;);</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//es5的</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Person</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">gender, name, age</span>) &#123;</span><br><span class="line">    <span class="comment">//super就类似于call调用父类构造函数</span></span><br><span class="line">    <span class="comment">//把name和age传递过去</span></span><br><span class="line">    <span class="variable language_">super</span>(name, age);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">gender</span> = gender;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">play</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;没日没夜的玩&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> s = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;alex&#x27;</span>, <span class="number">18</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记16-原型</title>
    <url>/2022/05/05/b21%20%E5%8E%9F%E5%9E%8B/</url>
    <content><![CDATA[<h2 id="原型"><a href="#原型" class="headerlink" title="原型 "></a>原型 <span id="more"></span></h2><ul>
<li>原型的出现，就是为了解决 构造函数的缺点</li>
<li>也就是给我们提供了一个给对象添加函数的方法</li>
</ul>
<h3 id="prototype-显示原型"><a href="#prototype-显示原型" class="headerlink" title="prototype 显示原型"></a>prototype 显示原型</h3><ul>
<li>每个函数天生自带的一个属性，叫 prototype，是一个对象空间</li>
<li>既然每个函数都有，构造函数也是函数，构造函数也有这个对象空间</li>
<li>这个<code>prototype</code>的对象空间可以由函数名来访问</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>); <span class="comment">//是一个对象</span></span><br></pre></td></tr></table></figure>

<ul>
<li>是对象，我们就可以往里面放东西</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// let obj = &#123; &#125;</span></span><br><span class="line"><span class="comment">// obj.name = &quot;xxx&quot;</span></span><br><span class="line"><span class="comment">// obj.sayHi = function()&#123;&#125;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">name</span> = <span class="string">&#x27;prototype&#x27;</span>;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>); <span class="comment">//有属性有方法</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>.<span class="property">sayHi</span>); <span class="comment">//undefined 访问不到</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p1.<span class="property">name</span>, p1.<span class="property">sayHi</span>); <span class="comment">//能访问到</span></span><br></pre></td></tr></table></figure>

<ul>
<li>我们发现了一个叫做<code>prototype</code>的空间和函数有关</li>
<li>并且我们可以向里面放一些东西</li>
<li>重点:在函数的 prototype 里面存储的内容，不是给函数本身使用的，是给函数的每一个实例化对象使用的</li>
</ul>
<h3 id="proto-隐式原型"><a href="#proto-隐式原型" class="headerlink" title="__proto__ 隐式原型"></a><code>__proto__</code> 隐式原型</h3><ul>
<li>每个对象天生自带的一个属性，叫做<code>__proto__</code>,也是一个对象空间</li>
<li>既然每个对象都有，实例化对象也是对象，每一个实例化的对象都有这个属性</li>
<li>这个<code>__proto__</code>对象空间是给对象使用的</li>
<li>当你访问对象中的一个属性的时候<ul>
<li>如果这个对象本身有这个属性，那么直接给你结果</li>
<li>如果没有，就会去<code>__proto__</code>这个对象空间里面找，有的话就给你结果</li>
<li>未完待续</li>
</ul>
</li>
<li>那么这个<code>__proto__</code>指向哪里？<br>这个对象由那个构造函数 new 出来<br>那么这个对象的<code>__proto__</code>就指向该构造函数的<code>prototype</code></li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"><span class="comment">//p.__proto__和Person.prototype 就是一个空间</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">__proto__</span> === <span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>); <span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<ul>
<li>实例化对象的隐式原型和构造函数的显示原型是同一个空间</li>
<li>我们就可以通过构造函数的<code>prototype</code>来给实例化对象添加属性</li>
<li>对象访问属性的时候，可以去自己的<code>__proto__</code>中查找</li>
<li>之前的构造函数不合理的地方就解决了<ul>
<li>我们把对象的方法放在构造函数的<code>prototype</code>上</li>
<li>实例化的对象访问的时候就去自己的<code>__proto__</code></li>
<li>也可以使用</li>
</ul>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你好&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"><span class="keyword">let</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">p.<span class="title function_">sayHi</span>();</span><br><span class="line">p1.<span class="title function_">sayHi</span>();</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      p本身没有sayHi方法，就去自己的__proto上找</span></span><br><span class="line"><span class="comment">      p.__proto__就是Person.prototype</span></span><br><span class="line"><span class="comment">      我们在上一步 给Person.prototype添加了一个sayHi方法</span></span><br><span class="line"><span class="comment">      p.sayHi()肯定能执行</span></span><br><span class="line"><span class="comment">      */</span></span><br></pre></td></tr></table></figure>

<p>p 和 p1 使用的实际上就是同一个函数</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      原型:</span></span><br><span class="line"><span class="comment">         显示 prototype</span></span><br><span class="line"><span class="comment">            每一个函数天生自带，是一个对象数据类型</span></span><br><span class="line"><span class="comment">            构造函数也是函数，所以也有prototype</span></span><br><span class="line"><span class="comment">            里面有一个constructor的属性 1. 表明我是谁自带的prototype 2.指向自己的构造函数</span></span><br><span class="line"><span class="comment">            是一个对象，我们可以往里面添加属性</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         隐式 __proto__</span></span><br><span class="line"><span class="comment">            每个对象天生自带，也是一个对象数据类型</span></span><br><span class="line"><span class="comment">            实例对象也是对象 所以也有__proto__</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        对象属性的访问规则</span></span><br><span class="line"><span class="comment">          1. 自己有就给你</span></span><br><span class="line"><span class="comment">          2. 自己没有就去__proto__上找 有给你</span></span><br><span class="line"><span class="comment">          没有？？</span></span><br><span class="line"><span class="comment">      </span></span><br><span class="line"><span class="comment">      以后写构造函数的时候</span></span><br><span class="line"><span class="comment">          属性直接写在函数体内</span></span><br><span class="line"><span class="comment">          方法写在构造函数的显示原型上(挂载) </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;alex&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//给Person的原型上添加了一个属性</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">a</span> = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//p.__proto__.a=100</span></span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">a</span>); <span class="comment">//100</span></span><br></pre></td></tr></table></figure>

<h3 id="面向对象的开发思想"><a href="#面向对象的开发思想" class="headerlink" title="面向对象的开发思想"></a>面向对象的开发思想</h3><p>核心:高内聚低耦合</p>
<p>意义:<br>在开发的时候<br>首先写一个构造函数<br>这个构造函数可以生成能够完成对应的功能对象</p>
<h3 id="原型和原型链"><a href="#原型和原型链" class="headerlink" title="原型和原型链"></a>原型和原型链</h3><ul>
<li><p>原型:每个函数天生自带 prototype 对象数据类型</p>
<ul>
<li>作用：由构造函数 向原型上添加方法，给该构造函数的所有实例对象用</li>
<li>为了解决将方法写在构造函数体内造成的资源浪费</li>
</ul>
</li>
<li><p>原型链：</p>
<ul>
<li>用<code>__proto__</code>串联起来的对象链状结构</li>
<li>作用:为了对象的访问机制服务的</li>
<li>注意:只是<code>__proto__</code>串联起来的对象，千万不要往 prototype 靠</li>
</ul>
</li>
</ul>
<p>万物皆对象</p>
<p>问题</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">nam, age, gender</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">gender</span> = gender;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hahah&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;alex&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p1);</span><br><span class="line"><span class="comment">//问题一：p1的__proto__是谁？</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p1.<span class="property">__proto__</span> === <span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>); <span class="comment">//true</span></span><br><span class="line"><span class="comment">//2.  Person的__proto__是谁？</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      Person是构造函数，同时是一个函数 同时也是一个对象</span></span><br><span class="line"><span class="comment">      只要是对象就会有__proto__属性</span></span><br><span class="line"><span class="comment">      js内有一个内置的构造函数叫做Function 只要是函数 都可以看作Function的实例</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>.<span class="property">__proto__</span> === <span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3. Person.prototype.__proto__是谁？</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      Person的prototype是函数天生自带的一个对象数据类型</span></span><br><span class="line"><span class="comment">      只要是对象就会有__proto__</span></span><br><span class="line"><span class="comment">      js内有一个内置的构造函数 叫做 Object 只要是对象 都可以看作Object的实例</span></span><br><span class="line"><span class="comment">      Person.prototype对象数据类型 是对象 可以看作Object的实例</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">__proto__</span> === <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4. Function 的__proto__？</span></span><br><span class="line"><span class="comment">//Function是一个构造函数，是函数也是对象</span></span><br><span class="line"><span class="comment">//Function自己是自己的实例，自己是自己的构造函数</span></span><br><span class="line"><span class="comment">//js中 他叫做顶级函数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Function</span>.<span class="property">__proto__</span> === <span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>);</span><br><span class="line"><span class="comment">//5. Function.prototype.__proto__ ?</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      Function.prototype 是函数天生自带一个对象数据类型</span></span><br><span class="line"><span class="comment">      是对象就有__proto__</span></span><br><span class="line"><span class="comment">      把Function.prototype看作Object的实例</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">__proto__</span> === <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>);</span><br><span class="line"><span class="comment">//6. Object.__proto__?</span></span><br><span class="line"><span class="comment">//Object是构造函数 是对象也是函数</span></span><br><span class="line"><span class="comment">// 只要是对象就有__proto__</span></span><br><span class="line"><span class="comment">// 是构造函数 是函数 是函数 看作Function的实例</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="property">__proto__</span> === <span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>);</span><br><span class="line"><span class="comment">//7.Object.prototype.__proto__?</span></span><br><span class="line"><span class="comment">//Object.prototype是函数天生自带的一个对象数据类型</span></span><br><span class="line"><span class="comment">//是对象 就有__proto__</span></span><br><span class="line"><span class="comment">//在js Object顶级对象 Object.prototype叫做顶级原型</span></span><br><span class="line"><span class="comment">//Object.prototype唯一一个没有__proto__的数据类型</span></span><br><span class="line"><span class="comment">// null</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">__proto__</span>); <span class="comment">//null</span></span><br></pre></td></tr></table></figure>

<h3 id="对象访问机制"><a href="#对象访问机制" class="headerlink" title="对象访问机制"></a>对象访问机制</h3><p>当你访问一个对象的属性的时候<br>首先在自己身上查找,如果有，给你 停止查找<br>如果没有，自己去<strong>proto</strong>上找<br>如果还没有，再去<strong>proto</strong>上 找<br>依此类推，直到 顶级原型上(Object.prototype)都没有，返回 undefined</p>
<p>结论<br>Object.prototype 添加的内容，所有的对象数据类型都可以使用<br>Function.prototype 添加的内容，所有的函数数据类型都可以使用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;alex&#x27;</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = <span class="number">18</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">gender</span> = <span class="string">&#x27;男&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">a</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Person.prototype&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">b</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Object.prototype&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">c</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Function.prototype&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">p.<span class="title function_">a</span>();</span><br><span class="line">p.<span class="title function_">b</span>();</span><br><span class="line"><span class="comment">// p.c(); 报错</span></span><br><span class="line"><span class="comment">// Person.a();报错</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="title function_">b</span>();</span><br><span class="line"><span class="title class_">Person</span>.<span class="title function_">c</span>();</span><br></pre></td></tr></table></figure>

<p>例题</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getName</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> getName;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Father</span>(<span class="params"></span>) &#123;</span><br><span class="line">  getName = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Father</span>.<span class="property">getName</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title class_">Father</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getName</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>);</span><br><span class="line">&#125;;</span><br><span class="line">getName = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对象中的方法</span></span><br><span class="line"><span class="title class_">Father</span>.<span class="title function_">getName</span>(); <span class="comment">//2</span></span><br><span class="line"><span class="comment">//全局的getName方法</span></span><br><span class="line"><span class="title function_">getName</span>(); <span class="comment">//4</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Father</span>.<span class="title function_">getName</span>(); <span class="comment">//2 &#123;&#125;</span></span><br><span class="line"><span class="comment">//Father的实例去找getName</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Father</span>().<span class="title function_">getName</span>(); <span class="comment">//3 undefined</span></span><br><span class="line"><span class="comment">//new Father()=&gt;实例对象</span></span><br><span class="line"><span class="comment">// new 实例对象.getName()</span></span><br><span class="line"><span class="keyword">new</span> <span class="keyword">new</span> <span class="title class_">Father</span>().<span class="title function_">getName</span>(); <span class="comment">//3 &#123;&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记16-v8引擎的个人理解</title>
    <url>/2022/05/05/b22%20v8%E5%BC%95%E6%93%8E%E7%9A%84%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h2 id="js的运行原理"><a href="#js的运行原理" class="headerlink" title="js的运行原理 "></a>js的运行原理 <span id="more"></span></h2><h3 id="1-v8引擎的原理"><a href="#1-v8引擎的原理" class="headerlink" title="1.v8引擎的原理"></a>1.v8引擎的原理</h3><h4 id="1-1-js代码的执行"><a href="#1-1-js代码的执行" class="headerlink" title="1.1 js代码的执行"></a>1.1 js代码的执行</h4><p>script 下载 js执行，操作dom</p>
<p>js作为高阶语言，js代码的执行，也会转成010001的机器码形式，交给硬件运行</p>
<p><strong>chome</strong></p>
<ul>
<li><p>v8的定义</p>
<ol>
<li><p>v8是一个谷歌开源的高性能的引擎，最广泛的用途是浏览器和node.js</p>
</li>
<li><p>C++编写，跨平台的</p>
</li>
</ol>
</li>
</ul>
<h4 id="1-2-v8的架构"><a href="#1-2-v8的架构" class="headerlink" title="1.2 v8的架构"></a>1.2 v8的架构</h4><p>Parse:解析，将js代码转化为抽象语法树（ast），如果函数没有调用，是不会转成ast的。</p>
<p>Ignition：解释器，将ast转化成字节码（byte code）。帮助turbo Fan收集优化信息，如果函数只调用一次，Ignition会执行byte code</p>
<p>TurboFan：编译器，将字节码转成cpu可以直接执行的机器码（01001）</p>
<p><strong>如果一个函数被多次调用，在turboFan中会被定义为“热点函数”</strong></p>
<p>热点函数即优化之后的机器码，如果后面热点函数的参数发生了变化，则又会逆优化为字节码重新生成ast</p>
<h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>scanner 词法分析（lexical analyzer 简写lexer）又叫扫描器</p>
<p>token记号化，tokenization的缩写，也就是sacnner识别到关键字之后就会做预解析或解析的工作</p>
<p>语法分析：</p>
<p>从语法层面上分析，var let function，根据不同的语法生成ast</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记15-函数的this指向</title>
    <url>/2022/05/04/b20%20%E5%87%BD%E6%95%B0%E7%9A%84this%E6%8C%87%E5%90%91/</url>
    <content><![CDATA[<h2 id="函数的-this-指向"><a href="#函数的-this-指向" class="headerlink" title="函数的 this 指向 "></a>函数的 this 指向 <span id="more"></span></h2><h3 id="this-指向的疑惑"><a href="#this-指向的疑惑" class="headerlink" title="this 指向的疑惑"></a>this 指向的疑惑</h3><p>同一个函数，不同的调用，产生了三种不同的结果</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义一个函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;foo函数:&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用方式一：直接调用</span></span><br><span class="line"><span class="title function_">foo</span>(); <span class="comment">//window</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;obj&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line">obj.<span class="property">aaa</span> = foo;</span><br><span class="line"><span class="comment">//调用方式二：对象调用</span></span><br><span class="line">obj.<span class="title function_">aaa</span>();</span><br><span class="line"><span class="comment">//调用方式三 new</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="keyword">new</span> <span class="title function_">foo</span>(); <span class="comment">//b里面是实例对象</span></span><br></pre></td></tr></table></figure>

<ol>
<li>函数在调用时，js 会默认给 this 绑定一个值</li>
<li>this 的绑定和函数定义的位置无关</li>
<li>this 的绑定和调用方式以及调用位置有关系</li>
<li>this 是在运行时被绑定的</li>
</ol>
<p>4 个绑定规则<br>默认绑定<br>隐式绑定<br>显式绑定<br>new 绑定</p>
<h3 id="this-绑定规则一：默认绑定"><a href="#this-绑定规则一：默认绑定" class="headerlink" title="this 绑定规则一：默认绑定"></a>this 绑定规则一：默认绑定</h3><p>独立函数调用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// &#x27;use strict&#x27;;</span></span><br><span class="line"><span class="comment">//独立函数调用在严格模式下都会指向undefined 而不是window</span></span><br><span class="line"><span class="comment">//定义一个函数</span></span><br><span class="line"><span class="comment">//1.普通函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;foo函数:&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">foo</span>(); <span class="comment">//window</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.函数定义在对象中 但是是独立调用</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;obj&#x27;</span>,</span><br><span class="line">  <span class="attr">bar</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;bar&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> baz = obj.<span class="property">bar</span>;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      baz = function () &#123;</span></span><br><span class="line"><span class="comment">          console.log(&#x27;bar&#x27;, this);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="title function_">baz</span>(); <span class="comment">//window</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//3.高阶函数</span></span><br><span class="line"><span class="comment">//函数作为参数或者返回值</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">cb</span>) &#123;</span><br><span class="line">  <span class="title function_">cb</span>();</span><br><span class="line">  <span class="comment">//foo()</span></span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">        cb = function bar()&#123;&#125;</span></span><br><span class="line"><span class="comment">        cb()</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">test</span>(foo); <span class="comment">//window</span></span><br><span class="line"><span class="title function_">test</span>(obj.<span class="property">bar</span>); <span class="comment">//window</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//稍微复杂一丢丢</span></span><br><span class="line"><span class="comment">//都是window</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;复杂&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">  <span class="title function_">test2</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test2</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;复杂&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">  <span class="title function_">test3</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test3</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;复杂&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">test1</span>();</span><br></pre></td></tr></table></figure>

<h3 id="this-绑定规则二-隐式绑定"><a href="#this-绑定规则二-隐式绑定" class="headerlink" title="this 绑定规则二: 隐式绑定"></a>this 绑定规则二: 隐式绑定</h3><p>通过某个对象进行调用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;foo函数:&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">bar</span>: foo,</span><br><span class="line">&#125;;</span><br><span class="line">obj.<span class="title function_">bar</span>(); <span class="comment">//obj对象</span></span><br><span class="line"><span class="keyword">let</span> obj1 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;obj1&#x27;</span>,</span><br><span class="line">  <span class="attr">foo</span>: foo,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> obj2 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;obj2&#x27;</span>,</span><br><span class="line">  <span class="attr">obj1</span>: obj1,</span><br><span class="line">&#125;;</span><br><span class="line">obj1.<span class="title function_">foo</span>(); <span class="comment">//obj1</span></span><br><span class="line">obj2.<span class="property">obj1</span>.<span class="title function_">foo</span>(); <span class="comment">//&#123;name: &#x27;obj1&#x27;, foo: ƒ&#125;</span></span><br><span class="line"><span class="keyword">let</span> bbb = obj1.<span class="property">foo</span>;</span><br><span class="line"><span class="title function_">bbb</span>(); <span class="comment">//window</span></span><br></pre></td></tr></table></figure>

<h3 id="this-绑定规则三-new-绑定"><a href="#this-绑定规则三-new-绑定" class="headerlink" title="this 绑定规则三: new 绑定"></a>this 绑定规则三: new 绑定</h3><p>js 中的函数可以当作类的构造函数来使用，也就是可以使用 new 关键字<br>new 做了那四件事？</p>
<ol>
<li>创建一个新的对象</li>
<li>新的对象会执行 prototype 的连接</li>
<li>这个新对象会被绑定到函数的 this 上(this 的绑定在这一步完成)</li>
<li>如果函数没有返回其他复杂数据类型，那就返回这个新对象</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">//this指向实例对象</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;obj&#x27;</span>); <span class="comment">// &#123;name:&#x27;obj&#x27;&#125;</span></span><br><span class="line"><span class="keyword">let</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;oo&#x27;</span>); <span class="comment">//&#123;name:&#x27;oo&#x27;&#125;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;oooobj&#x27;</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;foo函数&#x27;</span>, <span class="variable language_">this</span>); <span class="comment">//foo &#123;name:&#x27;oooobj&#x27;&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> <span class="title function_">foo</span>();</span><br><span class="line"><span class="comment">//&#123;name:&#x27;oooobj&#x27;&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="this-绑定规则四-显示绑定"><a href="#this-绑定规则四-显示绑定" class="headerlink" title="this 绑定规则四: 显示绑定"></a>this 绑定规则四: 显示绑定</h3><p>隐式绑定的前提条件，调用的对象内部必须有一个对函数的引用，如果没有这样的引用，在进行调用时，会报找不到的错误</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;obj1&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">obj.<span class="title function_">foo</span>(); <span class="comment">//报错</span></span><br></pre></td></tr></table></figure>

<p>正是对象内的函数引用，间接的让 this 绑定到了这个对象上</p>
<p>我们不希望在 对象内部 存着函数的引用，同时又希望在这个对象上进行强制调用<br>js 的所有函数都可以使用 call&#x2F;bind&#x2F;apply 方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;foo&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;obj&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// obj.foo = foo;</span></span><br><span class="line"><span class="comment">// // obj.foo()//obj</span></span><br><span class="line"><span class="comment">// let bar = obj.foo;</span></span><br><span class="line"><span class="comment">// // bar()//window</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//调用函数，并且强制this指向obj</span></span><br><span class="line">foo.<span class="title function_">call</span>(obj); <span class="comment">//obj</span></span><br><span class="line">foo.<span class="title function_">call</span>(<span class="number">123</span>); <span class="comment">//Number &#123;123&#125;</span></span><br><span class="line">foo.<span class="title function_">call</span>(<span class="string">&#x27;abc&#x27;</span>); <span class="comment">//String &#123;&#x27;abc&#x27;&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="call、apply"><a href="#call、apply" class="headerlink" title="call、apply"></a>call、apply</h4><p>通过 call 或者 apply 绑定 this 对象，显示绑定后，this 就会明确的指向绑定的对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">group</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;foo&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;打印参数&#x27;</span>, a, b, c);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">groupEnd</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;oo&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//()调用</span></span><br><span class="line"><span class="title function_">foo</span>(<span class="string">&#x27;obj&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="comment">//call</span></span><br><span class="line"><span class="comment">//第一个参数:绑定this</span></span><br><span class="line"><span class="comment">//参数列表:后续的参数传递进去作为foo的实参</span></span><br><span class="line">foo.<span class="title function_">call</span>(obj, <span class="string">&#x27;obj&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="comment">//apply</span></span><br><span class="line"><span class="comment">//第一个参数:绑定this</span></span><br><span class="line"><span class="comment">//第二个参数:传入的实参，要以数组或者伪数组的形式</span></span><br><span class="line">foo.<span class="title function_">apply</span>(<span class="string">&#x27;apply&#x27;</span>, [<span class="string">&#x27;obj&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>]);</span><br></pre></td></tr></table></figure>

<h4 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h4><p>如果我们希望一个函数总是显示的绑定到一个对象上（不希望对象里面有该函数的引用，也不希望立即调用该函数），怎么做？</p>
<p>bind 方法，创建一个新的绑定函数(bound function,bf)<br>绑定函数是一个 怪异函数对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">group</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;foo&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;打印参数&#x27;</span>, a, b, c);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;args&#x27;</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">groupEnd</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;aaa&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> baz = foo.<span class="title function_">bind</span>(obj);</span><br><span class="line"><span class="title function_">baz</span>(); <span class="comment">//this-&gt;obj</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//bind的其他参数</span></span><br><span class="line"><span class="keyword">let</span> bar = foo.<span class="title function_">bind</span>(obj, <span class="string">&#x27;bbb&#x27;</span>, <span class="number">11</span>, <span class="number">22</span>);</span><br><span class="line"><span class="title function_">bar</span>(<span class="string">&#x27;ccc&#x27;</span>);</span><br><span class="line"><span class="comment">//this-&gt;&#123;name:aaa&#125;</span></span><br><span class="line"><span class="comment">//参数</span></span><br></pre></td></tr></table></figure>

<h3 id="内置函数的绑定"><a href="#内置函数的绑定" class="headerlink" title="内置函数的绑定"></a>内置函数的绑定</h3><p>setTimeout,forEach,div 的点击<br>根据经验</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>click me<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// //定时函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// setTimeout(function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   console.log(this); //window</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;, 1000);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// //点击</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// let btn = document.querySelector(&#x27;button&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// btn.onclick = function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   console.log(this); //button</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// btn.addEventListener(&#x27;click&#x27;, function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   console.log(this); //button</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//forEach</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> names = [<span class="string">&#x27;aaa&#x27;</span>, <span class="string">&#x27;bbb&#x27;</span>, <span class="string">&#x27;ccc&#x27;</span>];</span></span><br><span class="line"><span class="language-javascript">  names.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">ele</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;forEach&#x27;</span>, <span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;, <span class="string">&#x27;obj&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="规则的优先级"><a href="#规则的优先级" class="headerlink" title="规则的优先级"></a>规则的优先级</h3><ol>
<li>默认规则的优先级最低</li>
<li>显示绑定优先级高于隐式绑定</li>
<li>new 绑定高于隐式绑定</li>
<li>new 绑定高于 bind</li>
<li>bind 高于 call apply</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//比较优先级</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;foo&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1.显示绑定和隐式绑定</span></span><br><span class="line"><span class="comment">//1-1 call/apply高于 隐式</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">foo</span>: foo &#125;;</span><br><span class="line">obj.<span class="title function_">foo</span>(); <span class="comment">//obj</span></span><br><span class="line">obj.<span class="property">foo</span>.<span class="title function_">call</span>(<span class="string">&#x27;abc&#x27;</span>); <span class="comment">//String &#123;&#x27;abc&#x27;&#125;</span></span><br><span class="line">obj.<span class="property">foo</span>.<span class="title function_">apply</span>(<span class="string">&#x27;abc&#x27;</span>); <span class="comment">//String &#123;&#x27;abc&#x27;&#125;</span></span><br><span class="line"><span class="comment">//1-2 bind高于隐式绑定</span></span><br><span class="line"><span class="keyword">let</span> bar = foo.<span class="title function_">bind</span>(<span class="string">&#x27;abc&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> obj1 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;ooo&#x27;</span>,</span><br><span class="line">  <span class="attr">bar</span>: bar,</span><br><span class="line">&#125;;</span><br><span class="line">obj1.<span class="title function_">bar</span>(); <span class="comment">//String &#123;&#x27;abc&#x27;&#125;</span></span><br><span class="line"><span class="comment">//2.new的优先级高于隐式绑定</span></span><br><span class="line"><span class="keyword">let</span> obj2 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;obj2&#x27;</span>,</span><br><span class="line">  <span class="attr">foo1</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;foo:&#x27;</span>, <span class="variable language_">this</span>); <span class="comment">//foo1 &#123;&#125;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span> === obj);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">new</span> obj2.<span class="title function_">foo1</span>();</span><br><span class="line"><span class="comment">//3.new 的优先级 高于 bind</span></span><br><span class="line"><span class="keyword">let</span> bindFn = foo.<span class="title function_">bind</span>(<span class="string">&#x27;bbb&#x27;</span>);</span><br><span class="line"><span class="keyword">new</span> <span class="title function_">bindFn</span>(); <span class="comment">//foo &#123;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//4.额外的 bind apply call的</span></span><br><span class="line"><span class="comment">//bind优先级高于 apply call</span></span><br><span class="line">bindFn.<span class="title function_">call</span>(<span class="string">&#x27;call&#x27;</span>); <span class="comment">//String &#123;&#x27;bbb&#x27;&#125;</span></span><br><span class="line">bindFn.<span class="title function_">apply</span>(<span class="string">&#x27;apply&#x27;</span>); <span class="comment">//String &#123;&#x27;bbb&#x27;&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="this-绑定之外的情况"><a href="#this-绑定之外的情况" class="headerlink" title="this 绑定之外的情况"></a>this 绑定之外的情况</h3><h4 id="情况一"><a href="#情况一" class="headerlink" title="情况一"></a>情况一</h4><p>在显示绑定中，传入了 null&#x2F;undefined，这个显示绑定会被忽略，就会使用默认规则</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;foo&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;obj&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line">foo.<span class="title function_">call</span>(obj); <span class="comment">//obj对象</span></span><br><span class="line"><span class="comment">//全部是window</span></span><br><span class="line">foo.<span class="title function_">call</span>(<span class="literal">null</span>);</span><br><span class="line">foo.<span class="title function_">call</span>(<span class="literal">undefined</span>);</span><br><span class="line"><span class="keyword">let</span> bar = foo.<span class="title function_">bind</span>(<span class="literal">null</span>);</span><br><span class="line"><span class="title function_">bar</span>();</span><br></pre></td></tr></table></figure>

<h4 id="情况二-间接函数的引用"><a href="#情况二-间接函数的引用" class="headerlink" title="情况二 间接函数的引用"></a>情况二 间接函数的引用</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;foo&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> obj1 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;obj1&#x27;</span>,</span><br><span class="line">  <span class="attr">foo</span>: foo,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> obj2 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;obj2&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//window??</span></span><br><span class="line"><span class="comment">//赋值的结果是foo函数</span></span><br><span class="line"><span class="comment">//foo普通调用 window</span></span><br><span class="line">(obj2.<span class="property">foo</span> = obj1.<span class="property">foo</span>)();</span><br><span class="line"><span class="comment">// obj1.foo(); //obj1</span></span><br><span class="line"><span class="comment">// obj2.foo = obj1.foo;</span></span><br><span class="line"><span class="comment">// obj2.foo(); //obj2</span></span><br></pre></td></tr></table></figure>

<h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><p>es6 之后的编写函数的方法，比函数表达式更简洁</p>
<h4 id="写法"><a href="#写法" class="headerlink" title="写法"></a>写法</h4><p>():函数的参数<br>{}:函数体</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//之前的书写方式</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo1</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> foo2 = <span class="keyword">function</span> (<span class="params">name, age</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;函数体&#x27;</span>, <span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">foo2</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//箭头函数完整写法</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">foo3</span> = (<span class="params">name, age</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(name, age);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">foo3</span>(<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line"><span class="comment">//练习</span></span><br><span class="line"><span class="keyword">let</span> names = [<span class="string">&#x27;aaa&#x27;</span>, <span class="string">&#x27;bbb&#x27;</span>, <span class="string">&#x27;ccc&#x27;</span>];</span><br><span class="line">names.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">ele, index, arr</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(ele, index, arr);</span><br><span class="line">&#125;);</span><br><span class="line">names.<span class="title function_">forEach</span>(<span class="function">(<span class="params">ele, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(ele, index, arr);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;, <span class="number">1000</span>);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure>

<h4 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> names = [<span class="string">&#x27;aa&#x27;</span>, <span class="string">&#x27;bb&#x27;</span>, <span class="string">&#x27;cc&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> nums = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>];</span><br><span class="line"><span class="comment">//1.如果只有一个参数，()可以省略</span></span><br><span class="line"><span class="comment">// names.forEach(ele=&gt;&#123;console.log(ele);&#125;)</span></span><br><span class="line"><span class="comment">// let newNums = nums.filter(ele=&gt;&#123;return ele%2===0&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.如果函数体中只要一行代码，那么&#123;&#125;可以省略</span></span><br><span class="line"><span class="comment">// names.forEach(ele=&gt;console.log(ele));</span></span><br><span class="line"><span class="comment">//如果带了return 关键字 而且是一行代码 那就不能省略&#123;&#125;</span></span><br><span class="line"><span class="comment">// let newNums = nums.filter(ele=&gt;&#123;return ele%2===0&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//3.只有一行代码，这行代码会作为函数的返回值</span></span><br><span class="line"><span class="comment">// let newNums = nums.filter(ele=&gt;ele%2===0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//4. 如果你要返回一个对象，这个对象必须加()</span></span><br><span class="line"><span class="comment">// let arrFn = () =&gt; [&#x27;abc&#x27;];</span></span><br><span class="line"><span class="comment">//这里的&#123;&#125;代码块 函数体</span></span><br><span class="line"><span class="comment">// let arrFn = () =&gt; &#123;&#125;;</span></span><br><span class="line"><span class="comment">// let arrFn = () =&gt; (&#123; name: &#x27;obj1&#x27; &#125;);</span></span><br><span class="line"><span class="comment">// console.log(arrFn());</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">11</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">19</span>];</span><br><span class="line"><span class="comment">//用箭头函数求所有偶数平方的和</span></span><br><span class="line"><span class="keyword">let</span> res = arr</span><br><span class="line">  .<span class="title function_">filter</span>(<span class="function">(<span class="params">ele</span>) =&gt;</span> ele % <span class="number">2</span> === <span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">map</span>(<span class="function">(<span class="params">ele</span>) =&gt;</span> ele ** <span class="number">2</span>)</span><br><span class="line">  .<span class="title function_">reduce</span>(<span class="function">(<span class="params">prev, ele</span>) =&gt;</span> prev + ele);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line"></span><br><span class="line"><span class="comment">//不要new箭头函数</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">foo</span> = (<span class="params">name</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123; <span class="attr">a</span>: name &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">new</span> <span class="title function_">foo</span>(<span class="string">&#x27;1&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="箭头函数中-this-的使用"><a href="#箭头函数中-this-的使用" class="headerlink" title="箭头函数中 this 的使用"></a>箭头函数中 this 的使用</h3><p>箭头函数中 this 到底指向那？也就是不适用那四条规则，而是根据外层作用域来决定</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;foo&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">foo</span>(); <span class="comment">//window</span></span><br><span class="line">foo.<span class="title function_">apply</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">bar</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;bar&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">bar</span>(); <span class="comment">//window</span></span><br><span class="line"><span class="comment">//也是window</span></span><br><span class="line">bar.<span class="title function_">apply</span>(<span class="string">&#x27;a&#x27;</span>); <span class="comment">//哪怕是显示调用 也没有this 还是找window</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">  <span class="attr">foo</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// let bar = () =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//   console.log(&#x27;里面的bar&#x27;, this);</span></span><br><span class="line">    <span class="comment">// &#125;;</span></span><br><span class="line">    <span class="comment">// return bar;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;里面的bar&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> fn = obj.<span class="title function_">foo</span>();</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      let fn =() =&gt; &#123;</span></span><br><span class="line"><span class="comment">            console.log(&#x27;里面的bar&#x27;, this);</span></span><br><span class="line"><span class="comment">          &#125;;</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">fn.<span class="title function_">apply</span>(<span class="string">&#x27;abc&#x27;</span>); <span class="comment">//window</span></span><br></pre></td></tr></table></figure>

<h3 id="箭头函数中-this-的应用"><a href="#箭头函数中-this-的应用" class="headerlink" title="箭头函数中 this 的应用"></a>箭头函数中 this 的应用</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//模拟一个请求</span></span><br><span class="line"><span class="comment">//封装的请求函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">request</span>(<span class="params">url, callbackFn</span>) &#123;</span><br><span class="line">  <span class="comment">//假设请求的结果在result里面</span></span><br><span class="line">  <span class="keyword">let</span> results = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="comment">//回调函数对结果进行一些处理</span></span><br><span class="line">  <span class="title function_">callbackFn</span>(results);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//实际操作</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">names</span>: [],</span><br><span class="line">  <span class="comment">//network方法请求到数据后放入names</span></span><br><span class="line">  <span class="attr">network</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// //1.早期的方法</span></span><br><span class="line">    <span class="comment">// // console.log(this); //obj</span></span><br><span class="line">    <span class="comment">// let _this = this;</span></span><br><span class="line">    <span class="comment">// //that</span></span><br><span class="line">    <span class="comment">// request(&#x27;/names&#x27;, function (res) &#123;</span></span><br><span class="line">    <span class="comment">//   _this.names = [].concat(res);</span></span><br><span class="line">    <span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.箭头函数</span></span><br><span class="line">    <span class="title function_">request</span>(<span class="string">&#x27;/names&#x27;</span>, <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">names</span> = res;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">obj.<span class="title function_">network</span>();</span><br></pre></td></tr></table></figure>

<h3 id="面试题-1"><a href="#面试题-1" class="headerlink" title="面试题 1"></a>面试题 1</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;window&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;person&#x27;</span>,</span><br><span class="line">  <span class="attr">sayName</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sayName</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> sss = person.<span class="property">sayName</span>;</span><br><span class="line">  <span class="title function_">sss</span>(); <span class="comment">//默认绑定 window</span></span><br><span class="line">  person.<span class="title function_">sayName</span>(); <span class="comment">//隐式绑定 person</span></span><br><span class="line">  person.<span class="title function_">sayName</span>(); <span class="comment">//隐式绑定 person</span></span><br><span class="line">  (b = person.<span class="property">sayName</span>)(); <span class="comment">//间接函数引用 window</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">sayName</span>();</span><br></pre></td></tr></table></figure>

<h3 id="面试题-2"><a href="#面试题-2" class="headerlink" title="面试题 2"></a>面试题 2</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;window&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> person1 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;person1&#x27;</span>,</span><br><span class="line">  <span class="attr">foo1</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">foo2</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">foo3</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">foo4</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// console.log(this);//person1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> person2 = &#123; <span class="attr">name</span>: <span class="string">&#x27;person2&#x27;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//题目开始</span></span><br><span class="line">person1.<span class="title function_">foo1</span>(); <span class="comment">//隐式绑定 person1</span></span><br><span class="line">person1.<span class="property">foo1</span>.<span class="title function_">call</span>(person2); <span class="comment">//显示绑定 person2</span></span><br><span class="line">person1.<span class="title function_">foo2</span>(); <span class="comment">//外层作用域 window</span></span><br><span class="line">person1.<span class="property">foo2</span>.<span class="title function_">call</span>(person2); <span class="comment">//外层 window</span></span><br><span class="line">person1.<span class="title function_">foo3</span>()(); <span class="comment">//默认绑定 window</span></span><br><span class="line"><span class="comment">//改this为person2 改的是foo3</span></span><br><span class="line"><span class="comment">//foo3return出来的函数 没改</span></span><br><span class="line"><span class="comment">//默认绑定 window</span></span><br><span class="line">person1.<span class="property">foo3</span>.<span class="title function_">call</span>(person2)(); <span class="comment">//默认绑定 window</span></span><br><span class="line">person1.<span class="title function_">foo3</span>().<span class="title function_">call</span>(person2); <span class="comment">//显示调用 person2</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">      foo4内的this-&gt;person1</span></span><br><span class="line"><span class="comment">      调用foo4内的一个箭头函数</span></span><br><span class="line"><span class="comment">      这个箭头函数没有this，找外层</span></span><br><span class="line"><span class="comment">      foo4 this-&gt;person1</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">person1.<span class="title function_">foo4</span>()(); <span class="comment">//person1</span></span><br><span class="line"><span class="comment">//把foo4的this绑定为person2</span></span><br><span class="line"><span class="comment">//他是一个箭头函数 找外层 foo4</span></span><br><span class="line">person1.<span class="property">foo4</span>.<span class="title function_">call</span>(person2)(); <span class="comment">//person2</span></span><br><span class="line"><span class="comment">//foo4 内的this-&gt;person1</span></span><br><span class="line"><span class="comment">//箭头函数call没用 找外层 person1</span></span><br><span class="line">person1.<span class="title function_">foo4</span>().<span class="title function_">call</span>(person2); <span class="comment">//person1</span></span><br></pre></td></tr></table></figure>

<h3 id="面试题-3"><a href="#面试题-3" class="headerlink" title="面试题 3"></a>面试题 3</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;window&#x27;</span>;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      1.创建一个空对象</span></span><br><span class="line"><span class="comment">      2.把空对象赋值给this</span></span><br><span class="line"><span class="comment">      3.执行函数体内的代码</span></span><br><span class="line"><span class="comment">      4.将这个新的对象 默认返回</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">foo1</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">foo2</span> = <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">foo3</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">foo4</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//person1 person2 都是Person的实例(instance)</span></span><br><span class="line"><span class="keyword">let</span> person1 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;person1&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> person2 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;person2&#x27;</span>);</span><br><span class="line">person1.<span class="title function_">foo1</span>(); <span class="comment">//隐式绑定 person1</span></span><br><span class="line">person1.<span class="property">foo1</span>.<span class="title function_">call</span>(person2); <span class="comment">//显示绑定 person2</span></span><br><span class="line">person1.<span class="title function_">foo2</span>(); <span class="comment">//上层作用域 person1</span></span><br><span class="line">person1.<span class="property">foo2</span>.<span class="title function_">call</span>(person2); <span class="comment">//上层作用域 person1</span></span><br><span class="line">person1.<span class="title function_">foo3</span>()(); <span class="comment">//默认绑定 window</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      foo3内的this-&gt;person2</span></span><br><span class="line"><span class="comment">       person1.foo3.call(person2) &lt;=&gt;fn</span></span><br><span class="line"><span class="comment">       fn()</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">person1.<span class="property">foo3</span>.<span class="title function_">call</span>(person2)(); <span class="comment">//默认绑定 window</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      foo3内的this-&gt;person1</span></span><br><span class="line"><span class="comment">       person1.foo3()&lt;=&gt;fn</span></span><br><span class="line"><span class="comment">       fn.call(person2)</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">person1.<span class="title function_">foo3</span>().<span class="title function_">call</span>(person2); <span class="comment">//person2</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      foo4-&gt;person1</span></span><br><span class="line"><span class="comment">      person1.foo4() &lt;=&gt; a()=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">      a() 找外层</span></span><br><span class="line"><span class="comment">      foo4 </span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">person1.<span class="title function_">foo4</span>()(); <span class="comment">//person1</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      foo4-&gt;call调用-&gt;person2</span></span><br><span class="line"><span class="comment">      person1.foo4.call(person2) &lt;=&gt; a()=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">      找外层 foo4 </span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">person1.<span class="property">foo4</span>.<span class="title function_">call</span>(person2)(); <span class="comment">//person2</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      foo4 -&gt; person1 </span></span><br><span class="line"><span class="comment">      a()=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">      a.call() 找外层</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">person1.<span class="title function_">foo4</span>().<span class="title function_">call</span>(person2); <span class="comment">//person1</span></span><br></pre></td></tr></table></figure>

<h3 id="面试题-4"><a href="#面试题-4" class="headerlink" title="面试题 4"></a>面试题 4</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;window&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">obj</span> = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;obj&#x27;</span>,</span><br><span class="line">    <span class="attr">foo1</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">foo2</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> person1 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;person1&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> person2 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;person2&#x27;</span>);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      foo1 this-&gt;obj</span></span><br><span class="line"><span class="comment">       person1.obj.foo1() &lt;=&gt; fn</span></span><br><span class="line"><span class="comment">       fn() window</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">person1.<span class="property">obj</span>.<span class="title function_">foo1</span>()(); <span class="comment">//window</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      foo1 this-&gt;person2</span></span><br><span class="line"><span class="comment">      person1.obj.foo1.call(person2) &lt;=&gt; fn</span></span><br><span class="line"><span class="comment">      fn()</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">person1.<span class="property">obj</span>.<span class="property">foo1</span>.<span class="title function_">call</span>(person2)(); <span class="comment">//window</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      foo1-&gt;obj</span></span><br><span class="line"><span class="comment">      fn.call(person2)</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">person1.<span class="property">obj</span>.<span class="title function_">foo1</span>().<span class="title function_">call</span>(person2); <span class="comment">//显示绑定 person2</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      foo2 -&gt; obj</span></span><br><span class="line"><span class="comment">      ()=&gt;&#123;&#125; 找外层  foo2</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">person1.<span class="property">obj</span>.<span class="title function_">foo2</span>()(); <span class="comment">//找外层 (隐式)obj</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      foo2 -&gt; person2</span></span><br><span class="line"><span class="comment">       ()=&gt;&#123;&#125; 找外层  foo2</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">person1.<span class="property">obj</span>.<span class="property">foo2</span>.<span class="title function_">call</span>(person2)(); <span class="comment">//person2</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      foo2 -&gt; obj</span></span><br><span class="line"><span class="comment">      ()=&gt;&#123;&#125;.call()改变不了</span></span><br><span class="line"><span class="comment">      找外层</span></span><br><span class="line"><span class="comment">      foo2</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">person1.<span class="property">obj</span>.<span class="title function_">foo2</span>().<span class="title function_">call</span>(person2); <span class="comment">//obj</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记14-正则表达式</title>
    <url>/2022/05/03/b19%20%E6%AD%A3%E5%88%99/</url>
    <content><![CDATA[<h2 id="正则"><a href="#正则" class="headerlink" title="正则 "></a>正则 <span id="more"></span></h2><h3 id="认识正则"><a href="#认识正则" class="headerlink" title="认识正则"></a>认识正则</h3><p>正则表达式，“规则表达式”<br>由我们来书写规则，专门用来检测字符串是否符合规则<br>最主要的应用场景 – 表单校验</p>
<p>如何创建正则<br>把一些字母和符号写在<code>//</code>中间的东西，叫正则，比如<code>/abcdefg/</code></p>
<p>创建正则分为两种方式: 字面量和构造函数</p>
<ol>
<li>字面量</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/abcdefg/</span>;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>构造函数</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;abcddefg&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>&#x2F;&#x2F;TODO 两种创建方式的区别 欠着</p>
<h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3><p>用来检测和捕获字符串中的内容</p>
<p>test<br>test() 匹配<br>语法:正则.test(“要检测的字符串”)<br>返回值:一个布尔值<br>如果该字符串符合规则，那就是 true<br>否则 false</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/abcd/</span>;</span><br><span class="line"><span class="comment">//字符串内必须包含abcd字符片段</span></span><br><span class="line"><span class="keyword">let</span> res1 = reg.<span class="title function_">test</span>(<span class="string">&#x27;hduiashfdiuahbdfbniaudabcd&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res1); <span class="comment">//true</span></span><br><span class="line"><span class="keyword">let</span> res2 = reg.<span class="title function_">test</span>(<span class="string">&#x27;123&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res2); <span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<p>exec<br>&#x2F;&#x2F;TODO 欠着</p>
<h3 id="元字符–基本字符"><a href="#元字符–基本字符" class="headerlink" title="元字符–基本字符"></a>元字符–基本字符</h3><ol>
<li>元字符<br>所有的文本内容<br>特殊符号，用符号来表示一类内容</li>
<li>标识符<br>书写在正则外面，用来修饰正则表达式</li>
</ol>
<h4 id="基本的元字符"><a href="#基本的元字符" class="headerlink" title="基本的元字符"></a>基本的元字符</h4><ol>
<li><code>\d</code>表示一位数字</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//表示该字符串中至少包含了一位数字(0-9)</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/\d/</span>;</span><br><span class="line"><span class="keyword">let</span> res = reg.<span class="title function_">test</span>(<span class="string">&#x27;das!@#@$#@%$#(1)^&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><code>\D</code>表示一位 非数字</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//表示该字符串中至少包含了一位 非数字 的内容</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/\D/</span>;</span><br><span class="line"><span class="keyword">let</span> res = reg.<span class="title function_">test</span>(<span class="string">&#x27;123(2423424)&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li><code>\s</code> 表示一位 空白内容</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/\s/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;a b&#x27;</span>)); <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;ab&#x27;</span>)); <span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li><code>\S</code> 表示一位 非空白内容</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/\S/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;             1       &#x27;</span>)); <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;              &#x27;</span>)); <span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li><code>\w</code> 表示 一位数字(0-9)字母(a-zA-Z)或者下划线<code>_</code>中的任意一个</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/\w/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;~!@#$%^&amp;*()-+&gt;?&lt;&#x27;</span>)); <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;_&#x27;</span>)); <span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li><code>\W</code>表示一位 非数字字母下划线</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/\w/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;~!@#$%^&amp;*()-+&gt;?&lt;&#x27;</span>)); <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;_&#x27;</span>)); <span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<ol start="7">
<li><code>.</code>表示一位不是\n 的字符</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//字符串中至少包含一位 非换行的内容</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/./</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27; \n&#x27;</span>)); <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;\n\n\n\n\n\n\n&#x27;</span>)); <span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<ol start="8">
<li><code>\</code>转义字符</li>
</ol>
<ul>
<li>把有意义的符号转成没有意义的普通文本</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//检测有一位小数 8.9  5.6</span></span><br><span class="line"><span class="comment">//数字 非\n 数字</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/\d\.\d/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1.5&#x27;</span>)); <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1&amp;5&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1$5&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1 5&#x27;</span>));</span><br><span class="line"><span class="comment">//本身 . 有特殊意义，表示一位非\n</span></span><br><span class="line"><span class="comment">//但是和\ 一起写 \就可以把.转成普通的文本</span></span><br></pre></td></tr></table></figure>

<ul>
<li>把没有意义的文本转成有意义的符号<br>w 没有意义表示字符 w 但是你和\一起写 <code>\w</code>表示一位数字字母下划线</li>
</ul>
<h3 id="元字符–边界符号"><a href="#元字符–边界符号" class="headerlink" title="元字符–边界符号"></a>元字符–边界符号</h3><ul>
<li><code>^</code>表示开头</li>
<li><code>$</code>表示结尾</li>
</ul>
<p>注意:当^和$一起使用的时候，表示的是从开头到结尾</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> reg1 = <span class="regexp">/\d/</span>; <span class="comment">//至少一位数字</span></span><br><span class="line"><span class="keyword">let</span> reg2 = <span class="regexp">/^\d/</span>; <span class="comment">//必须以一位数字开头</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abcd1&#x27;</span>)); <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;abcd1&#x27;</span>)); <span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> reg1 = <span class="regexp">/\d/</span>; <span class="comment">//至少一位数字</span></span><br><span class="line"><span class="keyword">let</span> reg2 = <span class="regexp">/\d$/</span>; <span class="comment">//必须以一位数字结尾</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc1d&#x27;</span>)); <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;abcd1&#x27;</span>)); <span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^\d$/</span>; <span class="comment">//从开头到结尾只能有一位数字</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1a2&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;12&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;123&#x27;</span>));</span><br></pre></td></tr></table></figure>

<h3 id="元字符–限定符号"><a href="#元字符–限定符号" class="headerlink" title="元字符–限定符号"></a>元字符–限定符号</h3><p>限定内容出现的次数</p>
<p>注意:一个限定符只能修饰限定符前面的一个内容出现的次数<br><code>*</code>表示 0 ～多次<br>前面的内容重复至少 0 次，0 ～+∞ 次</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//表示字符串 从开头到结尾 数字出现0,无穷次</span></span><br><span class="line"><span class="comment">//空字符串 0次</span></span><br><span class="line"><span class="comment">//只要有字符串，就必须从开头到结尾是数字而且要0～无穷次</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^\d*$/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27; &#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;$&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;!&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;123&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1234&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;12345&#x27;</span>));</span><br><span class="line"><span class="keyword">let</span> reg1 = <span class="regexp">/\d*/</span>;</span><br><span class="line"><span class="comment">//只要有0～无穷次数字即可</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc1&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc123&#x27;</span>));</span><br></pre></td></tr></table></figure>

<p><code>+</code>表示 1 ～无穷次</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//字符串从开头到结尾 数字至少出现1次</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^\d+$/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>)); <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;12&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;123&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1234&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;12345&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//数字至少一次</span></span><br><span class="line"><span class="keyword">let</span> reg1 = <span class="regexp">/\d+/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc&#x27;</span>)); <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc1&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc123&#x27;</span>));</span><br></pre></td></tr></table></figure>

<p><code>?</code>表示出现 0 ～ 1 次</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//字符串从开头到结尾 数字0～1次</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^\d?$/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;12&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;123&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1234&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;12345&#x27;</span>));</span><br><span class="line"><span class="comment">//有一位是数字0～1</span></span><br><span class="line"><span class="keyword">let</span> reg1 = <span class="regexp">/\d?/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc1&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc123&#x27;</span>)); <span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<p><code>&#123;n&#125;</code>表示指定出现 n 次</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//字符串从开头到结尾 数字出现两次</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^\d&#123;2&#125;$/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;12&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;123&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1234&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;12345&#x27;</span>));</span><br><span class="line"><span class="comment">//表示字符串 数字出现三次</span></span><br><span class="line"><span class="keyword">let</span> reg1 = <span class="regexp">/\d&#123;3&#125;/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc1&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc123&#x27;</span>));</span><br></pre></td></tr></table></figure>

<p><code>&#123;n,&#125;</code>表示至少出现 n 次<br>{0,} 等价于<code>*</code><br>{1,} 等价于<code>+</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//字符串从开头到结尾 数字至少出现两次</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^\d&#123;2,&#125;$/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;12&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;123&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1234&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;12345&#x27;</span>));</span><br><span class="line"><span class="comment">//表示字符串 数字至少出现三次</span></span><br><span class="line"><span class="keyword">let</span> reg1 = <span class="regexp">/\d&#123;3,&#125;/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc1&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc123&#x27;</span>));</span><br></pre></td></tr></table></figure>

<p><code>&#123;n,m&#125;</code>出现 n~m 次<br>{0,1}等价于<code>?</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//字符串从开头到结尾 数字出现2~5次</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^\d&#123;2,5&#125;$/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;12&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;123&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1234&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;12345&#x27;</span>));</span><br><span class="line"><span class="comment">//表示字符串 数字出现3~5次</span></span><br><span class="line"><span class="keyword">let</span> reg1 = <span class="regexp">/\d&#123;3,5&#125;/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc1&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;abc123&#x27;</span>));</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//小坑</span></span><br><span class="line"><span class="comment">//从开始到结束 a两次 b两次 c两次</span></span><br><span class="line"><span class="comment">// aabbcc</span></span><br><span class="line"><span class="comment">//一个限定符号 只能修饰前面的一个内容</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^a&#123;2&#125;b&#123;2&#125;c&#123;2&#125;$/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;aabbcc&#x27;</span>)); <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;abcc&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;acbabc&#x27;</span>)); <span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<h3 id="元字符–特殊符号"><a href="#元字符–特殊符号" class="headerlink" title="元字符–特殊符号"></a>元字符–特殊符号</h3><p><code>()</code></p>
<ol>
<li>一个整体</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//abc要出现两次</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^(abc)&#123;2&#125;$/</span>;</span><br><span class="line">reg.<span class="title function_">test</span>(<span class="string">&#x27;abcabc&#x27;</span>);</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>单独捕获<br>&#x2F;&#x2F;TODO 再说</li>
</ol>
<p><code>|</code> 或者的意思<br>注意：或的边界，要么是<code>()</code>要么是正则的边界</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//字符串从开头到结尾</span></span><br><span class="line"><span class="comment">//要么是abd 要么是acd</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^a(b|c)d$/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;abd&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;abd&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;abcd&#x27;</span>));</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//ab开头或者cd结尾都可</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^ab|cd$/</span>;</span><br><span class="line"><span class="comment">// ^abxxxxxx</span></span><br><span class="line"><span class="comment">// xxxxxcd$</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;abcd&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;ababc&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1234cd&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;ab&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;cd&#x27;</span>));</span><br></pre></td></tr></table></figure>

<p>小练习</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//正则:汽车&#123;2&#125;</span></span><br><span class="line"><span class="comment">//汽车可以是 布加迪 也可以是 阿斯顿马丁</span></span><br><span class="line"><span class="keyword">let</span> reg1 = <span class="regexp">/^(布加迪|阿斯顿马丁)&#123;2&#125;$/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;布加迪布加迪&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;布加迪阿斯顿马丁&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;阿斯顿马丁布加迪&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;阿斯顿马丁阿斯顿马丁&#x27;</span>));</span><br><span class="line"><span class="comment">//字母abc/def 出现两次</span></span><br><span class="line"><span class="keyword">let</span> reg2 = <span class="regexp">/^(abc|def)&#123;2&#125;$/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;abcabc&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;abcdef&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;defabc&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;defdef&#x27;</span>));</span><br></pre></td></tr></table></figure>

<p><code>[]</code><br>包含<br>一个<code>[]</code>可以写多个内容，但是一个<code>[]</code>只占一个字符的位置,表示<code>[]</code>内的任意一个内容都可以<br><code>[0-9]</code>等价于<code>\d</code><br><code>[0-9a-zA-Z_]</code>等价于<code>\w</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//从开始到结束 只有一位字符</span></span><br><span class="line"><span class="comment">//这个字符可以是a 可以是b 可以是c 也可以是d</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^[abcd]$/</span>;</span><br><span class="line"><span class="comment">//(a|b|c|d)</span></span><br></pre></td></tr></table></figure>

<p><code>[^]</code>非<br>一个<code>[^]</code>可以写多个内容，但是一个<code>[^]</code>只占一个字符的位置,表示<code>[^]</code>内的任意一个内容都不可以</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//表示字符串从开始到结束只有一位字符</span></span><br><span class="line"><span class="comment">//这个字符除了 a b c d之外都可以</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^[^abcd]$/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;a&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;b&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;c&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;d&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27; &#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;1&#x27;</span>));</span><br></pre></td></tr></table></figure>

<p><code>-</code> 到 至<br>需要和<code>[]</code>或者<code>[^]</code>连用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//0～9的数字均可</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^[0-9]$/</span>;</span><br></pre></td></tr></table></figure>

<h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>书写在正则表达式外面，专门用来修饰整个正则的符号</p>
<ol>
<li>i(ignore)<br>表示忽略大小写</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/abcd/</span>;</span><br><span class="line"><span class="keyword">let</span> reg1 = <span class="regexp">/abcd/i</span>;</span><br><span class="line">reg.<span class="title function_">test</span>(<span class="string">&#x27;ABCD&#x27;</span>); <span class="comment">//false</span></span><br><span class="line">reg1.<span class="title function_">test</span>(<span class="string">&#x27;ABCD&#x27;</span>); <span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>g(global)<br>&#x2F;&#x2F;TODO 再说</li>
</ol>
<p>练习 四个小正则</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      1. 身份证</span></span><br><span class="line"><span class="comment">        18位数字</span></span><br><span class="line"><span class="comment">        17位数字+x</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="keyword">let</span> regIdCard = <span class="regexp">/^\d&#123;17&#125;(\d|x)$/</span>;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      2. 手机号码</span></span><br><span class="line"><span class="comment">        可以有+86也可以没有</span></span><br><span class="line"><span class="comment">        只接受133 135 138其他均不接受</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">let</span> regPhone = <span class="regexp">/^(\+86)?(133|135|138)\d&#123;8&#125;$/</span>;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      3. 邮箱</span></span><br><span class="line"><span class="comment">      @前面:数字字母下划线6~16位</span></span><br><span class="line"><span class="comment">      @后面:qq 163 sina都可以</span></span><br><span class="line"><span class="comment">      后缀只能是com或者cn</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="keyword">let</span> regEmail = <span class="regexp">/^\w&#123;6,16&#125;@(qq|163|sina)\.(com|cn)$/</span>;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      4. 用户名</span></span><br><span class="line"><span class="comment">        6～12位 只能由数字字母下划线组成</span></span><br><span class="line"><span class="comment">        不能以下划线开头</span></span><br><span class="line"><span class="comment">        [^_] 不光数字字母可以 @#$%^&amp;*()</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"><span class="comment">//经典错误</span></span><br><span class="line"><span class="comment">// let regUserName = /^[^_]\w&#123;5,11&#125;$/;</span></span><br><span class="line"><span class="keyword">let</span> regUserName = <span class="regexp">/^[0-9a-zA-Z]\w&#123;5,11&#125;$/</span>;</span><br></pre></td></tr></table></figure>

<h3 id="还债"><a href="#还债" class="headerlink" title="还债"></a>还债</h3><h4 id="exec"><a href="#exec" class="headerlink" title="exec"></a>exec</h4><p>捕获<br>语法:reg.exec(字符串)<br>作用:从字符串中 把满足正则条件的部份 取出来<br>返回值:</p>
<ol>
<li>原始字符串中没有满足的<br>null</li>
<li>原始字符串中有满足的<ol>
<li>正则没有()也没有 g<br>它的返回值是一个数组<br>索引 0 是第一个满足条件的内容<br>不管捕获多少次，每次都是从原始字符串的索引 0 开始捕获</li>
<li>有 g<br>它的返回值是一个数组<br>索引 0 是第一个满足条件的内容<br>第二次捕获是从第一次捕获的结束位置开始向后查询，知道最后没有为止，再下一次又从头开始</li>
<li>有()<br>它的返回值是一个数组<br>索引 0 是第一个满足条件的内容<br>从索引 1 开始，依次是每个小括号的单独内容<br>()有两个意义:整体，单独捕获 如果不想使用单独捕获，只想作为整体来用需要写成<code>(?:)</code></li>
</ol>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//exec</span></span><br><span class="line"><span class="comment">//1.没有符合的片段 null</span></span><br><span class="line"><span class="comment">// let str = &#x27;asjhdaksjdhuoandjlna&#x27;;</span></span><br><span class="line"><span class="comment">// let reg = /\d&#123;3&#125;/;</span></span><br><span class="line"><span class="comment">// let res = reg.exec(str);</span></span><br><span class="line"><span class="comment">// console.log(res);//null</span></span><br><span class="line"><span class="comment">//2. 有符合规则的片段</span></span><br><span class="line"><span class="comment">//2-1 没有() 没有g</span></span><br><span class="line"><span class="comment">// let str = &#x27;asjhda123ks456jdhuoandjlna&#x27;;</span></span><br><span class="line"><span class="comment">// let reg = /\d&#123;3&#125;/;</span></span><br><span class="line"><span class="comment">// let res = reg.exec(str);</span></span><br><span class="line"><span class="comment">// console.log(res); //[&#x27;123&#x27;]</span></span><br><span class="line"><span class="comment">// let res2 = reg.exec(str);</span></span><br><span class="line"><span class="comment">// console.log(res2); //[&#x27;123&#x27;]</span></span><br><span class="line"><span class="comment">// //2-2 有g</span></span><br><span class="line"><span class="comment">// let str = &#x27;asjhda123ks456jdhuoandjlna&#x27;;</span></span><br><span class="line"><span class="comment">// let reg = /\d&#123;3&#125;/g;</span></span><br><span class="line"><span class="comment">// let res = reg.exec(str);</span></span><br><span class="line"><span class="comment">// console.log(res); //[&#x27;123&#x27;]</span></span><br><span class="line"><span class="comment">// let res2 = reg.exec(str);</span></span><br><span class="line"><span class="comment">// console.log(res2); //[&#x27;456&#x27;]</span></span><br><span class="line"><span class="comment">// let res3 = reg.exec(str);</span></span><br><span class="line"><span class="comment">// console.log(res3); //null</span></span><br><span class="line"><span class="comment">// let res4 = reg.exec(str);</span></span><br><span class="line"><span class="comment">// console.log(res4); //[&#x27;123&#x27;]</span></span><br><span class="line"><span class="comment">// 2-3 有()</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;11010820030223001x&#x27;</span>;</span><br><span class="line"><span class="comment">//返回值是数组，</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/(\d&#123;2&#125;)(\d&#123;2&#125;)(\d&#123;2&#125;)((\d&#123;4&#125;)(\d&#123;2&#125;)(\d&#123;2&#125;)(\d&#123;3&#125;)(?:\d|x))/</span>;</span><br><span class="line"><span class="keyword">let</span> res = reg.<span class="title function_">exec</span>(str);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br></pre></td></tr></table></figure>

<h4 id="两种方式创建的区别"><a href="#两种方式创建的区别" class="headerlink" title="两种方式创建的区别"></a>两种方式创建的区别</h4><ol>
<li>语法不一样</li>
<li>书写标识符的区别</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//字面量直接书写在正则后面</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/123/gi</span>;</span><br><span class="line"><span class="comment">//构造函数 以第二个参数的形式书写</span></span><br><span class="line"><span class="keyword">let</span> reg2 = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;123&#x27;</span>, <span class="string">&#x27;gi&#x27;</span>);</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>拼接字符串<br>字面量不接受拼接字符串<br>构造函数可以</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> s = <span class="string">&#x27;HH&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> s2 = <span class="string">&#x27;MM&#x27;</span>;</span><br><span class="line"><span class="comment">//(HH|MM)</span></span><br><span class="line"><span class="comment">//不可以 识别不了变量</span></span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/(s|s2)/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg);</span><br><span class="line"><span class="keyword">let</span> reg2 = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">`(<span class="subst">$&#123;s&#125;</span>|<span class="subst">$&#123;s2&#125;</span>)`</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg2);</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>基本元字符的书写</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/\s\d\w/</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg);</span><br><span class="line"><span class="keyword">let</span> reg2 = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;\\s\\d\\w&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg2);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      为什么构造函数要写两个\\</span></span><br><span class="line"><span class="comment">      字符串</span></span><br><span class="line"><span class="comment">      被引号包裹的内容叫字符串</span></span><br><span class="line"><span class="comment">      当你在字符串内书写\的时候，表示转义符号</span></span><br><span class="line"><span class="comment">      把紧贴着他的字符 转换</span></span><br><span class="line"><span class="comment">      - 有意义-&gt;没意义</span></span><br><span class="line"><span class="comment">      - 没意义-&gt;有意义</span></span><br><span class="line"><span class="comment">      n</span></span><br><span class="line"><span class="comment">      \n换行</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      new RegExp()</span></span><br><span class="line"><span class="comment">      第一个参数需要一个字符串</span></span><br><span class="line"><span class="comment">      你写的字符串就是正则里面的内容</span></span><br><span class="line"><span class="comment">      想要得到/\d\w/</span></span><br><span class="line"><span class="comment">      写的是\d\w</span></span><br><span class="line"><span class="comment">      但是，在字符串内 \ 转义符</span></span><br><span class="line"><span class="comment">      书写 \w 的时候 就会把w转成有意义的特殊内容</span></span><br><span class="line"><span class="comment">      </span></span><br><span class="line"><span class="comment">      可以使用\把\转义掉</span></span><br><span class="line"><span class="comment">      当你书写\\w 的时候 实际得到的是\w</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;dw&#x27;</span>); <span class="comment">//dw</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;\\d&#x27;</span>); <span class="comment">// \d</span></span><br></pre></td></tr></table></figure>

<h4 id="正则的两个特性"><a href="#正则的两个特性" class="headerlink" title="正则的两个特性"></a>正则的两个特性</h4><ol>
<li>懒惰性<br>每一次捕获都是从 0 开始<br>解决：全局标识符 g</li>
<li>贪婪性<br>贪婪匹配:能拿多少拿多少 尽可能多的匹配内容<br>非贪婪匹配:能拿多少拿多少 尽可能少的匹配内容<br>使用非贪婪的限定符号<br>在原先的限定符后面再写一个?<br><code>*?</code> 0 ～多次 但是 0 次能解决的问题，就不再多<br><code>+?</code>1 ～多次<br><code>?</code>0~1 次<br><code>&#123;n,&#125;?</code><br><code>&#123;n,m&#125;?</code></li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;&lt;p class=&quot;box&quot;&gt;你好世界&lt;/p&gt;&lt;span&gt;hello world&lt;/span&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/&lt;.+&gt;/</span>;</span><br><span class="line"><span class="comment">//贪婪</span></span><br><span class="line"><span class="keyword">let</span> res = reg.<span class="title function_">exec</span>(str);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line"><span class="comment">//非贪婪</span></span><br><span class="line"><span class="keyword">let</span> reg2 = <span class="regexp">/&lt;.+?&gt;/</span>;</span><br><span class="line"><span class="keyword">let</span> res2 = reg2.<span class="title function_">exec</span>(str);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res2);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记11-BOM</title>
    <url>/2022/05/02/b16%20BOM/</url>
    <content><![CDATA[<h2 id="for-循环中的变量的解决方案"><a href="#for-循环中的变量的解决方案" class="headerlink" title="for 循环中的变量的解决方案 "></a>for 循环中的变量的解决方案 <span id="more"></span></h2><p>公共结构</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮4<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="方案一-this"><a href="#方案一-this" class="headerlink" title="方案一 this"></a>方案一 this</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> btns = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">var</span> btn = btns[i];</span><br><span class="line">  btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//拿到对应的btn,因为this永远指向触发的那个元素</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="方案二-先保存索引"><a href="#方案二-先保存索引" class="headerlink" title="方案二 先保存索引"></a>方案二 先保存索引</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      [btn,btn,btn,btn]</span></span><br><span class="line"><span class="comment">      [&#123;index:0&#125;,&#123;index:1&#125;,&#123;&#125;,&#123;&#125;]</span></span><br><span class="line"><span class="comment">     for1:var btn = btns[0]</span></span><br><span class="line"><span class="comment">          btn1.index = 0</span></span><br><span class="line"><span class="comment">      for2:var btn = btns[1]</span></span><br><span class="line"><span class="comment">          btn2.index = 1</span></span><br><span class="line"><span class="comment">      for3:var btn= btns[2]</span></span><br><span class="line"><span class="comment">           btn3.index = 2</span></span><br><span class="line"><span class="comment">      for4:var btn = btns[3]</span></span><br><span class="line"><span class="comment">           btn4.index = 3</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="keyword">var</span> btns = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">var</span> btn = btns[i];</span><br><span class="line">  btn.<span class="property">index</span> = i;</span><br><span class="line">  btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//千万不要在这里拿</span></span><br><span class="line">    <span class="comment">// console.log(this.index);</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(btns[<span class="variable language_">this</span>.<span class="property">index</span>]);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="方案三-通过自定义属性"><a href="#方案三-通过自定义属性" class="headerlink" title="方案三 通过自定义属性"></a>方案三 通过自定义属性</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> btns = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">var</span> btn = btns[i];</span><br><span class="line">  btn.<span class="title function_">setAttribute</span>(<span class="string">&#x27;index&#x27;</span>, i);</span><br><span class="line">  btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;index&#x27;</span>));</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(btns[<span class="variable language_">this</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;index&#x27;</span>)]);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="方案四-forEach"><a href="#方案四-forEach" class="headerlink" title="方案四 forEach"></a>方案四 forEach</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      &#123;ele---index&#125;</span></span><br><span class="line"><span class="comment">      &#123;ele---index&#125;</span></span><br><span class="line"><span class="comment">      &#123;ele---index&#125;</span></span><br><span class="line"><span class="comment">      &#123;ele---index&#125;</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="keyword">var</span> btns = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"><span class="comment">//普通函数可以</span></span><br><span class="line"><span class="comment">// btns.forEach(function (ele, index) &#123;</span></span><br><span class="line"><span class="comment">//   ele.onclick = function () &#123;</span></span><br><span class="line"><span class="comment">//     console.log(index, ele);</span></span><br><span class="line"><span class="comment">//   &#125;;</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"><span class="comment">//箭头函数也可以</span></span><br><span class="line">btns.<span class="title function_">forEach</span>(<span class="function">(<span class="params">ele, index</span>) =&gt;</span> &#123;</span><br><span class="line">  ele.<span class="property">onclick</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(index, ele);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="方案五-let-块级作用域"><a href="#方案五-let-块级作用域" class="headerlink" title="方案五 let 块级作用域"></a>方案五 let 块级作用域</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> btns = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; btns.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  btns[i].<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="方案六-IIFE-闭包"><a href="#方案六-IIFE-闭包" class="headerlink" title="方案六 IIFE(闭包)"></a>方案六 IIFE(闭包)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> btns = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  <span class="comment">//IIFE把i作为实参传递进去，在内层函数使用</span></span><br><span class="line">  btns[i].<span class="property">onclick</span> = (<span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="comment">//每个onclick都构成一个闭包，每个闭包里面都有自己的a</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;)(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// btn[0]= function ()&#123;</span></span><br><span class="line"><span class="comment">//   a =0</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// btn[1]=function ()&#123;</span></span><br><span class="line"><span class="comment">//   a =1</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="方案七-bind-改变-this-指向-call-apply-bind"><a href="#方案七-bind-改变-this-指向-call-apply-bind" class="headerlink" title="方案七 bind 改变 this 指向 call apply bind"></a>方案七 bind 改变 this 指向 call apply bind</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> btns = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  btns[i].<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">i</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i, <span class="variable language_">this</span>);</span><br><span class="line">  &#125;.<span class="title function_">bind</span>(btns[i], i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="comment">// fn.bind()===新函数this 就是对应的按钮</span></span><br></pre></td></tr></table></figure>

<h2 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h2><p>Browser Object Model 浏览器对象模型</p>
<ul>
<li>BOM 的顶级对象是 window<ul>
<li>所以和 BOM 相关的内容 都是 window.xxxx</li>
<li>但是在书写的时候，可以省略 window 不写</li>
</ul>
</li>
</ul>
<h3 id="浏览器的窗口尺寸"><a href="#浏览器的窗口尺寸" class="headerlink" title="浏览器的窗口尺寸"></a>浏览器的窗口尺寸</h3><ul>
<li>浏览器的可视窗口的宽度和高度</li>
<li>语法<ol>
<li>window.innerWidth 宽度</li>
<li>window.innerHeight 高度</li>
</ol>
</li>
<li>注意:获取到的尺寸是包含滚动条在内的</li>
</ul>
<h3 id="浏览器的弹出层"><a href="#浏览器的弹出层" class="headerlink" title="浏览器的弹出层"></a>浏览器的弹出层</h3><ol>
<li>window.alert() 提示框</li>
<li>window.confirm() 确认框<br>在提示框的基础上多了一个 取消 按钮<br>返回值是一个布尔值<br>用户点击取消的时候 false<br>用户点击确定的时候 true<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> res = <span class="title function_">confirm</span>(<span class="string">&#x27;你确定不吃麦当劳吗？&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br></pre></td></tr></table></figure></li>
<li>window.prompt() 输入框<br>在确认框的基础上多了一个输入框<br>返回值:<br>用户点击取消，那就是 null<br>用户点击的是确定，那就是输入框的内容</li>
</ol>
<p>都会中断程序的继续执行，直到用户操作为止</p>
<h3 id="浏览器的地址栏"><a href="#浏览器的地址栏" class="headerlink" title="浏览器的地址栏"></a>浏览器的地址栏</h3><p>在 window 对象内有一个属性叫做 location 里面存储的都是和地址相关的东西</p>
<ol>
<li>href<br>是一个可读写的属性<br>读:拿到的是当前页面的地址栏的完整信息<br>写:修改当前地址栏</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>);</span><br><span class="line"><span class="comment">//设置</span></span><br><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">div.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&#x27;https://www.4399.com&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>reload()</li>
</ol>
<p>刷新页面<br>注意：不要写在打开页面就会执行的地方</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">div.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">location</span>.<span class="title function_">reload</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="浏览器的历史记录"><a href="#浏览器的历史记录" class="headerlink" title="浏览器的历史记录"></a>浏览器的历史记录</h3><p>window 下有一个成员叫 history，里面存储的都是和历史记录相关的信息</p>
<ol>
<li><p>window.history.back()<br>回到上一个历史页面<br>前提：你必须得有上一个页面，当前的页面必须是从某一个页面跳过来的<br>等价于浏览器左上角的 ⬅️ 按钮</p>
</li>
<li><p>window.history.forward()<br>去到下一个页面<br>前提:你必须得有下一个页面，当前的页面必须是从某一个页面退回来的<br>等价于浏览器左上角的 ➡️ 按钮</p>
</li>
<li><p>window.history.go()<br>正整数 前进<br>0 重新打开当前页面<br>负整数 回退</p>
</li>
</ol>
<h3 id="浏览器的标签页"><a href="#浏览器的标签页" class="headerlink" title="浏览器的标签页"></a>浏览器的标签页</h3><ol>
<li>open()<br>window.open(“地址”)<br>开启一个新的标签页</li>
<li>close()<br>window.close()<br>关闭当前标签页<br>只能关闭用 open 打开的页面</li>
</ol>
<h3 id="浏览器常见事件"><a href="#浏览器常见事件" class="headerlink" title="浏览器常见事件"></a>浏览器常见事件</h3><ol>
<li>onload<br>window.onload &#x3D; function(){}<br>页面所有的资源(html 结构，音频，图片…)加载完毕后触发<br>当你把 js 写在 head 里面，而且还要操作元素的时候可以用</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(box); <span class="comment">//null</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(box); <span class="comment">//div</span></span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>onresize<br>页面可视窗口大小发生变化的时候触发<br>响应式<br>移动端横屏判断</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onresize</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">111111</span>);</span><br><span class="line">  <span class="keyword">var</span> width = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">  <span class="keyword">if</span> (width &gt;= <span class="number">600</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;竖屏体验更好&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>onscroll<br>页面滚动条改变位置时触发<br>window.onscroll &#x3D; function(){}</li>
</ol>
<h3 id="浏览器卷去的尺寸"><a href="#浏览器卷去的尺寸" class="headerlink" title="浏览器卷去的尺寸"></a>浏览器卷去的尺寸</h3><p>分为卷去的高度 和 宽度<br>document.documentElement.scrollTop 有文档声明才能用 卷去的高度<br>document.documentElement.scrollLeft 有文档声明才能用 卷去的宽度<br>document.body.scrollTop 没有文档声明才能用 卷去的高度<br>document.body.scrollLeft 没有文档声明才能用 卷去的宽度</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//有可能拿到0,不是我们想要的值</span></span><br><span class="line"><span class="comment">//自己做一层处理</span></span><br><span class="line"><span class="keyword">var</span> scrollTop = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(scrollTop);</span><br></pre></td></tr></table></figure>

<h3 id="浏览器滚动到"><a href="#浏览器滚动到" class="headerlink" title="浏览器滚动到"></a>浏览器滚动到</h3><ol>
<li>scrollTo()<br>window.scrollTo(x,y)<br>x,y 都是数字<br>x:设置卷去的宽度<br>y:设置卷去的高度<br>必须传递两个参数<br>可以平滑的滚动，需要在样式里设置<code>html&#123;scroll-behavior:soomth;&#125;</code></li>
</ol>
<p>传递一个对象类型<br>window.scrollTo({<br>top:yyy,<br>left:xxx,<br>behavior:’smooth’<br>})<br>可以只写一个值，也可以平滑滚动</p>
<h3 id="作业要求"><a href="#作业要求" class="headerlink" title="作业要求"></a>作业要求</h3><ol>
<li><p>不管你的页面多高 始终 1s 滚动到顶部</p>
<p>拿到滚动的距离，用定时器去得到每毫秒上升的高度</p>
</li>
<li><p>默认火箭不出现，当卷去的高度达到一定值 出现第一帧 当高度不满足时 消失</p>
</li>
</ol>
<p>​		拿到滚动距离，设置display</p>
<ol>
<li>鼠标 hover 的时候 始终是第二帧</li>
<li>点击之后 🔥 起飞</li>
<li>火箭升空后，再次滚动到指定高度，火箭要再次出现</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记10-事件</title>
    <url>/2022/05/02/b15%20%E4%BA%8B%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="事件"><a href="#事件" class="headerlink" title="事件 "></a>事件 <span id="more"></span></h2><h3 id="1-了解事件"><a href="#1-了解事件" class="headerlink" title="1.了解事件"></a>1.了解事件</h3><p>什么是事件？</p>
<ul>
<li>我们使用 代码的方式 和 一个内容 约定好一个行为，当你打开浏览器，触发了该行为，会有对应的代码执行</li>
</ul>
<p>事件的三要素</p>
<ol>
<li>事件源 和谁约定事件 (和由谁触发不一样)</li>
<li>事件类型 约定了一个什么样的事件</li>
<li>事件处理函数 当事件发生时，需要执行的函数</li>
</ol>
<p>这三个内容，目的是为了绑定事件，注册事件</p>
<p>事件的绑定</p>
<ol>
<li>DOM0 级事件<br>事件源.on 事件类型&#x3D;事件处理函数</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  div.<span class="property">onclick</span> = <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//事件源:div</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//事件类型:click</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//事件处理函数:a</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;点我干嘛&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>给一个事件源的同一个事件类型，只能绑定一个事件处理函数</p>
<ol start="2">
<li>DOM2 级事件(事件侦听器&#x2F;事件监听器)<br>事件源.addEventListener(‘事件类型’,事件处理函数)<br>可以给同一个事件源的同一个事件类型绑定多个处理函数</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;click me&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//事件侦听器</span></span></span><br><span class="line"><span class="language-javascript">  div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, fn);</span></span><br><span class="line"><span class="language-javascript">  div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">123</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-事件解绑"><a href="#2-事件解绑" class="headerlink" title="2. 事件解绑"></a>2. 事件解绑</h3><ol>
<li>DOM 0 级的解绑<br>事件源.on 事件类型 &#x3D; null</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>解绑<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  div.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">123</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//让div的click失效</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//DOM 0级的解绑</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;开始解绑&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    div.<span class="property">onclick</span> = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;解绑完毕&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>DOM 2 级事件解绑<br>事件源.removeEventLister(‘事件类型’,事件处理函数)</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>解绑<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;事件处理了&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, a);</span></span><br><span class="line"><span class="language-javascript">  btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;在这里解绑div的事件&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//事件源.removeEventLister(&#x27;事件类型&#x27;,事件处理函数)</span></span></span><br><span class="line"><span class="language-javascript">    div.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;click&#x27;</span>, a);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;解绑完毕&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-事件类型"><a href="#3-事件类型" class="headerlink" title="3. 事件类型"></a>3. 事件类型</h3><ol>
<li>鼠标<br>click 鼠标左键单击<br>dbclick 鼠标左键双击<br>contextmenu 鼠标右键单击<br>mousedown 鼠标按下<br>mouseup 鼠标抬起<br>mousemove 鼠标移动<br>mouseover 鼠标移入<br>mouseout 鼠标移出<br>mouseenter 鼠标移入<br>mouseleave 鼠标移出<br>over&#x2F;out 一套不光移入事件源触发，移入子元素也触发</li>
<li>键盘<br>keydown 键盘按下 任何一个按键都能触发<br>keyup 键盘抬起 任何一个按键都能触发<br>keypress 一直按住 必须要按下可以真实键入内容的按键或者回车键才能触发 ctrl shift alt win</li>
<li>浏览器的<br>DOMContentLoaded 浏览器的已经完全加载了 html，并且构建完了 DOM 树<br>load 浏览器不仅完成了 HTML，还加载完了所有外部资源，img css</li>
<li>表单的<br>focus 聚焦<br>blur 失去焦点<br>change 改变 要求聚焦和失焦 时内容不一致才会触发<br>input 只要表单元素输入内容或者删除内容 就会触发<br>reset 事件都是给 form 标签的由 form 标签内的 reset 按钮触发<br>submit 事件都是给 form 标签的由 form 标签内的 sumbit 按钮触发</li>
<li>触摸<br>只能在移动端使用<br>touchstart 触摸开始：手接触到屏幕的瞬间<br>touchmove 触摸移动<br>touchend 触摸结束</li>
<li>其他<br>selectstart<br>transitionend</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">p</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transition</span>: font-size <span class="number">2s</span> linear;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>12312312312312<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// document.onselectstart = function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   // console.log(&#x27;选择文本？充个会员先&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   return false;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;;</span></span></span><br><span class="line"><span class="language-javascript">  p.<span class="property">ontransitionend</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;过渡结束了&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-事件对象"><a href="#4-事件对象" class="headerlink" title="4. 事件对象"></a>4. 事件对象</h3><p>是一个对象数据类型，里面包含了本次事件的所有信息</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  div.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e); <span class="comment">//拿到事件对象</span></span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-鼠标事件对象的信息"><a href="#5-鼠标事件对象的信息" class="headerlink" title="5.鼠标事件对象的信息"></a>5.鼠标事件对象的信息</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">3000px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">3000px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">      div.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// console.log(e);</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//光标相对于浏览器可视窗口左上角的坐标位置</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">clientX</span>, e.<span class="property">clientY</span>); <span class="comment">//51 52</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//光标相对于文档流左上角的坐标位置</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">pageX</span>, e.<span class="property">pageY</span>); <span class="comment">//51 52</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//光标相对于元素的左上角的位置</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">offsetX</span>, e.<span class="property">offsetY</span>); <span class="comment">//1 2</span></span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6-实时获取鼠标位置"><a href="#6-实时获取鼠标位置" class="headerlink" title="6.实时获取鼠标位置"></a>6.实时获取鼠标位置</h3>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记12-闭包</title>
    <url>/2022/05/02/b17%20%E9%97%AD%E5%8C%85/</url>
    <content><![CDATA[<h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包 "></a>闭包 <span id="more"></span></h2><p>闭包是函数的高级使用方式</p>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="函数的特点"><a href="#函数的特点" class="headerlink" title="函数的特点"></a>函数的特点</h3><ol>
<li>保护私有变量<br>因为每一个函数都会生成一个独立的作用域<br>在函数内部定义的变量 叫 私有变量<br>该变量只能在函数作用域及下级作用域内使用，外部无法使用</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> num = <span class="number">100</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">fnn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">fnn</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>函数定义时不解析变量<br>函数定义的时候，函数体内的代码完全不执行<br>任何变量不做解析<br>直到执行的时候才会解析变量</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//使用num变量的值，因为自己的作用域内没有</span></span><br><span class="line">  <span class="comment">//所以使用全局的变量 num</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line">&#125;</span><br><span class="line">num = <span class="number">200</span>;</span><br><span class="line"><span class="comment">//函数在定义的阶段，如果解析了变量</span></span><br><span class="line"><span class="comment">//函数体内保存的代码就会是 console.log(100)</span></span><br><span class="line"><span class="comment">//在这里执行的时候，出现的就是100,num=200不会生效</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//函数在定义的阶段，如果没有解析变量</span></span><br><span class="line"><span class="comment">//那么函数体内保存的代码就会是 console.log(num)</span></span><br><span class="line"><span class="comment">//在调用的时候，因为上一行代码num=200，所以出现的就是200</span></span><br><span class="line"><span class="title function_">fn</span>(); <span class="comment">//200</span></span><br></pre></td></tr></table></figure>

<h3 id="函数的两个阶段"><a href="#函数的两个阶段" class="headerlink" title="函数的两个阶段"></a>函数的两个阶段</h3><ol>
<li>定义</li>
<li>调用</li>
</ol>
<p>函数的两个阶段分别做了什么事(记住)</p>
<h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><ol>
<li>在 堆内存 中开辟一段存储的空间</li>
<li>把函数体内的代码，一模一样的复制一份，以字符串的形式放进这个空间，此时不解析变量</li>
<li>把 堆内存 中的空间地址赋值给变量</li>
</ol>
<h4 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h4><ol>
<li>按照变量名(函数名)内的地址寻找到 堆内存中对应的空间</li>
<li>在 调用栈 内开辟一段新的函数执行空间</li>
<li>在 新的执行空间 进行形参赋值</li>
<li>在 新的执行空间 进行预解析</li>
<li>在 新的执行空间内 把拿到的函数体代码执行一遍</li>
<li>把 开辟的调用栈 内的 执行空间 销毁(等到你函数内的所有代码执行完毕)</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">100</span>, <span class="number">200</span>);</span><br></pre></td></tr></table></figure>

<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230425170753307.png" alt="image-20230425170753307"></p>
<h4 id="函数执行空间"><a href="#函数执行空间" class="headerlink" title="函数执行空间"></a>函数执行空间</h4><ul>
<li>每个函数都会有一个存储的空间</li>
<li>但是每一次<strong>调用</strong>函数都会生成一个完全不一样的执行空间</li>
<li>并且执行空间 会在函数 执行完毕后就销毁，这和存储空间不一样</li>
</ul>
<p>我们有一些办法让这个执行空间不被销毁<br><strong>闭包</strong>，就是要利用这个 <strong>不销毁的执行空间</strong></p>
<h4 id="函数执行空间不销毁"><a href="#函数执行空间不销毁" class="headerlink" title="函数执行空间不销毁"></a>函数执行空间不销毁</h4><ul>
<li>函数的 执行空间 会在函数执行完毕后 销毁</li>
<li>但是，一旦函数内部返回了一个 <strong>引用数据类型</strong>，并且 <strong>在函数外部有变量接收</strong> 的情况下</li>
<li>这个执行空间 就不会销毁了</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;jack&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">//把一个引用数据类型当作fn的返回值</span></span><br><span class="line">  <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//o接收的就是fn函数执行后的返回值</span></span><br><span class="line"><span class="comment">//o接收的就是fn内的obj</span></span><br><span class="line"><span class="keyword">var</span> o = <span class="title function_">fn</span>();</span><br></pre></td></tr></table></figure>

<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230425171052553.png" alt="image-20230425171052553"><br>函数执行的时候，会生成一个函数执行空间，我们叫他 0x100-1<br>代码在 0x100-1 空间中执行<br>在 0x100-1 这个空间中声明了一个对象空间(0x200)<br>在 0x100-1 中把对象 obj 的地址返回<br>函数外部的 o 接收的是一个对象的地址<br>但是这个地址是在 0x100-1 的函数执行空间中的对象的地址<br>因为 o 变量一直在和这个对象的地址关联。所以 0x100-1 这个执行空间一直不会销毁</p>
<p>等到什么时候，执行了一句<code>o=null</code><br>此时，o 变量里面存的地址不再和 0x100-1 函数执行空间关联了<br>这个时候，函数执行空间就销毁</p>
<h3 id="闭包-1"><a href="#闭包-1" class="headerlink" title="闭包"></a>闭包</h3><p>闭包就是利用 这个函数执行空间不销毁的逻辑<br>有几个条件才能组成闭包</p>
<h4 id="不销毁空间"><a href="#不销毁空间" class="headerlink" title="不销毁空间"></a>不销毁空间</h4><ul>
<li>闭包的第一个条件就是利用不销毁的空间</li>
<li>他返回的只不过不是一个对象</li>
<li>而是返回一个函数数据类型</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ()=&gt;&#123;</span></span><br><span class="line"><span class="comment">//   return ()=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="keyword">var</span> f = <span class="title function_">fn</span>();</span><br></pre></td></tr></table></figure>

<p>f 变量接收的就是一个 fn 执行空间中匿名函数的地址</p>
<h4 id="内部函数引用外部函数中的变量"><a href="#内部函数引用外部函数中的变量" class="headerlink" title="内部函数引用外部函数中的变量"></a>内部函数引用外部函数中的变量</h4><ul>
<li>涉及到两个函数</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">200</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> num = <span class="number">100</span>;</span><br><span class="line">  <span class="comment">// 给函数一个名字a 方便记笔记</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> f = <span class="title function_">fn</span>();</span><br></pre></td></tr></table></figure>

<ul>
<li>fn()会生成一个 xxff00 函数执行空间</li>
<li>在 xxff00 这个执行空间内部，定义了一个 a 函数的存储空间 xxff11</li>
<li>全局变量 f 接收到的 xxff00 里面的 xxff11</li>
<li>所以 xxff00 不会销毁</li>
<li>因为他不会销毁，所以里面定义的 var num &#x3D;100 也不会被销毁</li>
<li>将来 f()的时候，就能够访问到 num 里面的 100</li>
<li>如果将来不需要再获取num了，就把f设置为null</li>
</ul>
<h4 id="闭包特点"><a href="#闭包特点" class="headerlink" title="闭包特点"></a>闭包特点</h4><ol>
<li><p>作用域空间不销毁</p>
<ul>
<li>优点 因为不销毁 变量也不会销毁 延长变量的生命周期</li>
<li>缺点 因为不销毁 会一直占用内存 多了以后导致 内存溢出</li>
</ul>
</li>
<li><p>可以利用闭包在一个函数外部访问其内部的私有变量</p>
<ul>
<li>优点 可以在函数外部访问内部数据</li>
<li>缺点 必须要一直保持引用，导致函数的执行栈不被销毁</li>
</ul>
</li>
<li><p>保护私有变量</p>
<ul>
<li>优点 可以把一些变量放在函数里面，不会污染全局</li>
<li>缺点 要利用闭包函数才能访问到，比较麻烦</li>
</ul>
</li>
</ol>
<h4 id="闭包概念"><a href="#闭包概念" class="headerlink" title="闭包概念"></a>闭包概念</h4><p>有一个 A 函数，在 A 函数内部返回一个 B 函数<br>在 A 函数外面有变量引用这个 B 函数<br>B 函数内部访问着 A 函数内部的私有变量</p>
<p>以上三个条件缺一不可</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">出现:</span></span><br><span class="line"><span class="comment">需要一个不会销毁的函数执行空间</span></span><br><span class="line"><span class="comment">函数内部 直接 或者 间接返回一个新的函数</span></span><br><span class="line"><span class="comment">内部函数要使用外部函数的私有变量</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">我们管 内部函数(fnB) 叫做 外部函数fnA的 闭包函数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fnA</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//外部函数的 私有变量</span></span><br><span class="line">  <span class="keyword">var</span> num = <span class="number">100</span>;</span><br><span class="line">  <span class="keyword">var</span> str = <span class="string">&#x27;hello world&#x27;</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">fnB</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> fnB;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//res里面是fnB</span></span><br><span class="line"><span class="comment">//在函数fnA外面是没有办法访问到num这个变量</span></span><br><span class="line"><span class="comment">//n接收就是fnA函数内的私有变量num的值100</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="title function_">fnA</span>();</span><br><span class="line"><span class="keyword">var</span> n = <span class="title function_">res</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n); <span class="comment">//100</span></span><br></pre></td></tr></table></figure>

<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//num是一个被fn创建的私有变量</span></span><br><span class="line">  <span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">//fn1是内部函数 是一个闭包</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">fn1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//使用了外部函数的变量</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num++);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> fn1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> demo = <span class="title function_">fn</span>();</span><br><span class="line"><span class="title function_">demo</span>(); <span class="comment">//0</span></span><br><span class="line"><span class="title function_">demo</span>(); <span class="comment">//1</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">outerFn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">innerFn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    i++;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//每次执行外部函数都会开辟新的函数执行空间</span></span><br><span class="line"><span class="comment">//in1 和 in2 是两个不同的不会被销毁的执行空间</span></span><br><span class="line"><span class="keyword">var</span> in1 = <span class="title function_">outerFn</span>();</span><br><span class="line"><span class="title function_">in1</span>(); <span class="comment">//1</span></span><br><span class="line"><span class="title function_">in1</span>(); <span class="comment">//2</span></span><br><span class="line"><span class="title function_">in1</span>(); <span class="comment">//3</span></span><br><span class="line"><span class="keyword">var</span> in2 = <span class="title function_">outerFn</span>();</span><br><span class="line"><span class="title function_">in2</span>(); <span class="comment">//1</span></span><br><span class="line"><span class="title function_">in2</span>(); <span class="comment">//2</span></span><br><span class="line"><span class="title function_">in2</span>(); <span class="comment">//3</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> n = <span class="number">999</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">f2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (n = n + <span class="number">1</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="title function_">f1</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">a</span>()); <span class="comment">//1000</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">a</span>()); <span class="comment">//1001</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">a</span>()); <span class="comment">//1002</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">  &#125;, i * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      for0 i 0s</span></span><br><span class="line"><span class="comment">      for1 i 1s</span></span><br><span class="line"><span class="comment">      for2 i 2s</span></span><br><span class="line"><span class="comment">      for3 i  3s</span></span><br><span class="line"><span class="comment">      for4 i 4s</span></span><br><span class="line"><span class="comment">      for5 i  5s</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="comment">// for (var i = 0; i &lt;= 5; i++) &#123;</span></span><br><span class="line"><span class="comment">//   setTimeout(function () &#123;</span></span><br><span class="line"><span class="comment">//     console.log(i);</span></span><br><span class="line"><span class="comment">//   &#125;, i * 1000);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//使用闭包 修改上述代码让循环输出的结果为 1 2 3 4 5</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">  (<span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">    &#125;, a * <span class="number">1000</span>);</span><br><span class="line">  &#125;)(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">addCount</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    count = count + <span class="number">1</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(count);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> foo1 = <span class="title function_">addCount</span>();</span><br><span class="line"><span class="keyword">var</span> foo2 = <span class="title function_">addCount</span>();</span><br><span class="line"><span class="title function_">foo1</span>(); <span class="comment">//1</span></span><br><span class="line"><span class="title function_">foo2</span>(); <span class="comment">//1</span></span><br><span class="line"><span class="title function_">foo1</span>(); <span class="comment">//2</span></span><br><span class="line"><span class="title function_">foo2</span>(); <span class="comment">//2</span></span><br></pre></td></tr></table></figure>

<h3 id="this-面试必问"><a href="#this-面试必问" class="headerlink" title="this 面试必问"></a>this 面试必问</h3><h4 id="1-1-全局"><a href="#1-1-全局" class="headerlink" title="1.1 全局"></a>1.1 全局</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">//window</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span> === <span class="variable language_">this</span>); <span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<h4 id="1-2-函数内"><a href="#1-2-函数内" class="headerlink" title="1.2 函数内"></a>1.2 函数内</h4><p>**函数内的 this 和函数如何定义没关系，和函数在哪里定义没关系。<br>只看 函数 是如何调用的(箭头函数例外) **</p>
<ol>
<li>普通调用<br>函数名()<br>该函数内的 this&#x3D;&gt;window</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(); <span class="comment">//window</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>对象调用<br>对象名.函数名()<br>对象名<a href="">‘函数名’</a><br>arr<a href=""> 索引 </a><br>该函数内的 this 指向点前面的内容<br>也就是那个对象&#x2F;数组</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123; <span class="attr">haha</span>: <span class="number">1</span>, <span class="attr">fun</span>: fn &#125;;</span><br><span class="line">obj.<span class="title function_">fun</span>(); <span class="comment">//obj</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>定时器函数</li>
</ol>
<p>指向 window</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">setTimeout</span>(fn, <span class="number">1000</span>); <span class="comment">//window</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>事件处理函数<br>事件源.on 事件类型&#x3D;事件处理函数<br>事件源.addEventListener(‘事件类型’,事件处理函数)<br>this&#x3D;&gt;事件源</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  demo.<span class="property">onclick</span> = fn;</span></span><br><span class="line"><span class="language-javascript">  demo.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, fn);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//div</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>IIFE<br>this&#x3D;&gt;window</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">&#125;)(); <span class="comment">//window</span></span><br></pre></td></tr></table></figure>

<p>T1</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">200</span>,</span><br><span class="line">  <span class="attr">f</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//对象调用</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>);</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">//函数调用</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">fn</span>();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">obj.<span class="title function_">f</span>();<span class="comment">//200,100</span></span><br></pre></td></tr></table></figure>

<p>T2</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">200</span>,</span><br><span class="line">  <span class="attr">f</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>);</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">fn</span>();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//定时器调用，指向window</span></span><br><span class="line"><span class="built_in">setTimeout</span>(obj.<span class="property">f</span>, <span class="number">1000</span>);<span class="comment">//100,100</span></span><br></pre></td></tr></table></figure>

<p>T3</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">200</span>,</span><br><span class="line">  <span class="attr">f</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>);</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">fn</span>();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//指向window</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">    <span class="comment">//对象调用1a，对象里的函数调用2a</span></span><br><span class="line">  obj.<span class="title function_">f</span>();<span class="comment">//200,100</span></span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure>

<p>T4</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">200</span>,</span><br><span class="line">  <span class="attr">f</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>);</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">fn</span>();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> x = obj.<span class="property">f</span>;</span><br><span class="line"><span class="title function_">x</span>();</span><br><span class="line"><span class="comment">//两个都是函数调用，100,100</span></span><br></pre></td></tr></table></figure>

<h4 id="改变-this"><a href="#改变-this" class="headerlink" title="改变 this"></a>改变 this</h4><p>强行改变 this 的指向:不管你原来指到那，我让你指哪里，你就得指哪里</p>
<p>前置知识<br>打印分组</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;haha&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">123</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">groupEnd</span>();</span><br></pre></td></tr></table></figure>

<p>函数普通调用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;fn函数内部打印&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;this&#x27;</span>, <span class="variable language_">this</span>); <span class="comment">//window</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b); <span class="comment">//10 20</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">groupEnd</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">10</span>, <span class="number">20</span>);</span><br></pre></td></tr></table></figure>

<ol>
<li>call<br>语法:跟在函数名后面调用<br>函数名.call()<br>对象名.函数名.call()<br>意义:修改函数内的 this 指向<br>参数:<br>第一个参数:函数内的 this 指向<br>第二个参数:依次传递给该函数的实参<br>特点:立即调用函数</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;fn函数内部打印&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;this&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">groupEnd</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;我是obj&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>];</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    因为是call调用</span></span><br><span class="line"><span class="comment">    obj变成了fn函数内部的this</span></span><br><span class="line"><span class="comment">    100 给fn的第一个实参 a</span></span><br><span class="line"><span class="comment">    200 给fn的第二个实参 b</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">fn.<span class="title function_">call</span>(obj, <span class="number">100</span>, <span class="number">200</span>);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    this-&gt;obj</span></span><br><span class="line"><span class="comment">    a-&gt;100</span></span><br><span class="line"><span class="comment">    b-&gt;200</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">fn.<span class="title function_">call</span>(arr, arr[<span class="number">1</span>], arr[<span class="number">2</span>]);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    this-&gt;arr</span></span><br><span class="line"><span class="comment">    a-&gt;200</span></span><br><span class="line"><span class="comment">    b-&gt;300</span></span><br><span class="line"><span class="comment">    */</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>apply<br>语法:跟在函数名后面调用<br>函数名.apply()<br>对象名.函数名.apply()<br> 意义:修改函数内的 this 指向<br>参数:<br>第一个参数:函数内的 this 指向<br>第二个参数:是一个数组或者伪数组都可以，里面的每一项依次传递给函数<br>特点:立即调用函数<br>特殊作用:改变函数传递参数的方式</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;fn函数内部打印&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;this&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">groupEnd</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;我是obj&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>];</span><br><span class="line">fn.<span class="title function_">apply</span>(obj, [<span class="number">100</span>, <span class="number">200</span>]); <span class="comment">//obj 100 200</span></span><br><span class="line">fn.<span class="title function_">apply</span>(arr, arr); <span class="comment">//arr 100 200</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//特殊作用:改变函数传递参数的方式</span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">18</span>, <span class="number">99</span>, -<span class="number">10</span>, <span class="number">21</span>, <span class="number">9</span>];</span><br><span class="line"><span class="comment">// Math.max(数字1，数字2...)</span></span><br><span class="line"><span class="comment">//apply第二个参数可以是数组 伪数组</span></span><br><span class="line"><span class="comment">//伪数组 arguments NodeList HTMLCollection</span></span><br><span class="line"><span class="keyword">var</span> res = <span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">apply</span>(<span class="literal">null</span>, a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br></pre></td></tr></table></figure>
</li>
<li><p>bind<br>语法:跟在函数名后面调用<br>函数名.bind()<br>对象名.函数名.bind()<br> 意义:修改函数内的 this 指向<br>参数:<br>第一个参数:函数内的 this 指向<br>第二个参数:依次传递给函数的实参<br>特点:不会立即调用函数，而是返回一个新的函数，就是一个被改变了 this 指向的函数<br>特殊作用:改变一些不需要立即执行的函数内的 this 指向</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;fn函数内部打印&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;this&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">groupEnd</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;我是obj&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> res = fn.<span class="title function_">bind</span>(obj, <span class="number">100</span>, <span class="number">200</span>);</span><br><span class="line"><span class="comment">// function bind() &#123;</span></span><br><span class="line"><span class="comment">//   //...</span></span><br><span class="line"><span class="comment">//   return function () &#123;&#125;;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="title function_">res</span>();</span><br><span class="line"><span class="comment">// setTimeout(fn, 1000);</span></span><br><span class="line"><span class="comment">//1s之后把fn内的this指向obj</span></span><br><span class="line"><span class="comment">// setTimeout(fn.apply(obj, [100, 200]), 1000);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 只能利用bind</span></span><br><span class="line"><span class="built_in">setTimeout</span>(fn.<span class="title function_">bind</span>(obj, <span class="number">100</span>, <span class="number">200</span>), <span class="number">1000</span>);</span><br><span class="line"><span class="comment">//fn.bind(obj, 100, 200)=&gt;function ()&#123;&#125;</span></span><br></pre></td></tr></table></figure>

<p>类似用法</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a, b</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;fn函数内部打印&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;this&#x27;</span>, <span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// console.log(a, b);</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">groupEnd</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> obj = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&#x27;hahah&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">      box.<span class="property">onclick</span> = fn.<span class="title function_">bind</span>(obj);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h3><ol>
<li>let 变量</li>
<li>const 常量</li>
</ol>
<h4 id="3-1-let-x2F-const-和-var-区别"><a href="#3-1-let-x2F-const-和-var-区别" class="headerlink" title="3.1 let&#x2F;const 和 var 区别"></a>3.1 let&#x2F;const 和 var 区别</h4><ol>
<li>预解析<br>var 定义变量会预解析，可以先访问不报错<br>let&#x2F;const 不会预解析，必须先定义后使用</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n); <span class="comment">//undefined</span></span><br><span class="line"><span class="keyword">var</span> n = <span class="number">100</span>;</span><br><span class="line"><span class="comment">// console.log(n2);//报错</span></span><br><span class="line"><span class="keyword">let</span> n2 = <span class="number">200</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n3); <span class="comment">//报错</span></span><br><span class="line"><span class="keyword">const</span> n3 = <span class="number">300</span>;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>变量重名<br>var 定义的变量可以重名，只是第二个没有意义<br>let&#x2F;const 不允许在同一作用域下，定义重名的变量</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">var</span> n = <span class="number">200</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n); <span class="comment">//200</span></span><br><span class="line"><span class="comment">// let n1 = 100;</span></span><br><span class="line"><span class="comment">// let n1 = 200;//报错重复定义</span></span><br><span class="line"><span class="comment">// const n2 = 123;</span></span><br><span class="line"><span class="comment">// const n2 = 123;//报错重复定义</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>块级作用域<br>var 没有块级作用域<br>let&#x2F;const 有块级作用域<br>块级作用域：任何书写{}的地方都会限制变量的使用范围</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n); <span class="comment">//undefined</span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> n = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n); <span class="comment">//100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// if (true) &#123;</span></span><br><span class="line"><span class="comment">//   let n1 = 100;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// console.log(n1); //报错 未定义</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> n2 = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n2);</span><br></pre></td></tr></table></figure>

<h4 id="3-2-let-和-const-的区别"><a href="#3-2-let-和-const-的区别" class="headerlink" title="3.2 let 和 const 的区别"></a>3.2 let 和 const 的区别</h4><ol>
<li>声明时赋值<br>let 可以声明时不赋值<br>const 声明时必须赋值</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> n;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n); <span class="comment">//undefined</span></span><br><span class="line">n = <span class="number">200</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n); <span class="comment">//200</span></span><br><span class="line"><span class="comment">// const n2  报错 没有初始化</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>值的修改<br>let 定义的变量可以修改<br>const 定义的常量 不能修改</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> n = <span class="number">100</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n);</span><br><span class="line">n = <span class="string">&#x27;hello world&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> n1 = <span class="number">100</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n1);</span><br><span class="line"><span class="comment">//尝试修改常量直接报错</span></span><br><span class="line"><span class="comment">// n1 = &#x27;hahahahh &#x27;;</span></span><br><span class="line"><span class="comment">// console.log(n1);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">88</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">age</span>); <span class="comment">//88</span></span><br><span class="line"><span class="comment">// obj = &#123;</span></span><br><span class="line"><span class="comment">//   name: &#x27;jack&#x27;,</span></span><br><span class="line"><span class="comment">//   age: 18,</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line">obj.<span class="property">age</span> = <span class="number">18</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">age</span>); <span class="comment">//18</span></span><br></pre></td></tr></table></figure>

<h3 id="箭头函数-明天再说"><a href="#箭头函数-明天再说" class="headerlink" title="箭头函数(明天再说)"></a>箭头函数(明天再说)</h3><h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><p>画图！</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//num是一个被fn创建的私有变量</span></span><br><span class="line">  <span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">//fn1是内部函数 是一个闭包</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">fn1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//使用了外部函数的变量</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num++);</span><br><span class="line">      <span class="comment">//++符号在元素后，先执行一次console.log(num),再</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> fn1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> demo = <span class="title function_">fn</span>();</span><br><span class="line"><span class="title function_">demo</span>(); <span class="comment">//0</span></span><br><span class="line"><span class="title function_">demo</span>(); <span class="comment">//1</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">outerFn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">innerFn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    i++;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//每次执行外部函数都会开辟新的函数执行空间</span></span><br><span class="line"><span class="comment">//in1 和 in2 是两个不同的不会被销毁的执行空间</span></span><br><span class="line"><span class="keyword">var</span> in1 = <span class="title function_">outerFn</span>();</span><br><span class="line"><span class="title function_">in1</span>(); <span class="comment">//1</span></span><br><span class="line"><span class="title function_">in1</span>(); <span class="comment">//2</span></span><br><span class="line"><span class="title function_">in1</span>(); <span class="comment">//3</span></span><br><span class="line"><span class="keyword">var</span> in2 = <span class="title function_">outerFn</span>();</span><br><span class="line"><span class="title function_">in2</span>(); <span class="comment">//1</span></span><br><span class="line"><span class="title function_">in2</span>(); <span class="comment">//2</span></span><br><span class="line"><span class="title function_">in2</span>(); <span class="comment">//3</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> n = <span class="number">999</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">f2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (n = n + <span class="number">1</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="title function_">f1</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">a</span>()); <span class="comment">//1000</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">a</span>()); <span class="comment">//1001</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">a</span>()); <span class="comment">//1002</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记09-DOM操作补充知识</title>
    <url>/2022/05/02/b14%20DOM%E8%A1%A5%E5%85%85/</url>
    <content><![CDATA[<h3 id="元素的大小、滚动和位置"><a href="#元素的大小、滚动和位置" class="headerlink" title="元素的大小、滚动和位置 "></a>元素的大小、滚动和位置 <span id="more"></span></h3><p>clientWidth 内容宽度加上内边距,不包含滚动条<br>clientHeight 内容高度加上内边距，不包含滚动条</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* box-sizing: border-box; */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  恁吃马虾可能需要自己买，俺师傅他不一样。天天买鱼的时候今天顺俩，明天顺俩这又够吃一顿了。你看笑笑了笑了。今天龙虾你准备怎么吃？用蛋黄焗一个，管我给你焗一个。把虾头从这剪掉，虾胃挑出来看到没有，小爪子也给剪掉，后面的长子也拽出来。粑粑平时看你烧都没拽，这不是拍视频吗？人别说我脏！虾里面来点葱姜，料酒，少来一点点白糖，腌个10分钟入入味，来点咸蛋黄沫。师傅我看你都没买过咸蛋黄，这可是你自己做的，你可想知道，就不告诉你。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 根据已经学的 getComputedStyle 肯定可以获取到盒子的宽度/高度</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> boxStyle = <span class="title function_">getComputedStyle</span>(box);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(boxStyle.width, boxStyle.height);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//1.clientWidth 客户端宽度，不是浏览器的宽度 而且他计算的只是内容的宽度</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//他指的就是我们的内容加上内边距的宽度</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">clientWidth</span>); <span class="comment">// 86 不带单位</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//86 没有计算滚动条 整个内容宽度是100</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// clientHeight同理</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>clientLeft:border-left 的宽度<br>clientTop:border-top 的宽度</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* box-sizing: border-box; */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">10px</span> solid red;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  恁吃马虾可能需要自己买，俺师傅他不一样。天天买鱼的时候今天顺俩，明天顺俩这又够吃一顿了。你看笑笑了笑了。今天龙虾你准备怎么吃？用蛋黄焗一个，管我给你焗一个。把虾头从这剪掉，虾胃挑出来看到没有，小爪子也给剪掉，后面的长子也拽出来。粑粑平时看你烧都没拽，这不是拍视频吗？人别说我脏！虾里面来点葱姜，料酒，少来一点点白糖，腌个10分钟入入味，来点咸蛋黄沫。师傅我看你都没买过咸蛋黄，这可是你自己做的，你可想知道，就不告诉你。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//2. clientLeft :左边框的宽度 clientTop上边框的宽度</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">clientLeft</span>); <span class="comment">//10</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">clientTop</span>); <span class="comment">//10</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>offsetWidth:元素的完整宽度<br>offsetHeight:元素的完整高度</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* box-sizing: border-box; */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">10px</span> solid red;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  恁吃马虾可能需要自己买，俺师傅他不一样。天天买鱼的时候今天顺俩，明天顺俩这又够吃一顿了。你看笑笑了笑了。今天龙虾你准备怎么吃？用蛋黄焗一个，管我给你焗一个。把虾头从这剪掉，虾胃挑出来看到没有，小爪子也给剪掉，后面的长子也拽出来。粑粑平时看你烧都没拽，这不是拍视频吗？人别说我脏！虾里面来点葱姜，料酒，少来一点点白糖，腌个10分钟入入味，来点咸蛋黄沫。师傅我看你都没买过咸蛋黄，这可是你自己做的，你可想知道，就不告诉你。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">offsetWidth</span>); <span class="comment">//160 =100+20*2+10*2</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>offsetTop:与父元素上边界在 y 轴上的距离<br>offsetLeft:与父元素左边界在 x 轴上的距离</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* box-sizing: border-box; */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">10px</span> solid red;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  恁吃马虾可能需要自己买，俺师傅他不一样。天天买鱼的时候今天顺俩，明天顺俩这又够吃一顿了。你看笑笑了笑了。今天龙虾你准备怎么吃？用蛋黄焗一个，管我给你焗一个。把虾头从这剪掉，虾胃挑出来看到没有，小爪子也给剪掉，后面的长子也拽出来。粑粑平时看你烧都没拽，这不是拍视频吗？人别说我脏！虾里面来点葱姜，料酒，少来一点点白糖，腌个10分钟入入味，来点咸蛋黄沫。师傅我看你都没买过咸蛋黄，这可是你自己做的，你可想知道，就不告诉你。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//4.offsetTop offsetLeft 相对于父元素的距离</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">offsetTop</span>, box.<span class="property">offsetLeft</span>); <span class="comment">//100（padding）+8(margin)=108</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>scrollHeight:可滚动区域的高度<br>scrollTop:滚去的高度</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* box-sizing: border-box; */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">10px</span> solid red;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  恁吃马虾可能需要自己买，俺师傅他不一样。天天买鱼的时候今天顺俩，明天顺俩这又够吃一顿了。你看笑笑了笑了。今天龙虾你准备怎么吃？用蛋黄焗一个，管我给你焗一个。把虾头从这剪掉，虾胃挑出来看到没有，小爪子也给剪掉，后面的长子也拽出来。粑粑平时看你烧都没拽，这不是拍视频吗？人别说我脏！虾里面来点葱姜，料酒，少来一点点白糖，腌个10分钟入入味，来点咸蛋黄沫。师傅我看你都没买过咸蛋黄，这可是你自己做的，你可想知道，就不告诉你。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//5. scrollHeight 整个可滚动区域的高度</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(box.scrollHeight);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//6.scrollTop 滚去的高度</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(box.scrollTop);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">scrollTop</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230423201753817.png" alt="image-20230423201753817"></p>
<h3 id="window-的大小和滚动"><a href="#window-的大小和滚动" class="headerlink" title="window 的大小和滚动"></a>window 的大小和滚动</h3><h4 id="大小"><a href="#大小" class="headerlink" title="大小"></a>大小</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1. 整个浏览器的宽度和高度</span></span><br><span class="line"><span class="comment">//包含调试工具，工具栏</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">outerWidth</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">outerHeight</span>);</span><br><span class="line"><span class="comment">//2. 视窗的宽度和高度</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;----------------&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="comment">//3.也可以通过html元素来获取</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;----------------&#x27;</span>);</span><br><span class="line"><span class="comment">// console.log(document.documentElement.clientWidth);</span></span><br><span class="line"><span class="comment">// console.log(document.documentElement.clientHeight);</span></span><br><span class="line"><span class="keyword">var</span> htmlEl = <span class="variable language_">document</span>.<span class="property">documentElement</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(htmlEl.<span class="property">offsetWidth</span>); <span class="comment">//和上面一样</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(htmlEl.<span class="property">offsetHeight</span>); <span class="comment">//8 没有任何内容的html 默认高度 在chrome里面是8</span></span><br></pre></td></tr></table></figure>

<p>outerWidth:整个浏览器的宽度 包含工具栏标签页…<br>outerHeight:整个浏览器的高度<br>innerWidth:视窗的宽度<br>innerHeight:视窗的高度<br>也可以通过 html 来获取宽高</p>
<h4 id="滚动"><a href="#滚动" class="headerlink" title="滚动"></a>滚动</h4><p>window 的滚动位置<br>scrollX:x 轴滚动的位置<br>scrollY:Y 轴滚动的位置<br>注意监听 window 的滚动:<code>window.onscroll=function()&#123;&#125;</code></p>
<p>也有对应的方法去滚动<br>scrollBy(x,y):相对于当前位置的(x,y)位置<br>scrollto(x,y):直接滚动到(x,y)</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;scroll-by&quot;</span>&gt;</span>我是by<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;scroll-to&quot;</span>&gt;</span>我是to<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 想要获取滚动的位置</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// window.onclick = function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   // 水平方向滚动的位置</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   console.log(window.scrollX);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   //垂直方向滚动的位置</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   console.log(window.scrollY);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//监听window的滚动</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="property">onscroll</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">scrollY</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> btnBy = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.scroll-by&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> btnTo = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.scroll-to&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  btnBy.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//在原来的基础上再滚动</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="title function_">scrollBy</span>(<span class="number">0</span>, <span class="number">100</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  btnTo.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//直接滚动到对应位置</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(<span class="number">0</span>, <span class="number">100</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="返回顶部案例"><a href="#返回顶部案例" class="headerlink" title="返回顶部案例"></a>返回顶部案例</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">html</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 滚动行为:平滑滚动 */</span></span></span><br><span class="line"><span class="language-css">    scroll-behavior: smooth;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">2000px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.btn</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">right</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>我是顶部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>回到顶部<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//默认不显示</span></span></span><br><span class="line"><span class="language-javascript">  btn.<span class="property">hidden</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//滚动到一定高度再显示</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="property">onscroll</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">scrollY</span> &gt; <span class="number">300</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      btn.<span class="property">hidden</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      btn.<span class="property">hidden</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(<span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h3><p>是一个对象数据类型，记录了本次事件的所有信息</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="comment">//这个a函数是我们调用的吗？</span></span><br><span class="line">  <span class="comment">//当我们点击div，被浏览器捕获到这个点击的行为以后</span></span><br><span class="line">  <span class="comment">//浏览器去调用的</span></span><br><span class="line">  <span class="comment">//定义一个参数叫e/event</span></span><br><span class="line">  <span class="comment">//e里面就是浏览帮我们装的东西</span></span><br><span class="line">  <span class="comment">//所有和当前click事件相关的信息赋值给e</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(event);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h4 id="事件对象信息-鼠标事件"><a href="#事件对象信息-鼠标事件" class="headerlink" title="事件对象信息-鼠标事件"></a>事件对象信息-鼠标事件</h4><ol>
<li>clientX 和 clientY 相对于视口</li>
<li>pageX 和 pageY 文档</li>
<li>offsetX,offsetY 元素</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//光标相对于浏览器可视窗口左上角的坐标位置</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">clientX</span>, e.<span class="property">clientY</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//相对于文档流的左上角的坐标位置</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">pageX</span>, e.<span class="property">pageY</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;----------------&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//相对于触发事件的元素左上角的坐标点</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">offsetX</span>, e.<span class="property">offsetY</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="事件的传播"><a href="#事件的传播" class="headerlink" title="事件的传播"></a>事件的传播</h3><ul>
<li>当一个事件在浏览器中触发的时候</li>
<li>不光在自身元素上触发，是会传播出去的</li>
<li>传播的是什么？传播的是事件的<strong>行为</strong></li>
</ul>
<p>概念:当你在一个元素上触发行为的时候，会按照父级结构的顺序向上传递，一直向上传递到 window</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.outer</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> outer = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.outer&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> inner = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.inner&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// inner.onclick = function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   console.log(&#x27;inner&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;;</span></span></span><br><span class="line"><span class="language-javascript">  outer.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;outer&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;body&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;html&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;doc&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;window&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      1.如果没有给body绑定事件 那html和window doc的会触发吗？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      body没有 但是后续还有，</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      只是body没有对应的事件处理函数，click这个行为还是要传递到window</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      2.不给inner绑定事件，还会传递到window吗？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      会</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      click这个行为确实发生，只不过inner没有handler(句柄)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      但是click行为还是要向上传递</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      3.如果我只点击粉色的outer，会传播吗？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      会</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      */</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>传播的是行为 传播的是行为 传播的是行为</strong></p>
<h3 id="冒泡和捕获"><a href="#冒泡和捕获" class="headerlink" title="冒泡和捕获"></a>冒泡和捕获</h3><p>事件冒泡:在事件的传播过程中,从目标到 window 的过程<br>事件捕获:在事件的传播过程中,从 window 到目标的过程<br>事件目标:准确触发事件的元素 怎么拿？<code>事件对象.target</code></p>
<p>怎么在捕获阶段执行？<br>DOM 0 级不可以<br>DOM 2 级才可以,addEventListener 的第三个参数实现</p>
<ul>
<li>默认是 false，表示冒泡阶段触发</li>
<li>true，捕获阶段触发</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.outer</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> outer = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.outer&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> inner = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.inner&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//DOM 0 级不可以</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// outer.onclick = function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   console.log(&#x27;outer&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// inner.onclick = function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   console.log(&#x27;inner&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;;</span></span></span><br><span class="line"><span class="language-javascript">  outer.<span class="title function_">addEventListener</span>(</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;click&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;outer&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">  );</span></span><br><span class="line"><span class="language-javascript">  inner.<span class="title function_">addEventListener</span>(</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;click&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;inner&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">  );</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="阻止事件传播"><a href="#阻止事件传播" class="headerlink" title="阻止事件传播"></a>阻止事件传播</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.outer</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> outer = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.outer&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> inner = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.inner&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  outer.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;outer&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  inner.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;inner&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//标准的浏览器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// e.stopPropagation();</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//ie</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// e.cancelBubble = true;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(abc);</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(123);</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//try&#123;&#125;catch&#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(abc);</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;catch执行了&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">123</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>e.stopPropagation()</li>
<li>e.cancelBubble &#x3D; true</li>
<li>try{}catch(err){}</li>
</ul>
<h3 id="阻止默认事件"><a href="#阻止默认事件" class="headerlink" title="阻止默认事件"></a>阻止默认事件</h3><ul>
<li>a 跳转</li>
<li>表单提交</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;www.jd.com&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;a&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  a.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//标准浏览器</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// e.preventDefault();</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//ie</span></span></span><br><span class="line"><span class="language-javascript">    e.<span class="property">returnValue</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// return false; 不可取</span></span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> sub = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input[type=&quot;submit&quot;]&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(sub);</span></span></span><br><span class="line"><span class="language-javascript">  sub.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    e.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: solid;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.bgc</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// var lis = document.querySelectorAll(&#x27;li&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// for (var i = 0; i &lt; lis.length; i++) &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   // lis[i]就是每个li</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   lis[i].onclick = function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//     // console.log(&#x27;我被点了&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//     //1.干掉所有</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//     for (var j = 0; j &lt; lis.length; j++) &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//       lis[j].classList.remove(&#x27;bgc&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//     //2.复活自己</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//     this.classList.add(&#x27;bgc&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//     // console.log(i);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   &#125;;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> lis = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  ul.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, fn);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">dir</span>(e.<span class="property">target</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//把所有人干掉</span></span></span><br><span class="line"><span class="language-javascript">    lis.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">ele</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      ele.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;bgc&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//复活自己</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">tagName</span> === <span class="string">&#x27;LI&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      e.<span class="property">target</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;bgc&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: solid;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.bgc</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>点我添加一个li<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果🍎<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉🍌<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>菠萝🍍<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      点击li 输出对应的文本内容</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      循环绑定:</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      给多个元素绑定相同事件</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      但是有缺点 性能，对于添加的元素无效</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      事件委托来完成</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        点击li的时候做一些事</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        因为事件会传播，如果我给他的父级ul绑定一个点击事件</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        也会因为我点了li而触发</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        事件对象里面，有一个非常非常非常重要的属性 target 准确记录了触发事件的元素</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      原则:</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        尽可能找距离最近的公共的父级</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        尽可能找页面上不动的元素来委托</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      */</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> lis = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// lis.forEach(function (ele) &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   ele.onclick = function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//     console.log(this.textContent);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   &#125;;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="language-javascript">  ul.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> t = e.<span class="property">target</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (t.<span class="property">tagName</span> === <span class="string">&#x27;LI&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(t.<span class="property">innerText</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    li.<span class="property">textContent</span> = <span class="string">&#x27;西瓜🍉&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//把li放到ul里面</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// li.onclick = function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   console.log(li.textContent);</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;;</span></span></span><br><span class="line"><span class="language-javascript">    ul.<span class="title function_">append</span>(li);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="拖拽"><a href="#拖拽" class="headerlink" title="拖拽"></a>拖拽</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>拖拽<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      1. 三个事件组成</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        1-1 鼠标移动，盒子要跟着鼠标移动</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        1-2 鼠标按下以后，盒子跟着走</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        1-3 鼠标抬起以后，盒子不再跟着走</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        怎么让盒子跟着走？肯定是mousemove里面执行一些操作</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        开关思想 我们可以在mousemove内准备一个开关</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        如果是false 直接return 如果是 true 我再执行</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        什么时候跟着走？什么时候不跟着？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        按下的时候 开关 true</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        抬起的时候 开关为false</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      2. 在移动的时候，让div跟着就好</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        把事件往上绑定 document</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        拿哪一组坐标？</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      */</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//提前准备一个开关</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> flag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">      div.<span class="property">onmousedown</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;跟着走&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//打开开关</span></span></span><br><span class="line"><span class="language-javascript">        flag = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">      div.<span class="property">onmouseup</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你自己呆着&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//关闭开关</span></span></span><br><span class="line"><span class="language-javascript">        flag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="property">onmousemove</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//判断开关</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// if (flag === false) return;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (!flag) <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//盒子跟着鼠标移动</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> x = e.<span class="property">clientX</span> - <span class="number">50</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> y = e.<span class="property">clientY</span> - <span class="number">50</span>;</span></span><br><span class="line"><span class="language-javascript">        div.<span class="property">style</span>.<span class="property">left</span> = x + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        div.<span class="property">style</span>.<span class="property">top</span> = y + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记13-es6语法初体验</title>
    <url>/2022/05/02/b18%20es6%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<h2 id="es6"><a href="#es6" class="headerlink" title="es6 "></a>es6 <span id="more"></span></h2><h3 id="模版字符串"><a href="#模版字符串" class="headerlink" title="模版字符串"></a>模版字符串</h3><p>还是定义字符串的方式，使用上和<code>&#39;&#39;</code>单引号以及<code>&quot;&quot;</code>双引号没有区别<br>只不过，当你使用(&#96;&#96;)来定义的时候，具有特殊的能力</p>
<ol>
<li>可以换行书写</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// let str =&quot;哈</span></span><br><span class="line"><span class="comment">// 哈&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">`</span></span><br><span class="line"><span class="string">哈哈</span></span><br><span class="line"><span class="string">`</span>;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>可以在字符串内解析变量<br><code>$&#123;变量&#125;</code></li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> age = <span class="number">18</span>;</span><br><span class="line"><span class="keyword">let</span> str = <span class="string">`hello world alex今年<span class="subst">$&#123;age&#125;</span>岁了`</span>;</span><br></pre></td></tr></table></figure>

<h3 id="箭头函数-arrow-function"><a href="#箭头函数-arrow-function" class="headerlink" title="箭头函数(arrow function)"></a>箭头函数(arrow function)</h3><p>es6 的箭头函数，是定义函数的一种新方式<br>只能用来定义函数表达式()</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//这个函数本身是一个匿名函数</span></span><br><span class="line"><span class="keyword">let</span> fn = <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;;</span><br><span class="line"><span class="comment">//箭头函数</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">foo</span> = (<span class="params"></span>) =&gt; &#123;&#125;;</span><br></pre></td></tr></table></figure>

<p>语法：<code>()=&gt;&#123;&#125;</code><br>()就是书写形参的位置<br>&#x3D;&gt;是箭头函数的标志<br>{}是书写函数体的地方</p>
<p>箭头函数的特点：</p>
<ol>
<li>可以省略小括号不写<br>当你的形参只有一个的时候，可以不写小括号<br>如果你的形参没有或者两个及以上必须写小括号</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1. 省略小括号</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">foo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我没有形参&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">foo</span>(); <span class="comment">//</span></span><br><span class="line"><span class="comment">//一个形参可以省略小括号</span></span><br><span class="line"><span class="comment">//这里是因为有代码格式化，本身不写小括号也能正常运行</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">bar</span> = (<span class="params">a</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是bar我有一个形参&#x27;</span>, a);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">bar</span>(<span class="number">10</span>);</span><br><span class="line"><span class="comment">//两个形参 必须写小括号</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">baz</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">baz</span>(<span class="number">100</span>, <span class="number">200</span>);</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>可以省略大括号<br>当你的代码只有一句话的时候，可以省略大括号不写，而且这句话就是函数的返回值<br>否则 都必须书写大括号</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//这是一个箭头函数，函数内只有一句话 a+b</span></span><br><span class="line"><span class="comment">//而且a+b就是函数的返回值</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">foo</span> = (<span class="params">a, b</span>) =&gt; a + b;</span><br><span class="line"><span class="title function_">foo</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure></li>
</ol>
<p>filter 例子</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// let arr = [1, 2, 3, 4, 5, 6, 7];</span></span><br><span class="line"><span class="comment">// let res = arr.filter(function(ele)&#123;return ele%2!==0 &#125;)</span></span><br><span class="line"><span class="comment">// let res = arr.filter(function(ele)&#123;return ele%2&#125;)</span></span><br><span class="line"><span class="comment">// let res = arr.filter((ele)=&gt;&#123;return ele%2&#125;)</span></span><br><span class="line"><span class="comment">// let res = arr.filter(ele=&gt;&#123;return ele%2&#125;)</span></span><br><span class="line"><span class="comment">// let res = arr.filter(ele=&gt;ele%2)</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>箭头函数没有 arguments<br>没有所谓的实参的集合</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> foo = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">foo</span>(<span class="number">10</span>, <span class="number">203</span>, <span class="number">12312</span>, <span class="number">1231203</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="title function_">bar</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>); <span class="comment">//报错</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">bar</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>箭头函数内没有 this<br>外部作用域的 this</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  div.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//箭头函数fn的外部是div的事件处理函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//事件处理函数的this指向？事件源 div</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//所以fn内的this 就是 div</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> <span class="title function_">fn</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fn:&#x27;</span>, <span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//按说 fn是普通调用，this应该是window</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//但是fn是一个arrow function 所以没有this</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fn</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;我是obj&#x27;</span>,</span><br><span class="line">  <span class="attr">f</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;f&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">f2</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;f2&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">obj.<span class="title function_">f</span>(); <span class="comment">//this-&gt;obj</span></span><br><span class="line"><span class="comment">//按道理说看调用方式---对象调用 this应该是obj</span></span><br><span class="line"><span class="comment">//但是他是一个箭头函数 所以内部没有this</span></span><br><span class="line">obj.<span class="title function_">f2</span>(); <span class="comment">//this-&gt;window</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>返回值</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">foo</span> = (<span class="params">a, b</span>) =&gt; a + b;</span><br><span class="line"><span class="keyword">let</span> res = <span class="title function_">foo</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line"><span class="comment">//额外注意注意注意</span></span><br><span class="line"><span class="comment">//一旦你写了&#123;&#125; 不写return 永远没有返回值</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">baz</span> = (<span class="params">a</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (a -= <span class="number">8</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> res1 = <span class="title function_">baz</span>(<span class="number">1</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res1);</span><br><span class="line"><span class="keyword">let</span> <span class="title function_">bar</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">  a + b;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> res2 = <span class="title function_">bar</span>(<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res2); <span class="comment">//undefined</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res2 + <span class="number">100</span>); <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure>

<h3 id="函数默认值"><a href="#函数默认值" class="headerlink" title="函数默认值"></a>函数默认值</h3><p>es6 函数的形参默认值，当你没有传递实参的时候，使用<br>直接在书写形参的时候，以赋值符号给形参设置默认值就可以<br>任何函数都能使用</p>
<blockquote>
<p>如果你给箭头函数的形参设置默认值，那不管多少个形参都要写小括号</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">a = <span class="number">100</span>, b = <span class="number">200</span></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">foo</span>(<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line"><span class="title function_">foo</span>(); <span class="comment">//100 200</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">bar</span> = (<span class="params">a = <span class="number">1</span></span>) =&gt; a;</span><br><span class="line"><span class="title function_">bar</span>(); <span class="comment">//1</span></span><br><span class="line"><span class="title function_">bar</span>(<span class="number">100</span>); <span class="comment">//100</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a = <span class="number">10</span>, b = <span class="number">20</span></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(); <span class="comment">//10 20</span></span><br><span class="line"><span class="title function_">fn</span>(<span class="number">100</span>, <span class="number">200</span>); <span class="comment">//100,200</span></span><br><span class="line"><span class="title function_">fn</span>(<span class="number">100</span>); <span class="comment">//100,20</span></span><br></pre></td></tr></table></figure>

<h3 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h3><p>es6 的解构赋值，快速的从对象或者数组种获取一些数据</p>
<h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>数组怎么写，解构就怎么写<br>把数据换成变量</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>];</span><br><span class="line"><span class="comment">// let a=arr[0]</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="comment">// let e = arr[4]</span></span><br><span class="line"><span class="comment">//用解构来做</span></span><br><span class="line"><span class="keyword">let</span> [a, b, c, d, e] = arr;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>, [<span class="number">5</span>, <span class="number">6</span>, [<span class="number">7</span>, <span class="number">8</span>, [<span class="number">9</span>]]]]];</span><br><span class="line"><span class="comment">// let bb = arr[2][2][2][2][0];</span></span><br><span class="line"><span class="keyword">const</span> [a, b, [c, d, [e, f, [g, h, [target]]]]] = arr;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(target, e);</span><br></pre></td></tr></table></figure>

<h4 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h4><p>对象怎么写，解构就怎么写<br>把数据换成变量</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span> &#125;;</span><br><span class="line"><span class="keyword">const</span> &#123; name, age &#125; = obj;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name, age);</span><br></pre></td></tr></table></figure>

<p>解构的时候可以起别名<br>const {键名:别名,键名:别名}&#x3D; obj<br>当你起了别名以后，原先的键名不能在当作变量名，而是使用别名</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span> &#125;;</span><br><span class="line"><span class="comment">// const &#123;name&#125; =obj  等价于 const name = obj.name</span></span><br><span class="line"><span class="comment">// const &#123;name:a&#125; = obj 等价于 const a = obj.name</span></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">name</span>: a, gender, <span class="attr">age</span>: b &#125; = obj;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, gender);</span><br></pre></td></tr></table></figure>

<p>坑 1</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span> &#125;;</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">age</span>: a &#125; = obj;</span><br><span class="line"><span class="comment">//等价于  const a = obj.age</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">//18</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(age); <span class="comment">//报错</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">const b =12</span></span><br><span class="line"><span class="comment">console.log(c)//报错 未定义</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>坑 2</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span> &#125;;</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">name</span>: a &#125; = obj;</span><br><span class="line"><span class="comment">//等价于 const a = obj.name</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">//&#x27;alex&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name); <span class="comment">//空字符串</span></span><br><span class="line"><span class="comment">// window自带一个name属性</span></span><br></pre></td></tr></table></figure>

<p>坑 3</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3 3 3</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">全局定义一个i</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  开始循环</span></span><br><span class="line"><span class="comment">   i===0 </span></span><br><span class="line"><span class="comment">    =&gt;定义了一个定时器，定时器的处理函数执行吗？不执行</span></span><br><span class="line"><span class="comment">    =&gt;在队列里面放了一个函数 ()=&gt;&#123;log(i)&#125;</span></span><br><span class="line"><span class="comment">   i===1</span></span><br><span class="line"><span class="comment">    =&gt;定义了一个定时器，定时器的处理函数执行吗？不执行</span></span><br><span class="line"><span class="comment">    =&gt;在队列里面放了一个函数 ()=&gt;&#123;log(i)&#125;</span></span><br><span class="line"><span class="comment">   i===2</span></span><br><span class="line"><span class="comment">    =&gt;定义了一个定时器，定时器的处理函数执行吗？不执行</span></span><br><span class="line"><span class="comment">    =&gt;在队列里面放了一个函数 ()=&gt;&#123;log(i)&#125;</span></span><br><span class="line"><span class="comment">   i===3</span></span><br><span class="line"><span class="comment">    循环结束</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  此时所有同步代码走完，才会去执行异步代码，执行三个函数</span></span><br><span class="line"><span class="comment">  在控制台打印3次i </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>坑 3.1</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//let 块级作用域</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//0 1 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">循环开始</span></span><br><span class="line"><span class="comment">  &#123;</span></span><br><span class="line"><span class="comment">    i===0</span></span><br><span class="line"><span class="comment">    准备了一个定时器函数，暂时不执行()=&gt;&#123;log(i)&#125;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">  &#123;</span></span><br><span class="line"><span class="comment">    i===1</span></span><br><span class="line"><span class="comment">    准备了一个定时器函数，暂时不执行()=&gt;&#123;log(i)&#125;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">  &#123;</span></span><br><span class="line"><span class="comment">    i===2</span></span><br><span class="line"><span class="comment">    准备了一个定时器函数，暂时不执行()=&gt;&#123;log(i)&#125;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">  &#123;</span></span><br><span class="line"><span class="comment">    i===3</span></span><br><span class="line"><span class="comment">    循环结束</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">  所有的同步代码走完了，开始执行异步 定时器的函数</span></span><br><span class="line"><span class="comment">  0 1 2</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>坑 3.2</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//谁先谁后，打印几个</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">  <span class="comment">//异步</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//报错 报错会中断程序的执行✅</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line"><span class="comment">//依旧输出了0 1 2</span></span><br><span class="line"><span class="comment">//我们for的时候 这个()=&gt;&#123;log(i)&#125;已经设置了3个</span></span><br></pre></td></tr></table></figure>

<h3 id="扩展运算符"><a href="#扩展运算符" class="headerlink" title="扩展运算符..."></a>扩展运算符<code>...</code></h3><p>es6 的扩展运算符，又叫展开合并运算符，有两个意义<br>展开、合并<br>主要是操作 对象 和 数组 的语法<br>语法:<code>...</code></p>
<h4 id="展开"><a href="#展开" class="headerlink" title="展开"></a>展开</h4><p>数组</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>];</span><br><span class="line"><span class="comment">//把数组展开</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(...arr);</span><br><span class="line"><span class="keyword">const</span> arr2 = [...arr, <span class="number">600</span>, <span class="number">700</span>, <span class="number">800</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr2);</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Math</span>.<span class="title function_">max</span>(...arr2);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>7<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>8<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>9<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>10<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> lis = [...<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>)];</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//  下标为偶数的所有li打印</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(lis);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> res = lis.<span class="title function_">filter</span>(<span class="function">(<span class="params">ele</span>) =&gt;</span> <span class="title class_">Number</span>(ele.<span class="property">innerText</span>) % <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> o1 = &#123; <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span> &#125;;</span><br><span class="line"><span class="keyword">const</span> o2 = &#123;</span><br><span class="line">  <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">  ...o1,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o2);</span><br></pre></td></tr></table></figure>

<h4 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h4><p>当这个符号书写在函数的形参的位置，叫做合并运算符<br>当前形参位置开始获取实参，直到末尾<br>注意:合并运算符一定要写在最后一位</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">foo</span> = (<span class="params">a, b, ...c</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, c);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">foo</span>(<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>, <span class="number">600</span>, <span class="number">700</span>, <span class="number">800</span>);</span><br><span class="line"><span class="comment">//作用：箭头函数没有arguments，</span></span><br><span class="line"><span class="comment">//可以使用... 手动给他合并出一个高级的arguments</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">bar</span> = (<span class="params">...args</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(args);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">bar</span>(<span class="number">10</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">444</span>, <span class="number">444444</span>, <span class="number">550505</span>);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>对象的小补充</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> age = <span class="number">18</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="title function_">foo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">  <span class="comment">// age: age,</span></span><br><span class="line">  age,</span><br><span class="line">  foo,</span><br><span class="line">  <span class="attr">baz</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;123&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">bar</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;456&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br><span class="line">obj.<span class="title function_">baz</span>();</span><br><span class="line">obj.<span class="title function_">bar</span>();</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记07-DOM操作（一）</title>
    <url>/2022/05/01/b12%20DOM%E6%93%8D%E4%BD%9C(%E4%B8%80)/</url>
    <content><![CDATA[<h2 id="DOM-操作-一"><a href="#DOM-操作-一" class="headerlink" title="DOM 操作(一) "></a>DOM 操作(一) <span id="more"></span></h2><h3 id="1-什么是-DOM"><a href="#1-什么是-DOM" class="headerlink" title="1. 什么是 DOM"></a>1. 什么是 DOM</h3><p>DOM:Document Object Model 文档对象模型</p>
<p>DOM是在node下的一个对象</p>
<p>DOM 就是 js 和网页中各种内容的一个桥梁，允许开发者去通过 js 操作网页</p>
<h3 id="2-认识-DOM-tree"><a href="#2-认识-DOM-tree" class="headerlink" title="2.认识 DOM tree"></a>2.认识 DOM tree</h3><p><img src="https://miro.medium.com/v2/resize:fit:950/0*Sk5AAj4ze_bDFPA0.png" alt="The Dom Tree(No its not an actual tree) | by Joseph Chavez | Medium"></p>
<h3 id="3-DOM-的整体结构"><a href="#3-DOM-的整体结构" class="headerlink" title="3.DOM 的整体结构"></a>3.DOM 的整体结构</h3><h4 id="3-1-DOM-学习顺序"><a href="#3-1-DOM-学习顺序" class="headerlink" title="3.1 DOM 学习顺序"></a>3.1 DOM 学习顺序</h4><ol>
<li>DOM 元素之间的关系</li>
<li>DOM 元素获取</li>
<li>DOM 节点的 type、tag、content</li>
<li>DOM 节点的 attributes properties</li>
<li>DOM 节点的创建 插入 克隆 删除</li>
<li>DOM 节点的样式、类</li>
<li>DOM 元素&#x2F;window 的大小 滚动 坐标</li>
</ol>
<h4 id="3-2-DOM-继承关系图"><a href="#3-2-DOM-继承关系图" class="headerlink" title="3.2 DOM 继承关系图"></a>3.2 DOM 继承关系图</h4><p>node即代表构成网页的所有元素，其中包括：</p>
<ul>
<li>document，即上面提到的dom</li>
<li>element，即html标签里的内容，HTMLelement继承至element，而不是继承至document</li>
<li>chracterData,这是一个抽象的接口which contains characters（包含无意义的字符）</li>
<li>attr，attribute，指的是标签里的属性值，如id</li>
</ul>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/2023-04-18-16-51-47.png" alt="2023-04-18-16-51-47"></p>
<h3 id="4-节点、元素的导航"><a href="#4-节点、元素的导航" class="headerlink" title="4 节点、元素的导航"></a>4 节点、元素的导航</h3><h4 id="4-1-document-对象"><a href="#4-1-document-对象" class="headerlink" title="4.1 document 对象"></a>4.1 document 对象</h4><p>document对象即 <strong>整个网页</strong></p>
<p>获取非常规标签<br>html 元素:document.documentElement<br>body 元素:document.body<br>head 元素:document.head<br>文档声明:document.doctype</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>);</span><br><span class="line"><span class="keyword">var</span> htmlEl = <span class="variable language_">document</span>.<span class="property">documentElement</span>;</span><br><span class="line"><span class="keyword">var</span> bodyEl = <span class="variable language_">document</span>.<span class="property">body</span>;</span><br><span class="line"><span class="keyword">var</span> headEl = <span class="variable language_">document</span>.<span class="property">head</span>;</span><br><span class="line"><span class="keyword">var</span> doctype = <span class="variable language_">document</span>.<span class="property">doctype</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(htmlEl);<span class="comment">//打印出整个网页</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(bodyEl);<span class="comment">//打印出body</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(headEl);<span class="comment">//打印出head</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(doctype);</span><br></pre></td></tr></table></figure>

<h4 id="4-2-节点-Node-之间的导航-navigator"><a href="#4-2-节点-Node-之间的导航-navigator" class="headerlink" title="4.2 节点(Node)之间的导航(navigator)"></a>4.2 节点(Node)之间的导航(navigator)</h4><p>节点是指构成网页的最小元素，详见第六节</p>
<p>包括：</p>
<ul>
<li>注释</li>
<li>html标签</li>
<li>文本等等</li>
</ul>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/2023-04-18-16-52-19.png" alt="2023-04-18-16-52-19"></p>
<ul>
<li>概念:如果我们获取到一个节点后，可以根据这个节点去获取其他节点，我们称为节点之间的导航</li>
<li>节点之间存在如下关系<br>父节点:parentNode<br>前兄弟节点:previousSibling<br>后兄弟节点:nextSibling<br>子节点:childNodes<br>第一个子节点:firstChild<br>最后一个子节点:lastChild</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 我是注释，哈哈哈 --&gt;</span></span><br><span class="line">我是文本</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>哈哈哈<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> bodyEl = <span class="variable language_">document</span>.<span class="property">body</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//获取body的所有子节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(bodyEl.childNodes);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 是一个伪数组 arguments实参列表 可以forEach 不能用(比如sort...)其他数组方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> list = bodyEl.<span class="property">childNodes</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(list);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// list.forEach(function (ele) &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   console.log(ele);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//获取body的第一个子节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// var bodyElFirstChild= bodyEl.childNodes[0]</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> bodyElFirstChild = bodyEl.<span class="property">firstChild</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(bodyElFirstChild);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//获取body中的注释 下一个兄弟节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> bodyElCommentChild = bodyElFirstChild.<span class="property">nextSibling</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(bodyElCommentChild);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//获取body的父节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> bodyParent = bodyEl.<span class="property">parentNode</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(bodyParent);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-3-元素-Element-之间的导航-navigator"><a href="#4-3-元素-Element-之间的导航-navigator" class="headerlink" title="4.3 元素(Element)之间的导航(navigator)"></a>4.3 元素(Element)之间的导航(navigator)</h4><p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/2023-04-18-16-52-34.png" alt="2023-04-18-16-52-34"></p>
<ul>
<li>概念:如果我们获取到一个元素后，可以根据这个元素去获取其他元素，我们称为元素之间的导航</li>
<li>元素之间存在如下关系<br>父元素:parentElement<br>前兄弟元素:previousElementSibling<br>后兄弟元素:nextElementSibling<br>子元素:children<br>第一个子元素:firstElementChild<br>最后一个子元素:lastElementChild</li>
</ul>
<h4 id="4-4-Document-和-Element-的关系"><a href="#4-4-Document-和-Element-的关系" class="headerlink" title="4.4 Document 和 Element 的关系"></a>4.4 Document 和 Element 的关系</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//访问对象的某个属性，类似obj.name obj和name之间没有继承</span></span><br><span class="line"><span class="comment">//是这些对象继承于Element,而不是Document继承于Element</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>; <span class="comment">//body对象</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">head</span>; <span class="comment">//head对象</span></span><br></pre></td></tr></table></figure>

<h4 id="4-5-表格-table-元素的导航-navigator"><a href="#4-5-表格-table-元素的导航-navigator" class="headerlink" title="4.5 表格(table)元素的导航(navigator)"></a>4.5 表格(table)元素的导航(navigator)</h4><ul>
<li>table.rows&#x2F;table.tHead&#x2F;table.tFoot&#x2F;table.tBodies</li>
<li>table.rows 表格内部的 tr 的集合</li>
<li>tr<br>tr.cells tr 中所有的单元格的集合<br>tr.sectionRowIndex tbody 内的行索引<br>tr.rowIndex 整个表格中行的索引，包含了表格头部</li>
<li>td.cellIndex 在某一行中某个单元格的索引</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>alex<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>18<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>唱，跳<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>tom<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>30<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>rap<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//1.拿到整个table</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> table = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">firstElementChild</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(table);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(table.<span class="property">tHead</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(table.<span class="property">tBodies</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(table.<span class="property">tFoot</span>); <span class="comment">//null 因为没写</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(table.<span class="property">rows</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//拿到第一行</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> rowEl = table.<span class="property">rows</span>[<span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//第一行第一格</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(rowEl.<span class="property">cells</span>[<span class="number">0</span>]);</span></span><br><span class="line"><span class="language-javascript">  rowEl.<span class="property">cells</span>[<span class="number">0</span>].<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;red&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(rowEl.<span class="property">sectionRowIndex</span>); <span class="comment">//在tbody中的索引 0</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(rowEl.<span class="property">rowIndex</span>); <span class="comment">//包括了所有的行 1</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-6-表单-form-元素的导航-navigator"><a href="#4-6-表单-form-元素的导航-navigator" class="headerlink" title="4.6 表单(form)元素的导航(navigator)"></a>4.6 表单(form)元素的导航(navigator)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;account&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;fruits&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;apple&quot;</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;orange&quot;</span>&gt;</span>橘子<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//获取form</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> form = <span class="variable language_">document</span>.<span class="property">forms</span>[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(form);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//获取form的子元素</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> ipt = form.<span class="property">elements</span>.<span class="property">account</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(ipt);</span></span><br><span class="line"><span class="language-javascript">  <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(ipt.<span class="property">value</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;, <span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-获取元素的方法"><a href="#5-获取元素的方法" class="headerlink" title="5 获取元素的方法!!!"></a>5 获取元素的方法!!!</h3><h4 id="5-1-getElementBy"><a href="#5-1-getElementBy" class="headerlink" title="5.1 getElementBy*"></a>5.1 <code>getElementBy*</code></h4><ol>
<li>document.getElementById(‘id 名’)通过 id 获取元素</li>
<li>document.getElementsByClassName(‘类名’)</li>
<li>document.getElementsByTagName(‘标签名’)</li>
<li>document.getElementsByName(‘name 属性值’)</li>
</ol>
<h4 id="5-2-query-系列"><a href="#5-2-query-系列" class="headerlink" title="5.2 query 系列"></a>5.2 query 系列</h4><ol>
<li><p>querySelector(‘选择器语法’)<br>获取单个</p>
</li>
<li><p>querySelectorAll(‘选择器语法’)<br>获取多个，如果只有一个符合，也会以 NodeList 给你</p>
</li>
</ol>
<h4 id="5-3"><a href="#5-3" class="headerlink" title="5.3"></a>5.3</h4><table>
<thead>
<tr>
<th align="center">方法名</th>
<th align="center">搜索方式</th>
<th align="center">可以在元素上调用？</th>
<th align="center">实时的</th>
</tr>
</thead>
<tbody><tr>
<td align="center">querySelector</td>
<td align="center">Css-selector</td>
<td align="center">✅</td>
<td align="center">-</td>
</tr>
<tr>
<td align="center">querySelectorAll</td>
<td align="center">Css-selector</td>
<td align="center">✅</td>
<td align="center">-</td>
</tr>
<tr>
<td align="center">getElementById</td>
<td align="center">id</td>
<td align="center">-</td>
<td align="center">-</td>
</tr>
<tr>
<td align="center">getElementsByName</td>
<td align="center">Name</td>
<td align="center">-</td>
<td align="center">✅</td>
</tr>
<tr>
<td align="center">getElementsByTagName</td>
<td align="center"><code>tag or *</code></td>
<td align="center">✅</td>
<td align="center">✅</td>
</tr>
<tr>
<td align="center">getElementsByClassName</td>
<td align="center">Class</td>
<td align="center">✅</td>
<td align="center">✅</td>
</tr>
</tbody></table>
<p>开发常用的是 query 系列，有时候会使用 getElementById 来兼容低版本浏览器</p>
<p>关于实时的理解</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> lisByGet = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> lisByQuery = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//创建了一个li并且放到ul里面去了</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  li.<span class="property">innerHTML</span> = <span class="string">&#x27;我是后来创建的&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  ul.<span class="title function_">appendChild</span>(li);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(lisByGet); <span class="comment">//实时的 3个</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(lisByQuery); <span class="comment">//非实时 2个</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6-Node-节点的属性"><a href="#6-Node-节点的属性" class="headerlink" title="6 Node 节点的属性"></a>6 Node 节点的属性</h3><ul>
<li>什么是节点？<br>页面组成的最小单元</li>
<li>注意事项<br>标签都是节点</li>
</ul>
<h4 id="6-1-nodeType-了解"><a href="#6-1-nodeType-了解" class="headerlink" title="6.1 nodeType(了解)"></a>6.1 nodeType(了解)</h4><p>nodeType 属性提供了一种获取节点类型的方法<br>他是一个数值类型</p>
<ul>
<li>8 注释节点</li>
<li>3 文本节点</li>
<li>1 元素节点</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 我是注释 --&gt;</span></span><br><span class="line">我是文本</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> bodyChildNodes = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">childNodes</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(bodyChildNodes);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> comment = bodyChildNodes[<span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> textNode = bodyChildNodes[<span class="number">2</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> divNode = bodyChildNodes[<span class="number">5</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(comment.<span class="property">nodeType</span>); <span class="comment">//8 注释节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(textNode.<span class="property">nodeType</span>); <span class="comment">//3 文本节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(divNode.<span class="property">nodeType</span>); <span class="comment">//1 元素节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Node</span>.<span class="property">COMMENT_NODE</span>); <span class="comment">//8</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">for</span> (<span class="keyword">var</span> node <span class="keyword">of</span> bodyChildNodes) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">switch</span> (node.<span class="property">nodeType</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">case</span> <span class="number">1</span>:</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//他是xxx节点</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">default</span>:</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="6-2-nodeName、tagName-了解"><a href="#6-2-nodeName、tagName-了解" class="headerlink" title="6.2 nodeName、tagName(了解)"></a>6.2 nodeName、tagName(了解)</h4><p>nodeName 和 tagName 不同？<br>对于元素，都一样<br>对于其他节点类型不同，nodeName 有值是对应的字符串，tagName 为 undefined</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 我是注释 --&gt;</span></span><br><span class="line">我是文本</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> bodyChildNodes = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">childNodes</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(bodyChildNodes);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> comment = bodyChildNodes[<span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> textNode = bodyChildNodes[<span class="number">2</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> divNode = bodyChildNodes[<span class="number">3</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//nodeName 节点名称</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//tagName 针对元素</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(divNode.<span class="property">nodeName</span>, comment.<span class="property">nodeName</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(divNode.<span class="property">tagName</span>); <span class="comment">//DIV</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(comment.<span class="property">tagName</span>); <span class="comment">//undefined</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="6-3-data、innerHTML、textContent-掌握"><a href="#6-3-data、innerHTML、textContent-掌握" class="headerlink" title="6.3 data、innerHTML、textContent(掌握)"></a>6.3 data、innerHTML、textContent(掌握)</h4><ul>
<li>data针对非元素节点获取数据(nodeValue)</li>
<li>innerHtml拿到div里面所有的文本包括标签,反之也可以在js对h5添加标签</li>
<li>textContent拿到node（div）里的内容，不包括标签</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 我是注释 --&gt;</span></span><br><span class="line">我是文本</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> bodyChildNodes = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">childNodes</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(bodyChildNodes);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> comment = bodyChildNodes[<span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> textNode = bodyChildNodes[<span class="number">2</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> divNode = bodyChildNodes[<span class="number">3</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//data针对非元素节点获取数据(nodeValue)</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(comment.<span class="property">data</span>, textNode.<span class="property">data</span>, divNode.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//innerHTML textContent</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(divNode.<span class="property">innerHTML</span>); <span class="comment">//拿到div里面所有的文本包括标签</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(divNode.<span class="property">textContent</span>); <span class="comment">//不包括标签</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//设置普通文本 没有区别</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// divNode.innerHTML = &#x27;哈哈啊&#x27;;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// divNode.textContent = &#x27;哈哈啊&#x27;;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//设置的时候书写了html标签</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// divNode.innerHTML = &#x27;&lt;h1&gt;哈哈哈&lt;/h1&gt;&#x27;; //h1当作元素来解析</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// divNode.textContent = &#x27;&lt;h1&gt;哈哈哈&lt;/h1&gt;&#x27;; //当作普通文本</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(divNode.<span class="property">outerHTML</span>);</span></span><br><span class="line"><span class="language-javascript">  divNode.<span class="property">innerText</span> = <span class="string">&#x27;&lt;h1&gt;哈哈哈&lt;/h1&gt;&#x27;</span>; <span class="comment">//少用</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//innerText和textContent有区别，</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//innerText的值依赖于渲染之后的结果，会受到css样式的影响，会触发重排（reflow）会有一定的性能影响</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//我知道用textContent比较好就可以了</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="6-4-节点的其他属性"><a href="#6-4-节点的其他属性" class="headerlink" title="6.4 节点的其他属性"></a>6.4 节点的其他属性</h4><ul>
<li>DOM 元素的其他属性<br>value 常用于表单元素 input&#x2F;select<br>href a 标签<br>id 全局属性( id class title style…)<br>全局属性是所有元素都可以使用的属性</li>
<li>class&#x2F;style 放到后面讲</li>
<li>hidden 也是一个全局属性，可以用于设置元素的显示&#x2F;隐藏</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//获取元素</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//事件句柄 handler  回调函数</span></span></span><br><span class="line"><span class="language-javascript">  btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//点击按钮之后 你要做的事写在这个函数里面</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(123);</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// box.hidden = true;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// box.style.display = &#x27;none&#x27;;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//切换</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// box.hidden = true;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// if (box.hidden === true) &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   box.hidden = false;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125; else &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   box.hidden = true;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//直接取反</span></span></span><br><span class="line"><span class="language-javascript">    box.<span class="property">hidden</span> = !box.<span class="property">hidden</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记08-DOM操作（二）</title>
    <url>/2022/05/01/b13%20%20DOM%E6%93%8D%E4%BD%9C%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h2 id="DOM-操作-二"><a href="#DOM-操作-二" class="headerlink" title="DOM 操作(二) "></a>DOM 操作(二) <span id="more"></span></h2><h3 id="1-元素的特性-attribute"><a href="#1-元素的特性-attribute" class="headerlink" title="1. 元素的特性 attribute"></a>1. 元素的特性 attribute</h3><p>浏览器在解析 html 元素时，会将对应的 attribute 也创建出来放在相应的对象上<br>比如 id、class 是全局的 attribute，会有对应的 id、class</p>
<h4 id="1-1-attribute-的分类"><a href="#1-1-attribute-的分类" class="headerlink" title="1.1 attribute 的分类"></a>1.1 attribute 的分类</h4><ul>
<li>标准的 attribute 比如 id class title href value</li>
<li>非标准的 attribute 开发者自定义的 比如 age kfc abc</li>
</ul>
<blockquote>
<p>age&#x3D;”18”</p>
<p>age &#x3D; attribute</p>
<p>“18”&#x3D;property</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">age</span>=<span class="string">&quot;18&quot;</span> <span class="attr">height</span>=<span class="string">&quot;160&quot;</span> <span class="attr">kfc</span>=<span class="string">&quot;50&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="1-2-attribute-的操作"><a href="#1-2-attribute-的操作" class="headerlink" title="1.2 attribute 的操作"></a>1.2 attribute 的操作</h4><p>所有的 attribute 都可以支持如下方法:<br>ele.hasAttribute(name)- 检查某个特性是否存在<br>ele.getAttribute(name)- 获取这个特性值<br>ele.setAttribute(name,value) - 设置某个特性值<br>ele.removeAttribute(name) - 移除某个特性 值<br>ele.attributes attr 的对象集合，具有 name、value 属性</p>
<p>attribute 的特征<br>大小写不敏感(id 和 ID 相同)<br>他们的值总是字符串类型</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- get --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">AGE</span>=<span class="string">&quot;18&quot;</span> <span class="attr">height</span>=<span class="string">&quot;160&quot;</span> <span class="attr">kfc</span>=<span class="string">&quot;50&quot;</span>&gt;</span>v我50<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//1. 所有的属性都支持的操作</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//检查某一个属性是否存在</span></span></span><br><span class="line"><span class="language-javascript">    box.<span class="title function_">hasAttribute</span>(<span class="string">&#x27;class&#x27;</span>), <span class="comment">//true</span></span></span><br><span class="line"><span class="language-javascript">    box.<span class="title function_">hasAttribute</span>(<span class="string">&#x27;name&#x27;</span>), <span class="comment">//false</span></span></span><br><span class="line"><span class="language-javascript">    box.<span class="title function_">hasAttribute</span>(<span class="string">&#x27;age&#x27;</span>) <span class="comment">//true</span></span></span><br><span class="line"><span class="language-javascript">  );</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//获取某个属性</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="title function_">getAttribute</span>(<span class="string">&#x27;age&#x27;</span>), box.<span class="title function_">getAttribute</span>(<span class="string">&#x27;id&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//设置某个属性</span></span></span><br><span class="line"><span class="language-javascript">  box.<span class="title function_">setAttribute</span>(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  box.<span class="title function_">setAttribute</span>(<span class="string">&#x27;age&#x27;</span>, <span class="string">&#x27;99999&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//移除某个特性</span></span></span><br><span class="line"><span class="language-javascript">  box.<span class="title function_">removeAttribute</span>(<span class="string">&#x27;id&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//attributes 属性 所有属性的集合</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">attributes</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">of</span> box.<span class="property">attributes</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;属性-------属性值&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(attr.<span class="property">name</span>, attr.<span class="property">value</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//通过getAttribute拿到的一定是字符串类型</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(ipt.<span class="title function_">getAttribute</span>(<span class="string">&#x27;checked&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-元素的属性-property"><a href="#2-元素的属性-property" class="headerlink" title="2. 元素的属性 property"></a>2. 元素的属性 property</h3><h4 id="2-1-元素-property-的操作"><a href="#2-1-元素-property-的操作" class="headerlink" title="2.1 元素 property 的操作"></a>2.1 元素 property 的操作</h4><ul>
<li><p>对于标准的 attribute,会在 DOM 对象上创建其对应的 property 属性</p>
</li>
<li><p>大多数情况下，他们都是相互作用的</p>
<ul>
<li>改变 property，通过 attribute 获取的值，会随着改变</li>
<li>通过 setAttribute 设置值，property 的值会随着改变<br>但是 input 的 value 修改只能走 attribute</li>
</ul>
</li>
<li><p>除非特别情况，大多数情况下推荐使用 property 方式，因为他默认情况下是有类型的.</p>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="comment">//name就是obj的property</span></span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 元素之中的属性称为attribute --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 标准的attribute在对应的对象中都有对应的property--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span> <span class="attr">title</span>=<span class="string">&quot;我是盒子&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">AGE</span>=<span class="string">&quot;18&quot;</span> <span class="attr">height</span>=<span class="string">&quot;160&quot;</span> <span class="attr">kfc</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span><br><span class="line">  v我50</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">checked</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;account&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>设置ipt的值<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//对象中的属性称之为property</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.dir(box);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//对于非标准的 都是undefined</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//对于标准的 能拿到（class相对特殊）</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(box.id, box.class, box.AGE, box.title);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//判断ipt是否选中</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// if (ipt.getAttribute(&#x27;checked&#x27;)) &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   console.log(&#x27;checkbox属于选中&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(ipt.checked);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span> (ipt.<span class="property">checked</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(&#x27;checkbox属于选中&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//attribute和property 是相互影响的</span></span></span><br><span class="line"><span class="language-javascript">  box.<span class="property">id</span> = <span class="string">&#x27;aaaaa&#x27;</span>; <span class="comment">//改动porperty 有</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="title function_">getAttribute</span>(<span class="string">&#x27;id&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//改attribute</span></span></span><br><span class="line"><span class="language-javascript">  box.<span class="title function_">setAttribute</span>(<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;V我50&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">title</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//3. 特殊情况,input设置值（了解即可）</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> acc = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.account&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//设置元素的attribute中的value为juanjie attribute优先级更高</span></span></span><br><span class="line"><span class="language-javascript">    acc.<span class="title function_">setAttribute</span>(<span class="string">&#x27;value&#x27;</span>, <span class="string">&#x27;juanjie&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//设置对应的property value为student</span></span></span><br><span class="line"><span class="language-javascript">    acc.<span class="property">value</span> = <span class="string">&#x27;student&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-2-HTML5-的data-自定义属性"><a href="#2-2-HTML5-的data-自定义属性" class="headerlink" title="2.2 HTML5 的data-* 自定义属性"></a>2.2 HTML5 的<code>data-*</code> 自定义属性</h4><p>h5 的自定义属性</p>
<ul>
<li>在元素节点上有一个 dataset 的成员</li>
<li>是一个类似 对象 的数据类型</li>
<li>里面存储着所有 data-开头的自定义属性</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">id</span>=<span class="string">&quot;box&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">title</span>=<span class="string">&quot;我是盒子&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">&quot;box&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">AGE</span>=<span class="string">&quot;18&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">height</span>=<span class="string">&quot;160&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">kfc</span>=<span class="string">&quot;50&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-age</span>=<span class="string">&quot;18&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-kfc</span>=<span class="string">&quot;50&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  v我50</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">dataset</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">dataset</span>.<span class="property">age</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">dataset</span>.<span class="property">kfc</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//修改？</span></span></span><br><span class="line"><span class="language-javascript">  box.<span class="property">dataset</span>.<span class="property">age</span> = <span class="number">9999</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//增加</span></span></span><br><span class="line"><span class="language-javascript">  box.<span class="property">dataset</span>.<span class="property">a</span> = <span class="number">200</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//删除</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">delete</span> box.<span class="property">dataset</span>.<span class="property">a</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-元素的-class、style"><a href="#3-元素的-class、style" class="headerlink" title="3.元素的 class、style"></a>3.元素的 class、style</h3><p>动态修改样式的两个选择</p>
<ol>
<li>在 css 中写好对应的样式，然后动态操作元素的类名</li>
<li>动态的修改 style 属性</li>
</ol>
<p>开发？更推荐用 class，不得不用 style(精准修改某一个的 css 属性的值)</p>
<h4 id="3-1-初体验"><a href="#3-1-初体验" class="headerlink" title="3.1 初体验"></a>3.1 初体验</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 结构与样式分离，行为(js)与表现(html css)分离 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 假如买了一套汤臣一品  </span></span><br><span class="line"><span class="comment">    html 告诉你有几室几厅 </span></span><br><span class="line"><span class="comment">    css  这个客厅多大 地板什么颜色 墙什么颜色</span></span><br><span class="line"><span class="comment">    js  这里有个门 我一推 他就开了  哪里有个开关 我一按 就开灯</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>我是box<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//获取box</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> count = <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">    box.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">style</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//字体变红 大小改为24px 背景色改成绿色</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//1.直接修改style</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// box.style.color = &#x27;red&#x27;;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// box.style.fontSize = &#x27;24px&#x27;;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// box.style.backgroundColor = &#x27;green&#x27;;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//2.动态添加某一个class</span></span></span><br><span class="line"><span class="language-javascript">      box.<span class="property">className</span> += <span class="string">&#x27; active&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//3. 动态修改box的宽度</span></span></span><br><span class="line"><span class="language-javascript">      box.<span class="property">style</span>.<span class="property">width</span> = <span class="number">100</span> * count + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">      count++;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="3-2-Element-class-用法"><a href="#3-2-Element-class-用法" class="headerlink" title="3.2 Element-class 用法"></a>3.2 Element-class 用法</h4><ul>
<li>元素的 class attribute 对应的 property 并不叫 class 而是 className；<br>因为 js 早期(现代的所有高级编程语言里面)不允许使用 class 关键字来作为对象的属性，所以 DOM 的规范就使用了 className</li>
<li>我们可以直接对 className 赋值，但是他会替换整个类名</li>
<li>如果需要添加&#x2F;移除 单个 class 推荐使用 classList</li>
<li>ele.classList 是一个特殊的对象<br>ele.classList.add(class) 添加类名<br>ele.classList.remove(class) 移除类名<br>ele.classList.contains(class) 检查是否有类名<br>ele.classList.toggle(class) 切换类名</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#f80</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.bbb</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>1123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// //1.方法一 className</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// box.className += &#x27; active bbb&#x27;;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// //移除bbb</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// box.className = &#x27;box active&#x27;;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//2.方法二 classList操作</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//添加类名</span></span></span><br><span class="line"><span class="language-javascript">  box.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;active&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  box.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;bbb&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//删除类名</span></span></span><br><span class="line"><span class="language-javascript">  box.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;bbb&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//contains检查是否包含某个类名 有就true 没有就false</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;aaa&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//box在active之间切换</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// if (box.classList.contains(&#x27;active&#x27;)) &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   box.classList.remove(&#x27;active&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125; else &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   box.classList.add(&#x27;active&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//toggle有该类名 就移除 没有就添加</span></span></span><br><span class="line"><span class="language-javascript">    box.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;active&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// // 回顾</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// //构造函数 类</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// function P()&#123;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// //类方法 P.eat()</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// //实例方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// var p = new P()</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// p.jump()</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="3-3-Element-style-用法"><a href="#3-3-Element-style-用法" class="headerlink" title="3.3 Element-style 用法"></a>3.3 Element-style 用法</h4><ul>
<li>如果要单独修改某一个 css 属性，可以通过 style 来操作，对于多词(multi-word)属性，使用 camelCase(小驼峰)</li>
<li>如果将值设为空字符串,那么会使用默认样式</li>
<li>多个样式的写法要用到 cssText 但是不推荐</li>
<li>如果要读取非行内样式要通过<strong>getComputedStyle(ele).width</strong></li>
<li>兼容ie低版本 ele.currentStyle</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(pink, skyblue);</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.bbb</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box active bbb&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #fff&quot;</span>&gt;</span>box<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//获取</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//获取到它的property</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">style</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(box.style.backgroundColor);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//如果设置为空字符串，那么使用默认值</span></span></span><br><span class="line"><span class="language-javascript">  box.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//设置多个样式</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// box.style.color = &#x27;lightgreen&#x27;;</span></span></span><br><span class="line"><span class="language-javascript">  box.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="string">&#x27;50px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//不推荐</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// box.style.cssText = &#x27;font-size:50px;color:lightgreen;&#x27;;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//style 这种方式 设置也好 读取也好 只能访问到行内样式</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//对于css文件，style标签内的样式 ele.style拿不到</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">style</span>.<span class="property">width</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//想要拿到所有的样式？</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getComputedStyle</span>(box).<span class="property">width</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-元素的常见操作"><a href="#4-元素的常见操作" class="headerlink" title="4.元素的常见操作"></a>4.元素的常见操作</h3><h4 id="4-1-创建，插入，克隆，删除"><a href="#4-1-创建，插入，克隆，删除" class="headerlink" title="4.1 创建，插入，克隆，删除"></a>4.1 创建，插入，克隆，删除</h4><ol>
<li>创建，插入，<br>创建元素:document.createElement(tagName),innerHTML,document.write;后两种不推荐<br>插入:</li>
<li>创建文本节点doc.createTextNode()</li>
</ol>
<p>​		</p>
<ol>
<li>node.append(node&#x2F;string)–在节点内部末尾 插入节点&#x2F;字符串<br>node.prepend(node&#x2F;string)–在节点内部开头 插入节点&#x2F;字符串<br>node.before(node&#x2F;string)– 在节点前面 插入节点&#x2F;字符串<br>node.after(node&#x2F;string)– 在节点后面 插入节点&#x2F;字符串<br>node.replaceWith(node&#x2F;string)– 将节点替换为 节点&#x2F;字符串</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span> 11111 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;box-first&quot;</span>&gt;</span>啊哈哈哈哈哈<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>嘿嘿嘿<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//1.通过innerHTML(不正规的做法)</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// box.innerHTML = `</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &lt;h2 class=&#x27;title&#x27;&gt;我是标题&lt;/h2&gt;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// `;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//2.创建一个DOM对象</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> h2El = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;h2&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  h2El.<span class="property">className</span> = <span class="string">&#x27;title&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  h2El.<span class="property">textContent</span> = <span class="string">&#x27;我是标题&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//将元素插入</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// box.append(h2El); //添加到box内到最后面</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// var box_first = document.querySelector(&#x27;.box-first&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// box.append(box_first);</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// box.prepend(h2El); //添加到box内的最前面</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// box.after(h2El);//添加到box的后面</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// box.before(h2El)//添加到box的前面</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// box.replaceWith(&#x27;123&#x27;); //替换可以是元素节点也可以是纯文本</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>克隆，删除</li>
</ol>
<ul>
<li>移除元素我们可以调用元素本身的 remove 方法</li>
<li>克隆元素 cloneNode 方法，可以传入一个布尔值，来决定是否要克隆对应的后代元素</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;remove-btn&quot;</span>&gt;</span>移除box<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;clone-btn&quot;</span>&gt;</span>克隆box<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//获取元素</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> removeBtn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.remove-btn&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> cloneBtn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.clone-btn&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//移除</span></span></span><br><span class="line"><span class="language-javascript">  removeBtn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    box.<span class="title function_">remove</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//克隆</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> count = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">  cloneBtn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//深度克隆</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> newNode = box.<span class="title function_">cloneNode</span>(<span class="literal">true</span>);</span></span><br><span class="line"><span class="language-javascript">    newNode.<span class="property">children</span>[<span class="number">0</span>].<span class="property">textContent</span> = <span class="string">&#x27;我是标题&#x27;</span> + count;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">append</span>(newNode);</span></span><br><span class="line"><span class="language-javascript">    count++;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-2-旧的元素操作方法"><a href="#4-2-旧的元素操作方法" class="headerlink" title="4.2 旧的元素操作方法"></a>4.2 旧的元素操作方法</h4><p>parentEle.appendChild(node) 在 parentEle 后面添加一个子节点<br>parentEle.insertBefore(node,nextsibling) 在 parentEle 内的 nextsibling 前面插入一个 node</p>
<p>parentEle.replaceChild(node,oldChild) 在 parentEle 中，用 node 替换掉 oldChild</p>
<p>parentEle.removeChild(node) 在 parentEle 中，移除某个元素</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记05-对象</title>
    <url>/2022/04/29/b10%20javascript%E5%85%A5%E9%97%A805%20%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h2 id="对象"><a href="#对象" class="headerlink" title="对象 "></a>对象 <span id="more"></span></h2><h3 id="认识对象"><a href="#认识对象" class="headerlink" title="认识对象"></a>认识对象</h3><ul>
<li>在数据类型中一种特别的类型：对象类型<ul>
<li>对象类型是一种存储键值对(key-value)的更复杂的数据类型</li>
<li>键值对可以是属性也可以是方法(key 是字符串，value 可以是任意数据类型)</li>
</ul>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num = &#123;</span><br><span class="line">  <span class="attr">key</span>: value,</span><br><span class="line">  属性名: 属性值,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      两个术语：函数/方法</span></span><br><span class="line"><span class="comment">        函数（function）:在js 代码中通过function默认定义的一个结构，称为函数.</span></span><br><span class="line"><span class="comment">        方法(method):如果把一个函数放到对象中，作为对象的一个属性，那么将这个函数称为方法.</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="title function_">foo</span>();</span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">  <span class="comment">//key:value</span></span><br><span class="line">  <span class="comment">//key是字符串，但是在定义对象的属性名的时候，大部份情况下可以省略</span></span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">99</span>,</span><br><span class="line">  <span class="attr">isSingle</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">hobby</span>: [<span class="string">&#x27;唱&#x27;</span>, <span class="string">&#x27;跳&#x27;</span>, <span class="string">&#x27;rap&#x27;</span>],</span><br><span class="line">  <span class="comment">//key比较复杂一点，&quot;&quot;是不能省略的</span></span><br><span class="line">  <span class="string">&#x27;my friend&#x27;</span>: &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;tom&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">eat</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;嘎嘎香～&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="创建和使用对象"><a href="#创建和使用对象" class="headerlink" title="创建和使用对象"></a>创建和使用对象</h3><p>有三种</p>
<ol>
<li>对象字面量(Object Literal)</li>
<li>new Object+动态添加属性</li>
<li>new 其他类</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.new Object()</span></span><br><span class="line"><span class="keyword">var</span> obj1 = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">obj1.<span class="property">name</span> = <span class="string">&#x27;tom&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.new 其他类</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="keyword">var</span> obj2 = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br></pre></td></tr></table></figure>

<h3 id="对象的常见操作"><a href="#对象的常见操作" class="headerlink" title="对象的常见操作"></a>对象的常见操作</h3><ul>
<li>访问对象的属性 Read</li>
<li>修改对象的属性 Update</li>
<li>添加对象的属性 Create</li>
<li>删除对象的属性 Delete</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.定义一个对象</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">  <span class="attr">friend</span>: &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;chicken&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">eat</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;嘎嘎香&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// console.log(person);</span></span><br><span class="line"><span class="comment">//2.访问对象的属性</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="property">name</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="property">friend</span>.<span class="property">name</span>);</span><br><span class="line">person.<span class="title function_">eat</span>();</span><br><span class="line"><span class="comment">//3.修改对象中的属性</span></span><br><span class="line"><span class="comment">//一旦你在浏览器的控制台打印整个复杂类型的变量</span></span><br><span class="line"><span class="comment">//你点了展开的小三角，就会显示成这个变量最终的样子</span></span><br><span class="line">person.<span class="property">age</span> = <span class="number">81</span>;</span><br><span class="line"><span class="comment">// console.log(person);</span></span><br><span class="line">person.<span class="property">eat</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;滂臭&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line">person.<span class="title function_">eat</span>();</span><br><span class="line"><span class="comment">//4.添加对象中的属性</span></span><br><span class="line">person.<span class="property">study</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;没日没夜的卷&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person);</span><br><span class="line"><span class="comment">//5.删除对象中的属性</span></span><br><span class="line"><span class="comment">// delete 操作符</span></span><br><span class="line"><span class="keyword">delete</span> person.<span class="property">study</span>;</span><br><span class="line"><span class="keyword">delete</span> person.<span class="property">age</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person);</span><br></pre></td></tr></table></figure>

<h3 id="数组关联语法"><a href="#数组关联语法" class="headerlink" title="数组关联语法"></a>数组关联语法</h3><p>当对象的 key 是无效的变量标识符时，可以使用这种语法来获取键值<br><strong>不能包含空格、不能以数字开头，不能包含特殊字符</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;jack&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;my friend&#x27;</span>: &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">    <span class="attr">sing</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;嘉宾～&#x27;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;eat something&#x27;</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;嘎嘎炫～&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//点访问符就不行啦</span></span><br><span class="line"><span class="comment">// console.log(obj.my friend)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj[<span class="string">&#x27;my friend&#x27;</span>]);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">name</span>, obj[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="comment">//名字太长 单独拿一个变量装起来</span></span><br><span class="line"><span class="keyword">var</span> eatKey = <span class="string">&#x27;eat something&#x27;</span>;</span><br><span class="line"><span class="comment">// obj[&#x27;eat something&#x27;]();</span></span><br><span class="line"><span class="comment">//千万不要写成 obj.eatKey ，因为这样是访问obj的eatKey属性</span></span><br><span class="line"><span class="comment">// obj.eatKey();</span></span><br><span class="line"><span class="comment">//访问对象不存在的属性</span></span><br><span class="line"><span class="comment">// console.log(obj.age);</span></span><br><span class="line">obj[eatKey]();</span><br></pre></td></tr></table></figure>

<h3 id="对象的遍历-for…in"><a href="#对象的遍历-for…in" class="headerlink" title="对象的遍历(for…in)"></a>对象的遍历(for…in)</h3><ul>
<li>获取对象中所有的属性和方法</li>
<li>Object.keys()</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//我们在开发的时候，可能会要去挨个的拿到里面的每个key以及对应的value</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">  <span class="attr">height</span>: <span class="number">2.88</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// console.log(`key:$&#123;&#x27;name&#x27;&#125;,value:$&#123;person.name&#125;`);</span></span><br><span class="line"><span class="comment">// console.log(`key:$&#123;&#x27;age&#x27;&#125;,value:$&#123;person.age&#125;`);</span></span><br><span class="line"><span class="comment">//Object.keys(person)返回对象的自己的可枚举属性组成的数组</span></span><br><span class="line"><span class="comment">//Object.definePorperty Proxy</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(person));</span><br><span class="line"><span class="comment">//对对象进行遍历</span></span><br><span class="line"><span class="keyword">var</span> personKeys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(person);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; personKeys.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  <span class="comment">//personKeys[i]通过索引去拿数组里面的东西</span></span><br><span class="line">  <span class="keyword">var</span> key = personKeys[i];</span><br><span class="line">  <span class="comment">//通过数组关联语法去拿对象的东西</span></span><br><span class="line">  <span class="keyword">var</span> value = person[key];</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`key:<span class="subst">$&#123;key&#125;</span>,value:<span class="subst">$&#123;value&#125;</span>`</span>);</span><br><span class="line">    <span class="comment">//这种方法是每个都遍历一次，key和value都等于最后i代表的索引处的值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.for...in遍历对象</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> person) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(k);</span><br><span class="line">  <span class="comment">//key是键名</span></span><br><span class="line">  <span class="comment">// console.log(key);</span></span><br><span class="line">  <span class="comment">// console.log(`key:$&#123;key&#125;,value:$&#123;person[key]&#125;`);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对象无序    数组有序</span></span><br><span class="line"><span class="comment">//for...of... 默认是不能遍历对象的</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> foo <span class="keyword">of</span> person) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(foo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="js-的内存分配-important"><a href="#js-的内存分配-important" class="headerlink" title="js 的内存分配(!important)"></a>js 的内存分配(!important)</h3><ul>
<li><p>程序是需要加载到内存中来执行的，内存就可以划分为两个区域:栈内存，堆内存</p>
<ul>
<li><strong>原始类型</strong>占据的空间是在<strong>栈内存</strong>中分配的</li>
<li><strong>对象类型</strong>占据的空间是在<strong>堆内存</strong>中分配的</li>
</ul>
</li>
<li><p>原始类型的保存方式:保存的是值本身</p>
</li>
<li><p>对象类型的保存方式:保存的是对象的”引用”</p>
</li>
</ul>
<blockquote>
<p>函数本身是放到堆内存的，但是函数的执行是放到栈里面的。</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;jack&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> age = <span class="number">18</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">foo</span>: <span class="string">&#x27;foo&#x27;</span>,</span><br><span class="line">  <span class="attr">bar</span>: <span class="number">123</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> message = <span class="string">&#x27;hello&#x27;</span> + name;</span><br><span class="line"><span class="keyword">var</span> info = obj;</span><br><span class="line">info.<span class="property">bar</span> = <span class="number">456</span>;</span><br><span class="line"><span class="comment">//我们想要修改的是info的bar属性</span></span><br><span class="line"><span class="comment">//结果发现obj的bar也变了</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br></pre></td></tr></table></figure>

<h4 id="思考如下现象"><a href="#思考如下现象" class="headerlink" title="思考如下现象"></a>思考如下现象</h4><ol>
<li>两个对象的比较</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num1 = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">var</span> num2 = <span class="number">123</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1 === num2); <span class="comment">//true</span></span><br><span class="line"><span class="comment">//两个对象的比较</span></span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2 = &#123;&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj1 === obj2); <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj1 == obj2); <span class="comment">//false</span></span><br><span class="line"><span class="comment">//从内存的角度去解释</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>引用传递的内存表现</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//2.引用的赋值</span></span><br><span class="line"><span class="keyword">var</span> info = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;jack&#x27;</span>,</span><br><span class="line">  <span class="attr">friend</span>: &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> friend = info.<span class="property">friend</span>; <span class="comment">//&#123;name:&#x27;alex&#x27;&#125;</span></span><br><span class="line">friend.<span class="property">name</span> = <span class="string">&#x27;dog&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(info.<span class="property">friend</span>.<span class="property">name</span>); <span class="comment">//</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>值传递</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//3.值传递</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">a</span>) </span><br><span class="line">  a = <span class="number">200</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">100</span>;</span><br><span class="line"><span class="title function_">foo</span>(num);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">//100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// function sum(a, b) &#123;</span></span><br><span class="line"><span class="comment">//   console.log(a + b);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// sum(10, 20);</span></span><br><span class="line"><span class="comment">// sum(100, 200);</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>引用传递</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//4.引用传递,在函数中创建了一个新对象，没有对传入的对象进行修改</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">a</span>) &#123;</span><br><span class="line">  a = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;jack&#x27;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">//&#x27;jack&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">foo</span>(obj);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj); <span class="comment">//&#x27;alex&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>引用传递</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//5. 引用传递,但是对传入的对象进行了修改</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">a</span>) &#123;</span><br><span class="line">  a.<span class="property">name</span> = <span class="string">&#x27;dog&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">foo</span>(obj);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj); <span class="comment">//dog</span></span><br></pre></td></tr></table></figure>

<h3 id="this"><a href="#this" class="headerlink" title="this"></a>this</h3><p>目前掌握两个 this 的判断方法:</p>
<ul>
<li>默认的方式调用，this 指向 window</li>
<li>通过对象调用，this 指向对象</li>
</ul>
<blockquote>
<p>this 不看函数定义，只看函数调用</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//情况一:如果普通的函数被默认调用，this-&gt;window</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">  <span class="comment">// console.log(arguments);</span></span><br><span class="line">  <span class="comment">// console.log(this);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">foo</span>(<span class="string">&#x27;alex&#x27;</span>, <span class="number">18</span>); <span class="comment">//window</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sayHello</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// console.log(this);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">sayHello</span>(); <span class="comment">//window</span></span><br><span class="line"><span class="comment">//情况二:如果函数被某一个对象引用，并且调用它，this-&gt;对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">  <span class="attr">friend</span>: &#123;</span><br><span class="line">    <span class="attr">running</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">running</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">    <span class="comment">// console.log(this == obj);</span></span><br><span class="line">    <span class="comment">// console.log(this === obj);//true</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// obj.friend.running(); //friend</span></span><br><span class="line"><span class="comment">// obj[&#x27;friend&#x27;][&#x27;running&#x27;]()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//题目一</span></span><br><span class="line"><span class="keyword">var</span> fn = obj.<span class="property">running</span>;</span><br><span class="line"><span class="title function_">fn</span>(); <span class="comment">//window</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//题目二</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">bar</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;jack&#x27;</span>,</span><br><span class="line">  <span class="attr">bar</span>: bar,</span><br><span class="line">&#125;;</span><br><span class="line">obj.<span class="title function_">bar</span>(); <span class="comment">//obj</span></span><br><span class="line"><span class="title function_">bar</span>(); <span class="comment">//window</span></span><br></pre></td></tr></table></figure>

<h4 id="this-的作用"><a href="#this-的作用" class="headerlink" title="this 的作用"></a>this 的作用</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//需要有一个类，类中的方法，实例的方法中，this指向当前的调用对象 new 类()-&gt;对象 this</span></span><br><span class="line"><span class="keyword">var</span> info = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">  <span class="comment">//1.传递参数</span></span><br><span class="line">  <span class="attr">running</span>: <span class="keyword">function</span> (<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(name, <span class="string">&#x27;在疯狂的跑&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//2.不传递参数，直接写一个info.name</span></span><br><span class="line">  <span class="attr">eating</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(info.<span class="property">name</span>, <span class="string">&#x27;在疯狂的吃&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//3.对象中的函数中的this永远指向该对象</span></span><br><span class="line">  <span class="attr">jumpping</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>, <span class="string">&#x27;疯狂的跳&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="类和对象的思维方式-（如何创建一系列的对象）"><a href="#类和对象的思维方式-（如何创建一系列的对象）" class="headerlink" title="类和对象的思维方式 （如何创建一系列的对象）"></a>类和对象的思维方式 （如何创建一系列的对象）</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建一系列对象的方法一:</span></span><br><span class="line"><span class="comment">//手动书写很多对象... ❌</span></span><br><span class="line"><span class="keyword">var</span> p1 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">  <span class="attr">height</span>: <span class="number">0.5</span>,</span><br><span class="line">  <span class="attr">address</span>: <span class="string">&#x27;北京&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//创建一系列对象的方法二:工厂函数</span></span><br><span class="line"><span class="comment">//for可以创建多个对象，但是这些对象都是tom，不够灵活</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">var</span> stu = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;tom&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//工厂函数(工厂生产stu对象)-&gt;设计模式</span></span><br><span class="line"><span class="comment">// function createStudent(name, age) &#123;</span></span><br><span class="line"><span class="comment">//   //虽然我只写了一个stu = &#123;&#125;但是每次调用这个函数</span></span><br><span class="line"><span class="comment">//   //都会开辟一块新的内存空间</span></span><br><span class="line"><span class="comment">//   var stu = &#123;&#125;;</span></span><br><span class="line"><span class="comment">//   stu.name = name;</span></span><br><span class="line"><span class="comment">//   stu.age = age;</span></span><br><span class="line"><span class="comment">//   return stu;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// var stu1 = createStudent(&#x27;张三&#x27;, 18);</span></span><br><span class="line"><span class="comment">// var stu2 = createStudent(&#x27;李四&#x27;, 28);</span></span><br><span class="line"><span class="comment">// var stu3 = createStudent(&#x27;王五&#x27;, 12);</span></span><br><span class="line"><span class="comment">//方式三:构造函数创建对象</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      js默认提供给我们的，更加符合js思维方式，</span></span><br><span class="line"><span class="comment">      在函数中this一般指向某个对象</span></span><br><span class="line"><span class="comment">      new做了那四件事？</span></span><br><span class="line"><span class="comment">        如果一个函数被new操作符 调用</span></span><br><span class="line"><span class="comment">          1. 创建出一个新的空的对象</span></span><br><span class="line"><span class="comment">          2. 让this指向这个新的空对象</span></span><br><span class="line"><span class="comment">          3. 执行函数体</span></span><br><span class="line"><span class="comment">          4. 返回该对象</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">coder</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">  <span class="comment">// return &#123;&#125;;</span></span><br><span class="line">  <span class="comment">//return是原始数据类型 没用</span></span><br><span class="line">  <span class="comment">//return 是Object类型 返回值就变成你return的数据</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//new是keyword 也是operator</span></span><br><span class="line"><span class="keyword">var</span> stu1 = <span class="keyword">new</span> <span class="title function_">coder</span>(<span class="string">&#x27;张三&#x27;</span>, <span class="number">123</span>); <span class="comment">//this-&gt;张三</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stu1);</span><br><span class="line"><span class="keyword">var</span> stu2 = <span class="keyword">new</span> <span class="title function_">coder</span>(<span class="string">&#x27;李四&#x27;</span>, <span class="number">19</span>); <span class="comment">//this-&gt;李四</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stu2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//补充</span></span><br><span class="line"><span class="comment">//构造函数的名称：使用大驼峰</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Coder</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="comment">//平时创建普通对象</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//普通函数:使用小驼峰</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sayHello</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      eat   gaga</span></span><br><span class="line"><span class="comment">      大驼峰:EatGaga</span></span><br><span class="line"><span class="comment">      小驼峰:eatGaga</span></span><br><span class="line"><span class="comment">      */</span></span><br></pre></td></tr></table></figure>

<p>&#x2F;&#x2F;TODO 类和对象什么关系？</p>
<p>&#x2F;&#x2F;作业<br>&#x2F;&#x2F;1. 画 思考如下现象 的堆栈内存图<br>&#x2F;&#x2F;2. <code>作用域练习.html</code>的作用域图</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记06-数组</title>
    <url>/2022/04/29/b11%20javascript%E5%85%A5%E9%97%A806%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h2 id="数组-Array"><a href="#数组-Array" class="headerlink" title="数组 Array "></a>数组 Array <span id="more"></span></h2><h3 id="1-认识数组"><a href="#1-认识数组" class="headerlink" title="1.认识数组"></a>1.认识数组</h3><ul>
<li>是 js 的一个复杂数据类型，叫 Array</li>
<li>有序的存放多个数据的一种数据结构</li>
</ul>
<h3 id="2-创建数组"><a href="#2-创建数组" class="headerlink" title="2.创建数组"></a>2.创建数组</h3><h4 id="2-1-字面量创建"><a href="#2-1-字面量创建" class="headerlink" title="2.1 字面量创建"></a>2.1 字面量创建</h4><p>空数组:var arr &#x3D;[]<br>带有数据的:var arr &#x3D; [数据 1,数据 2,…]</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="keyword">var</span> names = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;lyan&#x27;</span>, <span class="string">&#x27;tom&#x27;</span>, <span class="string">&#x27;kern&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> product1 = &#123; <span class="attr">name</span>: <span class="string">&#x27;苹果&#x27;</span>, <span class="attr">price</span>: <span class="number">10</span> &#125;;</span><br><span class="line"><span class="keyword">var</span> products = [</span><br><span class="line">  &#123; <span class="attr">name</span>: <span class="string">&#x27;西瓜&#x27;</span>, <span class="attr">price</span>: <span class="number">20</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>: <span class="string">&#x27;键盘&#x27;</span>, <span class="attr">price</span>: <span class="number">300</span> &#125;,</span><br><span class="line">  product1, <span class="comment">//开发不推荐这样</span></span><br><span class="line">  <span class="comment">//studentName student-name StudentName</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure>

<h4 id="2-2-构造函数-Array-创建"><a href="#2-2-构造函数-Array-创建" class="headerlink" title="2.2 构造函数(Array)创建"></a>2.2 构造函数(Array)创建</h4><p>语法 var arr &#x3D; new Array(参数)<br>参数个数为 1:数组的长度，empty 填充<br>参数个数&gt;1:数组的数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 = <span class="keyword">new</span> <span class="title class_">Array</span>(); <span class="comment">// []</span></span><br><span class="line"><span class="keyword">var</span> arr2 = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;cba&#x27;</span>, <span class="string">&#x27;nba&#x27;</span>); <span class="comment">//[&#x27;abc&#x27;,&#x27;cba&#x27;,&#x27;nba&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//传入一个数字,它会默认当成我们想要创建一个对应长度的数组</span></span><br><span class="line"><span class="keyword">var</span> arr3 = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">5</span>); <span class="comment">//[empty*5]</span></span><br></pre></td></tr></table></figure>

<h4 id="2-3-索引的问题"><a href="#2-3-索引的问题" class="headerlink" title="2.3 索引的问题"></a>2.3 索引的问题</h4><p>数组元素索引(index)从 0 开始<br>js 不支持负索引</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> names = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;lyan&#x27;</span>, <span class="string">&#x27;tom&#x27;</span>, <span class="string">&#x27;kern&#x27;</span>];</span><br><span class="line"><span class="comment">//想访问最后一个元素 js不能写names[-1]</span></span><br><span class="line">names[names.<span class="property">length</span> - <span class="number">1</span>];</span><br></pre></td></tr></table></figure>

<h3 id="3-数组的基本操作"><a href="#3-数组的基本操作" class="headerlink" title="3 数组的基本操作"></a>3 数组的基本操作</h3><h4 id="3-1-访问数组中的元素"><a href="#3-1-访问数组中的元素" class="headerlink" title="3.1 访问数组中的元素"></a>3.1 访问数组中的元素</h4><ul>
<li>通过中括号[]来访问</li>
<li>arr.at(i)<br>i&gt;&#x3D;0 的时候和[]没有区别<br>i&lt;0,它是从数组的尾部向前数</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> names = [<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;cba&#x27;</span>, <span class="string">&#x27;nba&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(names[<span class="number">1</span>]); <span class="comment">//&#x27;cba&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(names.<span class="title function_">at</span>(<span class="number">1</span>)); <span class="comment">//&#x27;cba&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(names[-<span class="number">1</span>]); <span class="comment">//undefined</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(names.<span class="title function_">at</span>(-<span class="number">1</span>)); <span class="comment">//&#x27;nba&#x27;</span></span><br><span class="line"><span class="comment">//实际开发很少用这种负数，阅读性太差</span></span><br></pre></td></tr></table></figure>

<h4 id="3-2-修改数组中的元素"><a href="#3-2-修改数组中的元素" class="headerlink" title="3.2 修改数组中的元素"></a>3.2 修改数组中的元素</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> names = [<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;cba&#x27;</span>, <span class="string">&#x27;nba&#x27;</span>];</span><br><span class="line">names[<span class="number">0</span>] = <span class="string">&#x27;jack&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h4 id="3-3-增加数组中的元素-x2F-删除数组中的元素-了解"><a href="#3-3-增加数组中的元素-x2F-删除数组中的元素-了解" class="headerlink" title="3.3 增加数组中的元素&#x2F;删除数组中的元素(了解)"></a>3.3 增加数组中的元素&#x2F;删除数组中的元素(了解)</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> names = [<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;cba&#x27;</span>, <span class="string">&#x27;nba&#x27;</span>];</span><br><span class="line"><span class="comment">//             0       1     2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;改动前&#x27;</span>, names);</span><br><span class="line"><span class="comment">// names[3] = &#x27;jack&#x27;;</span></span><br><span class="line"><span class="keyword">delete</span> names[<span class="number">0</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;改动后&#x27;</span>, names);</span><br></pre></td></tr></table></figure>

<h3 id="4-数组的添加、删除方法-一"><a href="#4-数组的添加、删除方法-一" class="headerlink" title="4.数组的添加、删除方法(一)"></a>4.数组的添加、删除方法(一)</h3><h4 id="push-pop-shift-unshift"><a href="#push-pop-shift-unshift" class="headerlink" title="push-pop shift-unshift"></a>push-pop shift-unshift</h4><ul>
<li>在数组的尾端添加或者删除元素<br>push 添加<br>pop 删除</li>
<li>在数组的首端添加或删除元素<br>shift 删除<br>unshift 添加</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> names = [<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;cba&#x27;</span>, <span class="string">&#x27;nba&#x27;</span>, <span class="string">&#x27;mba&#x27;</span>, <span class="string">&#x27;abcd&#x27;</span>];</span><br><span class="line"><span class="comment">//1.在尾部添加和删除元素</span></span><br><span class="line"><span class="comment">// names.push(&#x27;jack&#x27;, &#x27;alex&#x27;, &#x27;tom&#x27;);</span></span><br><span class="line"><span class="comment">//没有参数，而且一次只能删除一个</span></span><br><span class="line"><span class="comment">//如果需要拿到被删除的可以拿到，不需要的话 不管他</span></span><br><span class="line"><span class="comment">// var a = names.pop();</span></span><br><span class="line"><span class="comment">// console.log(a);</span></span><br><span class="line"><span class="comment">//2.头部</span></span><br><span class="line"><span class="comment">//一次添加多个</span></span><br><span class="line">names.<span class="title function_">unshift</span>(<span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;alex&#x27;</span>);</span><br><span class="line"><span class="comment">//一次只能删除一个</span></span><br><span class="line">names.<span class="title function_">shift</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(names);</span><br></pre></td></tr></table></figure>

<h3 id="5-数组的添加、删除方法-二"><a href="#5-数组的添加、删除方法-二" class="headerlink" title="5.数组的添加、删除方法(二)"></a>5.数组的添加、删除方法(二)</h3><p>splice 可以添加，删除，替换元素<br>语法<br><code>array.splice(start[,deleteCount[,item1[,item2[,...]]]])</code></p>
<blockquote>
<p>中括号不是数组的意思，可选的意思</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// var names = [&#x27;abc&#x27;, &#x27;cba&#x27;, &#x27;nba&#x27;, &#x27;15-5&#x27;];</span></span><br><span class="line"><span class="comment">//参数一:start，从什么位置开始操作元素</span></span><br><span class="line"><span class="comment">//参数二:deleteCount，删除的元素个数</span></span><br><span class="line"><span class="comment">// //1.删除</span></span><br><span class="line"><span class="comment">// names.splice(1, 2);</span></span><br><span class="line"><span class="comment">// //splice方法会直接改变原数组</span></span><br><span class="line"><span class="comment">// console.log(names);</span></span><br><span class="line"><span class="comment">//2.新增</span></span><br><span class="line"><span class="comment">//deleteCount:0,后面可以再跟上其他你要添加的元素</span></span><br><span class="line"><span class="comment">// var names = [&#x27;abc&#x27;, &#x27;cba&#x27;, &#x27;nba&#x27;, &#x27;15-5&#x27;];</span></span><br><span class="line"><span class="comment">// names.splice(1, 0, &#x27;麦当劳&#x27;, &#x27;KFC&#x27;, &#x27;汉堡王&#x27;);</span></span><br><span class="line"><span class="comment">// console.log(names);</span></span><br><span class="line"><span class="comment">//3.替换元素</span></span><br><span class="line"><span class="keyword">var</span> names = [<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;cba&#x27;</span>, <span class="string">&#x27;nba&#x27;</span>, <span class="string">&#x27;15-5&#x27;</span>];</span><br><span class="line">names.<span class="title function_">splice</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;jack&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(names);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>一般情况下头部和尾部的操作我们还是用那两对，只是在处理中间的情况下更多的用到 splice</p>
</blockquote>
<h3 id="6-length-属性"><a href="#6-length-属性" class="headerlink" title="6.length 属性"></a>6.length 属性</h3><ul>
<li>length 属性用于获取数组的长度<br>当我们修改数组的时候，他的长度会自动更新</li>
<li>length 属性另一个特点是可写的<br>如果我们修改为一个大于原来的值，会用 empty 填充<br>如果小于，数组被截断</li>
<li>清空数组最快办法:<code>arr.length =0</code></li>
</ul>
<h3 id="7-数组的遍历"><a href="#7-数组的遍历" class="headerlink" title="7 数组的遍历"></a>7 数组的遍历</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> dogs = [<span class="string">&#x27;二哈&#x27;</span>, <span class="string">&#x27;边牧&#x27;</span>, <span class="string">&#x27;柯基&#x27;</span>];</span><br><span class="line"><span class="comment">//1. 普通的for遍历</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; dogs.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  <span class="comment">//i索引</span></span><br><span class="line">  <span class="comment">//dogs[i]元素</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(dogs[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2. for...in遍历</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> index <span class="keyword">in</span> dogs) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(dogs[index]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3. for...of遍历</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">of</span> dogs) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(item);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="8-数组方法"><a href="#8-数组方法" class="headerlink" title="8 数组方法"></a>8 数组方法</h3><h4 id="8-1-slice"><a href="#8-1-slice" class="headerlink" title="8.1 slice"></a>8.1 slice</h4><ul>
<li>arr.slice 用于对数组进行截取(和字符串的类似)<br><code>arr.slice(begin[,end])</code><br>包含 begin 元素但是不包含 end</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> dogs = [<span class="string">&#x27;二哈&#x27;</span>, <span class="string">&#x27;边牧&#x27;</span>, <span class="string">&#x27;柯基&#x27;</span>, <span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;tom&#x27;</span>];</span><br><span class="line"><span class="comment">//slice方法，不回修改原数组</span></span><br><span class="line"><span class="comment">//splice会修改原有的数组</span></span><br><span class="line"><span class="comment">//start从什么地方开始</span></span><br><span class="line"><span class="comment">//end结束为止</span></span><br><span class="line"><span class="keyword">var</span> res = dogs.<span class="title function_">slice</span>(<span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(dogs);</span><br><span class="line"><span class="comment">//不传任何参数，把原数组复制一份给我们</span></span><br><span class="line"><span class="keyword">var</span> res1 = dogs.<span class="title function_">slice</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res1);</span><br><span class="line"><span class="comment">//填负数</span></span><br><span class="line"><span class="keyword">var</span> res2 = dogs.<span class="title function_">slice</span>(<span class="number">1</span>, -<span class="number">2</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res2); <span class="comment">// [&#x27;边牧&#x27;, &#x27;柯基&#x27;, &#x27;alex&#x27;]</span></span><br><span class="line"><span class="comment">//故意找茬</span></span><br><span class="line"><span class="keyword">var</span> res3 = dogs.<span class="title function_">slice</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res3); <span class="comment">// []</span></span><br></pre></td></tr></table></figure>

<h4 id="8-2-concat"><a href="#8-2-concat" class="headerlink" title="8.2 concat"></a>8.2 concat</h4><p>创建一个新的数组，其中包含其他数组&#x2F;其他项的值<br>进行数组的拼接<br><code>arr.concat(value1[,value2[...[,valueN]]])</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;world&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">concat</span>(<span class="string">&#x27;新来的&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> res1 = arr.<span class="title function_">concat</span>(<span class="string">&#x27;又一个新来的&#x27;</span>, [<span class="number">100</span>, <span class="number">200</span>]);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res, res1);</span><br><span class="line"><span class="keyword">var</span> name1 = [<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;cba&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> name2 = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;tom&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name1.<span class="title function_">concat</span>(name2));</span><br></pre></td></tr></table></figure>

<h4 id="8-3-join"><a href="#8-3-join" class="headerlink" title="8.3 join"></a>8.3 join</h4><p>把数组的所有元素连接成一个字符串并返回这个字符串<br><code>arr.join([连接符])</code></p>
<p>功能相反的一个字符串方法<code>str.split([连接符])</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;原始数组&#x27;</span>, arr);</span><br><span class="line"><span class="comment">//不传任何连接符，默认使用逗号</span></span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">join</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line"><span class="keyword">var</span> res1 = arr.<span class="title function_">join</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res1);</span><br><span class="line"><span class="keyword">var</span> res2 = arr.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res2); <span class="comment">//10203040</span></span><br><span class="line"><span class="keyword">var</span> res3 = arr.<span class="title function_">join</span>(<span class="string">&#x27;^.^&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res3);</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;get-element-by-id&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)); <span class="comment">//[&#x27;get&#x27;, &#x27;element&#x27;, &#x27;by&#x27;, &#x27;id&#x27;]</span></span><br></pre></td></tr></table></figure>

<h3 id="9-数组方法-查找元素"><a href="#9-数组方法-查找元素" class="headerlink" title="9 数组方法-查找元素"></a>9 数组方法-查找元素</h3><h4 id="9-1-indexOf"><a href="#9-1-indexOf" class="headerlink" title="9.1 indexOf"></a>9.1 indexOf</h4><p><code>arr.indexOf(searchElment[,fromIndex])</code><br>从 fromIndex 开始查找，如果找到返回索引，没有找到返回-1，也有对应的 lastIndexOf 方法</p>
<h4 id="9-2-includes"><a href="#9-2-includes" class="headerlink" title="9.2 includes"></a>9.2 includes</h4><p>从 fromIndex 开始搜索 searchElment，如果找到了返回 true，找不到的话返回 false<br><code>arr.includes(searchElment[,fromIndex])</code></p>
<h4 id="9-3-find-和-findIndex"><a href="#9-3-find-和-findIndex" class="headerlink" title="9.3 find 和 findIndex"></a>9.3 find 和 findIndex</h4><p>都是 es6 新增的</p>
<p>9.3-1 findIndex</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> names = [<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;cba&#x27;</span>, <span class="string">&#x27;nnd&#x27;</span>];</span><br><span class="line"><span class="comment">//item是元素 index索引 arr当前数组</span></span><br><span class="line"><span class="keyword">var</span> res = names.<span class="title function_">findIndex</span>(<span class="keyword">function</span> (<span class="params">item, index, arr</span>) &#123;</span><br><span class="line">  <span class="comment">// console.log(item, index, arr);</span></span><br><span class="line">  <span class="keyword">return</span> item === <span class="string">&#x27;nnd&#x27;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">//2 &#x27;nnd&#x27;的索引</span></span><br></pre></td></tr></table></figure>

<p>9.3-2 find<br><code>arr.find(function(item,index,arr)&#123;&#125;)</code></p>
<ul>
<li>返回值:你找到的数据</li>
<li>查找条件以 return 的形式来书写</li>
<li>往往用在复杂数据类型中查找</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> students = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">100</span>, <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">101</span>, <span class="attr">name</span>: <span class="string">&#x27;jack&#x27;</span>, <span class="attr">age</span>: <span class="number">38</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">102</span>, <span class="attr">name</span>: <span class="string">&#x27;tom&#x27;</span>, <span class="attr">age</span>: <span class="number">8</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">103</span>, <span class="attr">name</span>: <span class="string">&#x27;kern&#x27;</span>, <span class="attr">age</span>: <span class="number">88</span> &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="comment">//查找id为101的学生的所有信息</span></span><br><span class="line"><span class="keyword">var</span> stu = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//自己用for循环配合if寻找</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; students.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  <span class="comment">// students[i]</span></span><br><span class="line">  <span class="keyword">if</span> (students[i].<span class="property">id</span> === <span class="number">101</span>) &#123;</span><br><span class="line">    stu = students[i];</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stu);</span><br><span class="line"><span class="comment">// if (stu) &#123;</span></span><br><span class="line"><span class="comment">//   console.log(&#x27;展示stu&#x27;);</span></span><br><span class="line"><span class="comment">// &#125; else &#123;</span></span><br><span class="line"><span class="comment">//   console.log(&#x27;查无此人&#x27;);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="keyword">var</span> stu2 = students.<span class="title function_">find</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (item.<span class="property">id</span> === <span class="number">101</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stu2);</span><br><span class="line"><span class="comment">// //简单的</span></span><br><span class="line"><span class="comment">// var arr = [100, 200, 301, 400, 500];</span></span><br><span class="line"><span class="comment">// //我要查找arr中的奇数</span></span><br><span class="line"><span class="comment">// var res = arr.find(function (item) &#123;</span></span><br><span class="line"><span class="comment">//   //以return的形式书写条件</span></span><br><span class="line"><span class="comment">//   return item % 2 === 1;</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"><span class="comment">// console.log(res);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//往往会用在复杂类型中查找</span></span><br><span class="line"><span class="keyword">var</span> objArr = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;迪丽热巴&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;刘亦菲&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">19</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;alex&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">29</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="comment">//要求接受用户输入的id，根据id查找🐟的所有信息</span></span><br><span class="line"><span class="keyword">var</span> inputId = <span class="title class_">Number</span>(<span class="title function_">prompt</span>(<span class="string">&#x27;请输入你要查询的🐟的id&#x27;</span>));</span><br><span class="line"><span class="keyword">var</span> fish = objArr.<span class="title function_">find</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">  <span class="comment">//条件</span></span><br><span class="line">  <span class="keyword">return</span> item.<span class="property">id</span> === inputId;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="title function_">alert</span>(fish); <span class="comment">//他只能识别字符串，当你想把一个对象强行识别为字符串 就会遇到[object Object]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你的🐟的完整信息:&#x27;</span>, fish);</span><br></pre></td></tr></table></figure>

<h3 id="10-数组的排序-sort-x2F-reverse"><a href="#10-数组的排序-sort-x2F-reverse" class="headerlink" title="10 数组的排序- sort&#x2F;reverse"></a>10 数组的排序- sort&#x2F;reverse</h3><h4 id="10-1-sort"><a href="#10-1-sort" class="headerlink" title="10.1 sort"></a>10.1 sort</h4><p>按照你制定的规则来排序<br>参数:两个</p>
<ul>
<li>arr.sort() 把数据一位一位的看待</li>
<li>arr.sort(a-b) 从小到大排</li>
<li>arr.sort(b-a) 从大到小</li>
</ul>
<p>返回值:排序后的数组</p>
<p><code>arr.sort[compareFunction]</code><br>如果 compareFunction（a，b）&lt;0 那么 a 会排到 b 的前面<br>如果 compareFunction（a，b）&#x3D;0 那么 a b 的相对位置保持不变</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">100</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;原始的数组&#x27;</span>, arr);</span><br><span class="line"><span class="comment">//不写参数 把每个数据 一位一位的看待</span></span><br><span class="line"><span class="comment">// var res = arr.sort();</span></span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">sort</span>(<span class="keyword">function</span> (<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">a=3     b=1   -2&lt;0    3,1</span></span><br><span class="line"><span class="comment">a = 100 b=3     &lt;0  100,3,1</span></span><br><span class="line"><span class="comment">a=10   b=100    &gt;0  100,10,3,1</span></span><br><span class="line"><span class="comment">a=5  b=10       &gt;0  100,10,5,3,1</span></span><br><span class="line"><span class="comment">a=4  b=5        &gt;0  100,10,5,4,3,1</span></span><br><span class="line"><span class="comment">a=2  b=4        &gt;0  100,10,5,4,2,3,1</span></span><br><span class="line"><span class="comment">a=3  b=2        &lt;0  100,10,5,4,3,2,1</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//a是下一位数，b是上一位数</span></span><br><span class="line">  <span class="comment">// console.group();</span></span><br><span class="line">  <span class="comment">// console.log(&#x27;a&#x27;, a);</span></span><br><span class="line">  <span class="comment">// console.log(&#x27;b&#x27;, b);</span></span><br><span class="line">  <span class="comment">// console.groupEnd();</span></span><br><span class="line">  <span class="comment">//从小到大排</span></span><br><span class="line">  <span class="comment">// return a - b;</span></span><br><span class="line">  <span class="keyword">return</span> b - a; <span class="comment">// [100, 10, 5, 4, 3, 2, 1]</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;调用方法之后的数组&#x27;</span>, arr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//复杂类型排序</span></span><br><span class="line"><span class="keyword">var</span> good = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">100</span>, <span class="attr">name</span>: <span class="string">&#x27;麦当劳&#x27;</span>, <span class="attr">price</span>: <span class="number">25</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">101</span>, <span class="attr">name</span>: <span class="string">&#x27;KFC&#x27;</span>, <span class="attr">price</span>: <span class="number">99</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">102</span>, <span class="attr">name</span>: <span class="string">&#x27;华莱士&#x27;</span>, <span class="attr">price</span>: <span class="number">10</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">103</span>, <span class="attr">name</span>: <span class="string">&#x27;奈雪的茶&#x27;</span>, <span class="attr">price</span>: <span class="number">28</span> &#125;,</span><br><span class="line">];</span><br><span class="line">good.<span class="title function_">sort</span>(<span class="keyword">function</span> (<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="comment">//a.price  b.price</span></span><br><span class="line">  <span class="keyword">return</span> a.<span class="property">price</span> - b.<span class="property">price</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h4 id="10-2-reverse"><a href="#10-2-reverse" class="headerlink" title="10.2 reverse"></a>10.2 reverse</h4><p>颠倒数组</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">nums.<span class="title function_">reverse</span>(); <span class="comment">//[4,3,2,1]</span></span><br></pre></td></tr></table></figure>

<p>返回值：颠倒之后的数组</p>
<h3 id="11-数组的其他高阶方法"><a href="#11-数组的其他高阶方法" class="headerlink" title="11 数组的其他高阶方法"></a>11 数组的其他高阶方法</h3><h4 id="11-1-forEach"><a href="#11-1-forEach" class="headerlink" title="11.1 forEach"></a>11.1 forEach</h4><p>遍历数组，并且让数组中的每一个元素都执行一次对应的方法<br>语法:arr.forEach(function(item,index,arr){})</p>
<ul>
<li>item 数组内的每一项</li>
<li>index 每一项的索引</li>
<li>arr 被遍历的数组</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">35</span>, <span class="number">66</span>, <span class="number">10</span>, <span class="number">6</span>];</span><br><span class="line"><span class="comment">//讲过三种数组的遍历 ，新增的一种遍历方式</span></span><br><span class="line"><span class="comment">//a以后都没有必要去写，只是为了记笔记方便</span></span><br><span class="line"><span class="comment">//a函数我们定义 但是不由我们调用 -- 回调函数</span></span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">forEach</span>(<span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">item, index, arr</span>) &#123;</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">        forEach的原理 </span></span><br><span class="line"><span class="comment">          根据数组成员的数量来调用a函数</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(item, index, arr);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line"><span class="keyword">var</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">arr1.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">  sum += item;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum); <span class="comment">//10</span></span><br></pre></td></tr></table></figure>

<h4 id="11-2-every"><a href="#11-2-every" class="headerlink" title="11.2 every"></a>11.2 every</h4><p>自带遍历，对每个元素进行条件判断，如果每个元素都成立返回 true，只要有一项不成立返回 false<br>参数:function(item,index){<br>item 每个元素<br>index 元素的索引<br>}</p>
<h4 id="11-3-some"><a href="#11-3-some" class="headerlink" title="11.3 some"></a>11.3 some</h4><p>自带遍历，对每个元素进行条件判断，只要有一个成立返回 true，都不成立才返回 false<br>参数:function(item,index){<br>item 每个元素<br>index 元素的索引<br>}</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">every</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> item &gt; <span class="number">0</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> res1 = arr.<span class="title function_">some</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> item &gt; <span class="number">4</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res1);</span><br></pre></td></tr></table></figure>

<h4 id="11-4-filter"><a href="#11-4-filter" class="headerlink" title="11.4 filter"></a>11.4 filter</h4><p>语法:arr.filter(function(item,index,arr){})<br>item 每个元素<br>index 元素对应的下标<br>arr 当前过滤的数组<br>过滤条件也是以 return 的形式书写<br>返回值:过滤后的新数组</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">111</span>, <span class="number">222</span>, <span class="number">333</span>, <span class="number">444</span>, <span class="number">555</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">filter</span>(<span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">item</span>) &#123;</span><br><span class="line">  <span class="comment">//以return形式书写过滤的条件</span></span><br><span class="line">  <span class="keyword">return</span> item &gt; <span class="number">200</span>;</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">        filter的原理</span></span><br><span class="line"><span class="comment">        1.准备一个的空数组 []</span></span><br><span class="line"><span class="comment">        2.开始根据数组内的成员调用对应次数的a函数</span></span><br><span class="line"><span class="comment">          2-1 a(111) 返回false 111不加到第一步的数组中 []</span></span><br><span class="line"><span class="comment">          2-2 a(222) ....</span></span><br><span class="line"><span class="comment">          </span></span><br><span class="line"><span class="comment">          五次都走完之后 [222,333,444,555]</span></span><br><span class="line"><span class="comment">        3.返回[222,333,444,555]给res</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">//得到的是条件成立的每一项</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> nums = [<span class="number">11</span>, <span class="number">20</span>, <span class="number">55</span>, <span class="number">100</span>, <span class="number">88</span>, <span class="number">32</span>];</span><br><span class="line"><span class="comment">//只要奇数</span></span><br><span class="line"><span class="comment">//for...of</span></span><br><span class="line"><span class="keyword">var</span> newNums = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">of</span> nums) &#123;</span><br><span class="line">  <span class="keyword">if</span> (item % <span class="number">2</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">    newNums.<span class="title function_">push</span>(item);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//filter实现</span></span><br><span class="line"><span class="keyword">var</span> res2 = nums.<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> item % <span class="number">2</span> !== <span class="number">0</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 1 true    0 false</span></span><br><span class="line"><span class="comment">// var res3 = nums.filter(item=&gt;item%2)</span></span><br></pre></td></tr></table></figure>

<h4 id="11-5-map"><a href="#11-5-map" class="headerlink" title="11.5 map"></a>11.5 map</h4><ul>
<li>语法:arr.map(function(item,index,arr){})</li>
<li>作用:映射数组</li>
<li>返回值:<ul>
<li>是一个新数组，并且长度和原数组一致</li>
<li>新数组里面的每一个元素都是根据原数组的每个元素映射出来的</li>
<li>映射的条件以 return 形式书写</li>
</ul>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> good = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">100</span>, <span class="attr">name</span>: <span class="string">&#x27;麦当劳&#x27;</span>, <span class="attr">price</span>: <span class="number">25</span>, <span class="attr">sold</span>: <span class="number">10</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">101</span>, <span class="attr">name</span>: <span class="string">&#x27;KFC&#x27;</span>, <span class="attr">price</span>: <span class="number">99</span>, <span class="attr">sold</span>: <span class="number">2</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">102</span>, <span class="attr">name</span>: <span class="string">&#x27;华莱士&#x27;</span>, <span class="attr">price</span>: <span class="number">10</span>, <span class="attr">sold</span>: <span class="number">50</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">103</span>, <span class="attr">name</span>: <span class="string">&#x27;奈雪的茶&#x27;</span>, <span class="attr">price</span>: <span class="number">28</span>, <span class="attr">sold</span>: <span class="number">5</span> &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="comment">//  外卖平台 要抽成100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>];</span><br><span class="line"><span class="comment">//开始映射</span></span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">map</span>(<span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">item</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> item * <span class="number">0.1</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">//[10, 20, 30, 40, 50]</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">      原理</span></span><br><span class="line"><span class="comment">      1.准备一个新数组[]</span></span><br><span class="line"><span class="comment">      2.根据原始的数据进行遍历</span></span><br><span class="line"><span class="comment">        =&gt;第一次调用a(100,0,arr) 返回值10 把10放到新数组里面 [10]</span></span><br><span class="line"><span class="comment">        =&gt;第二次调用a(200,1,arr)      20   20      [10,20]</span></span><br><span class="line"><span class="comment">        ...</span></span><br><span class="line"><span class="comment">        [10,20,30,40,50]</span></span><br><span class="line"><span class="comment">      3.把最终的数组作为map函数的返回值给到res</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="keyword">var</span> goodNewPrice = good.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> item.<span class="property">price</span> + <span class="number">100</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(goodNewPrice);</span><br></pre></td></tr></table></figure>

<h4 id="11-6-reduce"><a href="#11-6-reduce" class="headerlink" title="11.6 reduce"></a>11.6 reduce</h4><ul>
<li>语法:arr.reduce(function(prev,item,index,arr){},intial)<ul>
<li>prev:初始值或者每一次叠加后的结果</li>
<li>item</li>
<li>index</li>
<li>arr</li>
<li>intial:默认是 0，表示从什么位置开始叠加</li>
</ul>
</li>
<li>返回值:累加后的结果</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> good = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">100</span>, <span class="attr">name</span>: <span class="string">&#x27;麦当劳&#x27;</span>, <span class="attr">price</span>: <span class="number">25</span>, <span class="attr">sold</span>: <span class="number">10</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">101</span>, <span class="attr">name</span>: <span class="string">&#x27;KFC&#x27;</span>, <span class="attr">price</span>: <span class="number">99</span>, <span class="attr">sold</span>: <span class="number">2</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">102</span>, <span class="attr">name</span>: <span class="string">&#x27;华莱士&#x27;</span>, <span class="attr">price</span>: <span class="number">10</span>, <span class="attr">sold</span>: <span class="number">50</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">103</span>, <span class="attr">name</span>: <span class="string">&#x27;奈雪的茶&#x27;</span>, <span class="attr">price</span>: <span class="number">28</span>, <span class="attr">sold</span>: <span class="number">5</span> &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="keyword">var</span> res1 = good.<span class="title function_">reduce</span>(<span class="keyword">function</span> (<span class="params">prev, item</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> prev + item.<span class="property">price</span> * item.<span class="property">sold</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>];</span><br><span class="line"><span class="keyword">var</span> res = arr.<span class="title function_">reduce</span>(<span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">prev, item</span>) &#123;</span><br><span class="line">  <span class="comment">//以return的形式书写每次叠加的操作</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(prev + item);</span><br><span class="line">  <span class="keyword">return</span> prev + item;</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">        reduce的原理</span></span><br><span class="line"><span class="comment">        1.准备一个初始值，按照你传递的第二个参数来定</span></span><br><span class="line"><span class="comment">        2.根据arr来调用a函数</span></span><br><span class="line"><span class="comment">          第一次 a(0,100,0,arr) return 0+100 把这个返回值赋给intial 100</span></span><br><span class="line"><span class="comment">          第二次 a(100,200,1,arr) return 100+200 把这个返回值赋给intial 300</span></span><br><span class="line"><span class="comment">          第三次 a(300,300,2,arr) return 300+300 把这个返回值赋给intial 600</span></span><br><span class="line"><span class="comment">          第四次 a(600,400,3,arr) return 600+400 把这个返回值赋给intial 1000</span></span><br><span class="line"><span class="comment">          第五次 a(1000,500,4,arr) return 1000+500 把这个返回值赋给intial 1500</span></span><br><span class="line"><span class="comment">        3.把intial的结果当作reduce的返回值 给到res</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line"><span class="comment">//面试题 统计数组中每个元素出现的次数</span></span><br><span class="line"><span class="keyword">var</span> arr1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;d&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> obj = arr1.<span class="title function_">reduce</span>(<span class="keyword">function</span> <span class="title function_">haha</span>(<span class="params">prev, item</span>) &#123;</span><br><span class="line">  <span class="comment">// if (prev[item]) &#123;</span></span><br><span class="line">  <span class="comment">//   prev[item] += 1;</span></span><br><span class="line">  <span class="comment">//   return prev;</span></span><br><span class="line">  <span class="comment">// &#125; else &#123;</span></span><br><span class="line">  <span class="comment">//   prev[item] = 1;</span></span><br><span class="line">  <span class="comment">//   return prev;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  prev[item] = prev[item] + <span class="number">1</span> || <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> prev;</span><br><span class="line">&#125;, &#123;&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      1. prev = &#123;&#125; 调用haha(&#123;&#125;,&quot;a&quot;) return &#123;a:1&#125; 并且赋给prev</span></span><br><span class="line"><span class="comment">      2. prev= &#123;a:1&#125; 调用haha(&#123;a:1&#125;,&quot;a&quot;) return &#123;a:2&#125; 并赋值给prev</span></span><br><span class="line"><span class="comment">      ...</span></span><br><span class="line"><span class="comment">      最后一次</span></span><br><span class="line"><span class="comment">      prev=&#123;</span></span><br><span class="line"><span class="comment">        a:2,</span></span><br><span class="line"><span class="comment">        b:2,</span></span><br><span class="line"><span class="comment">        c:3</span></span><br><span class="line"><span class="comment">        d:5</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">      把最终的prev当作reduce的返回值给到obj</span></span><br><span class="line"><span class="comment">      */</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//综合练习</span></span><br><span class="line"><span class="keyword">var</span> nums = [<span class="number">11</span>, <span class="number">20</span>, <span class="number">55</span>, <span class="number">100</span>, <span class="number">88</span>, <span class="number">32</span>]; <span class="comment">//19168</span></span><br><span class="line"><span class="comment">//过滤得到所有的偶数，映射所有偶数的平方 最后计算他们的和</span></span><br><span class="line"><span class="keyword">var</span> total = nums</span><br><span class="line">  .<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> item % <span class="number">2</span> === <span class="number">0</span>;</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> item * item;</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">reduce</span>(<span class="keyword">function</span> (<span class="params">prev, item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> prev + item;</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// var toal = nums</span></span><br><span class="line"><span class="comment">// .filter(item=&gt;item%2===0)</span></span><br><span class="line"><span class="comment">// .map(item=&gt;item*item)</span></span><br><span class="line"><span class="comment">// .reduce((prev,item)=&gt;prev+item,0)</span></span><br></pre></td></tr></table></figure>

<h3 id="12-数组塌陷"><a href="#12-数组塌陷" class="headerlink" title="12 数组塌陷"></a>12 数组塌陷</h3><h4 id="12-1-概念"><a href="#12-1-概念" class="headerlink" title="12.1 概念"></a>12.1 概念</h4><ul>
<li>当你在数组中删除内容的时候，就会产生塌陷</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//需求:一个数组，每次删除一个元素，把所有的内容删除完毕</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;原来的数组&#x27;</span>, arr);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  arr.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;删除过后的数组&#x27;</span>, arr);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      [1,2,3,4]</span></span><br><span class="line"><span class="comment">      当你把1删除以后</span></span><br><span class="line"><span class="comment">      原来的2会往前移动，原来2索引是1 现在索引0</span></span><br><span class="line"><span class="comment">      [1,2,3,4] len=4</span></span><br><span class="line"><span class="comment">      i=0 </span></span><br><span class="line"><span class="comment">      arr.splice(0,1)</span></span><br><span class="line"><span class="comment">      [2,3,4] len=3</span></span><br><span class="line"><span class="comment">      i=1</span></span><br><span class="line"><span class="comment">      arr.splice(1,1)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      [2,4] len=2</span></span><br><span class="line"><span class="comment">      i=2 退出循环</span></span><br><span class="line"><span class="comment">      */</span></span><br></pre></td></tr></table></figure>

<h4 id="12-2-解决办法"><a href="#12-2-解决办法" class="headerlink" title="12.2 解决办法"></a>12.2 解决办法</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方法一：倒着循环</span></span><br><span class="line"><span class="comment">// var arr = [1, 2, 3, 4];</span></span><br><span class="line"><span class="comment">// console.log(&#x27;原来的数组&#x27;, arr);</span></span><br><span class="line"><span class="comment">// for (var i = arr.length - 1; i &gt;= 0; i--) &#123;</span></span><br><span class="line"><span class="comment">//   arr.splice(i, 1);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// console.log(&#x27;删除过后的数组&#x27;, arr);</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      代码执行</span></span><br><span class="line"><span class="comment">      [1,2,3,4] len=4</span></span><br><span class="line"><span class="comment">      i=3 </span></span><br><span class="line"><span class="comment">      arr.splice(3,1)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      [1,2,3] len=3</span></span><br><span class="line"><span class="comment">      i=2</span></span><br><span class="line"><span class="comment">      arr.splice(2,1)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      [1,2] len=2</span></span><br><span class="line"><span class="comment">      i=1</span></span><br><span class="line"><span class="comment">      arr.splice(1,1)</span></span><br><span class="line"><span class="comment">      </span></span><br><span class="line"><span class="comment">      [1] len=1</span></span><br><span class="line"><span class="comment">      i=0</span></span><br><span class="line"><span class="comment">      arr.splice(0,1)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      [] len=0</span></span><br><span class="line"><span class="comment">      i=-1</span></span><br><span class="line"><span class="comment">      退出循环</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="comment">//方法二：每次让i跟着变化</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;原来的数组&#x27;</span>, arr);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  <span class="comment">//删除一个</span></span><br><span class="line">  arr.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">  i--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;删除过后的数组&#x27;</span>, arr);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">        [1,2,3,4] len=4</span></span><br><span class="line"><span class="comment">        i=0 </span></span><br><span class="line"><span class="comment">        arr.splice(0,1)</span></span><br><span class="line"><span class="comment">        i--  i=&gt;-1 i=&gt;0</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        [2,3,4] len=3</span></span><br><span class="line"><span class="comment">        i=0</span></span><br><span class="line"><span class="comment">        arr.splice(0,1)</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">        [3,4] len=2</span></span><br><span class="line"><span class="comment">        i=0</span></span><br><span class="line"><span class="comment">        arr.splice(0,1)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        [4] len=1</span></span><br><span class="line"><span class="comment">        i=0 </span></span><br><span class="line"><span class="comment">        arr.splice(0,1)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        [] len=0</span></span><br><span class="line"><span class="comment">        i=0</span></span><br><span class="line"><span class="comment">        循环退出</span></span><br><span class="line"><span class="comment">      */</span></span><br></pre></td></tr></table></figure>

<h3 id="13-数组去重（重点）"><a href="#13-数组去重（重点）" class="headerlink" title="13 数组去重（重点）"></a>13 数组去重（重点）</h3><h4 id="13-1-排序后删除相邻"><a href="#13-1-排序后删除相邻" class="headerlink" title="13.1 排序后删除相邻"></a>13.1 排序后删除相邻</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="comment">//方案一</span></span><br><span class="line"><span class="comment">//1.排序</span></span><br><span class="line">arr.<span class="title function_">sort</span>(<span class="keyword">function</span> (<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//2.把重复的删除</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  <span class="comment">//判断当前的和下一个是否相等</span></span><br><span class="line">  <span class="keyword">if</span> (arr[i] === arr[i + <span class="number">1</span>]) &#123;</span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    arr.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">    <span class="comment">//解决塌陷</span></span><br><span class="line">    i--;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      [1(0),1(1),1(2),1(3)] len=15</span></span><br><span class="line"><span class="comment">      i=0</span></span><br><span class="line"><span class="comment">      arr[i]=== arr[i+1]</span></span><br><span class="line"><span class="comment">      i-&gt;-1   i++-&gt;0</span></span><br><span class="line"><span class="comment">      [1(1),1(2),1(3)] len=14</span></span><br><span class="line"><span class="comment">      arr[i] === arr[i+1]</span></span><br><span class="line"><span class="comment">      */</span></span><br></pre></td></tr></table></figure>

<h4 id="13-2-push-时判断是否重复"><a href="#13-2-push-时判断是否重复" class="headerlink" title="13.2 push 时判断是否重复"></a>13.2 push 时判断是否重复</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      方案2:</span></span><br><span class="line"><span class="comment">      1. 准备新数组</span></span><br><span class="line"><span class="comment">      2. 遍历原来的数组，一个个添加进去</span></span><br><span class="line"><span class="comment">        添加的时候我们需要判断是否已经存在</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        =&gt;判断数组是否已经存在某个元素</span></span><br><span class="line"><span class="comment">        indexOf </span></span><br><span class="line"><span class="comment">        =&gt; -1 没有</span></span><br><span class="line"><span class="comment">        =&gt; 只要不是-1 有</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="keyword">var</span> newArr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">if</span> (newArr.<span class="title function_">indexOf</span>(arr[i]) === -<span class="number">1</span>) &#123;</span><br><span class="line">    newArr.<span class="title function_">push</span>(arr[i]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr);</span><br></pre></td></tr></table></figure>

<h4 id="13-3-利用对象键名不重复"><a href="#13-3-利用对象键名不重复" class="headerlink" title="13.3 利用对象键名不重复"></a>13.3 利用对象键名不重复</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      方案:利用对象的key不能重复</span></span><br><span class="line"><span class="comment">        1.准备好一个空对象</span></span><br><span class="line"><span class="comment">        2.遍历原来的数组把item当作对象的key 添加到对象内</span></span><br><span class="line"><span class="comment">        3.把对象变成数组</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">var</span> item = arr[i];</span><br><span class="line">  <span class="comment">//item拿到的就是每个元素</span></span><br><span class="line">  <span class="comment">//把item作为对象的key添加进去 value不管</span></span><br><span class="line">  obj[item] = <span class="string">&#x27;好痛苦&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(obj));</span><br><span class="line"><span class="keyword">var</span> newArr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">  <span class="comment">//键名 key obj[key]</span></span><br><span class="line">  newArr.<span class="title function_">push</span>(key - <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr);</span><br></pre></td></tr></table></figure>

<h4 id="13-4-set"><a href="#13-4-set" class="headerlink" title="13.4 set"></a>13.4 set</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      es6 有一个数据结构叫set 他天生不允许重复</span></span><br><span class="line"><span class="comment">      new Set 创建一个set</span></span><br><span class="line"><span class="comment">      ... 就是把set里面的东西全部倒出来</span></span><br><span class="line"><span class="comment">      []声明数组</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([...<span class="keyword">new</span> <span class="title class_">Set</span>(arr)]);</span><br></pre></td></tr></table></figure>

<h4 id="13-5-挨个比较"><a href="#13-5-挨个比较" class="headerlink" title="13.5 挨个比较"></a>13.5 挨个比较</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">      去重方法:</span></span><br><span class="line"><span class="comment">      1.循环遍历原数组</span></span><br><span class="line"><span class="comment">      2.每一个item去和后面所有item挨个比较</span></span><br><span class="line"><span class="comment">        如果相同 把后面的item删除splice(？,1)</span></span><br><span class="line"><span class="comment">        如果不同 什么都不做</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  <span class="comment">//arr[i]就是item</span></span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">        2.判断重复</span></span><br><span class="line"><span class="comment">          var arr = [1, 2, 3, 4, 1, 1, 2, 3, 2, 3, 1, 2, 3, 4, 5];</span></span><br><span class="line"><span class="comment">                     0  1</span></span><br><span class="line"><span class="comment">          如果我拿到的是数据1，去检查是否和后面的1相同？</span></span><br><span class="line"><span class="comment">          arr.indexOf(1,0+1)// 0数据本身的索引+1 跳过自己往后查找</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">          arr.indexOf(2,1+1)</span></span><br><span class="line"><span class="comment">          ...</span></span><br><span class="line"><span class="comment">          arr.indexOf(数据,数据索引+1)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">  <span class="keyword">var</span> index = arr.<span class="title function_">indexOf</span>(arr[i], i + <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span> (index != -<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">//表明后面有重复，删除它</span></span><br><span class="line">    arr.<span class="title function_">splice</span>(index, <span class="number">1</span>);</span><br><span class="line">    i--;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;处理完的数组&#x27;</span>, arr);</span><br></pre></td></tr></table></figure>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li><p>数组常用方法通用语法:数组名.xxx()</p>
<ul>
<li>方法名不同</li>
<li>参数不同</li>
</ul>
</li>
<li><p>方法<br>push-pop shift-unshift<br>splice<br>slice<br>concat<br>join - split<br>indexOf、lastIndexOf<br>includes<br>find、findIndex<br>sort<br>reverse<br>forEach(function(item,index,arr){})<br>every<br>some<br>filter<br>map<br>reduce</p>
</li>
</ul>
<ol>
<li>会修改原数组的方法<br>push-pop、unshift-shift、splice<br>sort、reverse</li>
<li>不会修改原数组的方法<br>slice、concat、join、indexOf、lastIndexOf、<br>includes、find、findIndex、forEach、every、some<br>filter、map、reduce</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记02-事件与语句</title>
    <url>/2022/04/28/b05%20javascript%E5%85%A5%E9%97%A802/</url>
    <content><![CDATA[<h2 id="事件、字符串、运算符"><a href="#事件、字符串、运算符" class="headerlink" title="事件、字符串、运算符"></a>事件、字符串、运算符<span id="more"></span></h2><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><p>事件即指发生在html中的一些浏览器行为，或者用户行为。前面我们已经使用过<code>onclick</code>，即指当按钮点击时。</p>
<p>以下是一些常见的事件：</p>
<table>
<thead>
<tr>
<th align="left">事件</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">onchange</td>
<td align="left">HTML 元素改变</td>
</tr>
<tr>
<td align="left">onclick</td>
<td align="left">用户点击 HTML 元素</td>
</tr>
<tr>
<td align="left">onmouseover</td>
<td align="left">鼠标指针移动到指定的元素上时发生</td>
</tr>
<tr>
<td align="left">onmouseout</td>
<td align="left">用户从一个 HTML 元素上移开鼠标时发生</td>
</tr>
<tr>
<td align="left">onkeydown</td>
<td align="left">用户按下键盘按键</td>
</tr>
<tr>
<td align="left">onload</td>
<td align="left">浏览器已完成页面的加载</td>
</tr>
</tbody></table>
<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ul>
<li>字符串可以存储一系列字符，如 “John Doe”。</li>
<li>字符串可以是插入到引号中的任何字符。你可以使用单引号或双引号：</li>
<li>字符串的索引是从0开始，第一个字符索引值为[0]，第二个字符索引值为[1]</li>
<li>字符串由于是用单双引号来定义的，字符串里可以使用引号，但是不能和字符串的符号一样，例如<code>var answer = &quot;He is called &#39;Johnny&#39;&quot;;</code>所以在字符串里的单双引号需要加&#x2F;来转义，例子：<code>var y = &quot;He is called \&quot;Johnny\&quot;&quot;;</code></li>
<li>字符串的长度可以用<code>txt.length</code>来获得</li>
<li>字符串可以是对象，但是单纯的字符串≠对象（因为对象要有方法，有属性）</li>
</ul>
<h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>除了常见的加减乘除符号，js还有一些特殊的运算符</p>
<p>特别留意<code>++</code>和<code>--</code>符号,他们代表自增和自减符号，什么意思呢？就当式子<strong>从左到右</strong>按顺序计算到这个符号后，例如–y，等于y自减1，那为什么–符号放在y前面和后面，x的值不一样？因为式子是<strong>从左到右</strong>计算，当x&#x3D;y–时，计算x的值，只计算到x&#x3D;y就结束了<strong>对x的计算</strong>。</p>
<p>当y等于5时：</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>x结果</th>
<th>y结果</th>
</tr>
</thead>
<tbody><tr>
<td>x&#x3D;y++</td>
<td>5</td>
<td>6</td>
</tr>
<tr>
<td>x&#x3D;++y</td>
<td>6</td>
<td>6</td>
</tr>
<tr>
<td>x&#x3D;y–</td>
<td>5</td>
<td>4</td>
</tr>
<tr>
<td>x&#x3D;–y</td>
<td>4</td>
<td>4</td>
</tr>
</tbody></table>
<h4 id="js赋值运算符"><a href="#js赋值运算符" class="headerlink" title="js赋值运算符"></a>js赋值运算符</h4><p>给定 <strong>x&#x3D;10</strong> 和 <strong>y&#x3D;5</strong>，下面的表格解释了赋值运算符：</p>
<table>
<thead>
<tr>
<th align="left">运算符</th>
<th align="left">例子</th>
<th align="left">等同于</th>
<th align="left">运算结果</th>
<th align="left">在线实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">&#x3D;</td>
<td align="left">x&#x3D;y</td>
<td align="left"></td>
<td align="left">x&#x3D;5</td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_oper_equal">实例 »</a></td>
</tr>
<tr>
<td align="left">+&#x3D;</td>
<td align="left">x+&#x3D;y</td>
<td align="left">x&#x3D;x+y</td>
<td align="left">x&#x3D;15</td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_oper_plusequal">实例 »</a></td>
</tr>
<tr>
<td align="left">-&#x3D;</td>
<td align="left">x-&#x3D;y</td>
<td align="left">x&#x3D;x-y</td>
<td align="left">x&#x3D;5</td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_oper_minequal">实例 »</a></td>
</tr>
<tr>
<td align="left">*&#x3D;</td>
<td align="left">x*&#x3D;y</td>
<td align="left">x&#x3D;x*y</td>
<td align="left">x&#x3D;50</td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_oper_multequal">实例 »</a></td>
</tr>
<tr>
<td align="left">&#x2F;&#x3D;</td>
<td align="left">x&#x2F;&#x3D;y</td>
<td align="left">x&#x3D;x&#x2F;y</td>
<td align="left">x&#x3D;2</td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_oper_divequal">实例 »</a></td>
</tr>
<tr>
<td align="left">%&#x3D;</td>
<td align="left">x%&#x3D;y</td>
<td align="left">x&#x3D;x%y</td>
<td align="left">x&#x3D;0</td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_oper_modequal">实例 »</a></td>
</tr>
</tbody></table>
<h4 id="js比较和逻辑运算符"><a href="#js比较和逻辑运算符" class="headerlink" title="js比较和逻辑运算符"></a>js比较和逻辑运算符</h4><p>比较运算符在逻辑语句中使用，以测定变量或值是否相等。</p>
<p>x&#x3D;5，下面的表格解释了比较运算符：</p>
<table>
<thead>
<tr>
<th align="left">运算符</th>
<th align="left">描述</th>
<th align="left">比较</th>
<th align="left">返回值</th>
<th align="left">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">&#x3D;&#x3D;</td>
<td align="left">等于</td>
<td align="left">x&#x3D;&#x3D;8</td>
<td align="left"><em>false</em></td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison1">实例 »</a></td>
</tr>
<tr>
<td align="left">x&#x3D;&#x3D;5</td>
<td align="left"><em>true</em></td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison2">实例 »</a></td>
<td align="left"></td>
<td align="left"></td>
</tr>
<tr>
<td align="left">&#x3D;&#x3D;&#x3D;</td>
<td align="left">绝对等于（值和类型均相等）</td>
<td align="left">x&#x3D;&#x3D;&#x3D;”5”</td>
<td align="left"><em>false</em></td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison3">实例 »</a></td>
</tr>
<tr>
<td align="left">x&#x3D;&#x3D;&#x3D;5</td>
<td align="left"><em>true</em></td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison4">实例 »</a></td>
<td align="left"></td>
<td align="left"></td>
</tr>
<tr>
<td align="left">!&#x3D;</td>
<td align="left">不等于</td>
<td align="left">x!&#x3D;8</td>
<td align="left"><em>true</em></td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison5">实例 »</a></td>
</tr>
<tr>
<td align="left">!&#x3D;&#x3D;</td>
<td align="left">不绝对等于（值和类型有一个不相等，或两个都不相等）</td>
<td align="left">x!&#x3D;&#x3D;”5”</td>
<td align="left"><em>true</em></td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison6">实例 »</a></td>
</tr>
<tr>
<td align="left">x!&#x3D;&#x3D;5</td>
<td align="left"><em>false</em></td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison7">实例 »</a></td>
<td align="left"></td>
<td align="left"></td>
</tr>
<tr>
<td align="left">&gt;</td>
<td align="left">大于</td>
<td align="left">x&gt;8</td>
<td align="left"><em>false</em></td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison8">实例 »</a></td>
</tr>
<tr>
<td align="left">&lt;</td>
<td align="left">小于</td>
<td align="left">x&lt;8</td>
<td align="left"><em>true</em></td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison9">实例 »</a></td>
</tr>
<tr>
<td align="left">&gt;&#x3D;</td>
<td align="left">大于或等于</td>
<td align="left">x&gt;&#x3D;8</td>
<td align="left"><em>false</em></td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison10">实例 »</a></td>
</tr>
<tr>
<td align="left">&lt;&#x3D;</td>
<td align="left">小于或等于</td>
<td align="left">x&lt;&#x3D;8</td>
<td align="left"><em>true</em></td>
<td align="left"><a href="https://www.runoob.com/try/try.php?filename=tryjs_comparison11">实例 »</a></td>
</tr>
</tbody></table>
<p>逻辑运算符用于测定变量或值之间的逻辑。</p>
<p>给定 x&#x3D;6 以及 y&#x3D;3，下表解释了逻辑运算符：</p>
<p>即与或非三种类型，</p>
<table>
<thead>
<tr>
<th align="left">运算符</th>
<th align="left">描述</th>
<th align="left">例子</th>
</tr>
</thead>
<tbody><tr>
<td align="left">&amp;&amp;</td>
<td align="left">and</td>
<td align="left">(x &lt; 10 &amp;&amp; y &gt; 1) 为 true</td>
</tr>
<tr>
<td align="left">||</td>
<td align="left">or</td>
<td align="left">(x&#x3D;&#x3D;5 || y&#x3D;&#x3D;5) 为 false</td>
</tr>
<tr>
<td align="left">!</td>
<td align="left">not</td>
<td align="left">!(x&#x3D;&#x3D;y) 为 true</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记04-函数</title>
    <url>/2022/04/28/b08%20javascript%E5%85%A5%E9%97%A804%20%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数<span id="more"></span></h2><h3 id="程序里面的-foo、bar、baz"><a href="#程序里面的-foo、bar、baz" class="headerlink" title="程序里面的 foo、bar、baz"></a>程序里面的 foo、bar、baz</h3><p>通常被用来作为<strong>函数、变量、文件</strong>的命名<br>目前已经变成了<strong>编程术语</strong>的一部份<br>他们本身并<strong>没有特殊的用途和意义</strong><br>被称为“伪变量”</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//stackover flow</span></span><br><span class="line"><span class="keyword">var</span> foo = xxxxxx;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">bar</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="keyword">var</span> baz = &#123;&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h3><p>函数其实就是某种特定功能的代码的封装</p>
<p>函数的使用：</p>
<ol>
<li><p>声明函数–封装 独立的功能<br>在 js 中也可以称为定义函数<br>声明函数的过程是对某些功能的封装<br>在后续开发中，我们会根据不同的需求定义很多函数</p>
</li>
<li><p>调用函数–享受封装的成果<br>也称为函数调用</p>
</li>
</ol>
<p>函数的作用：提高开发效率，复用代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//实现非常复杂的功能</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>();</span><br></pre></td></tr></table></figure>

<h3 id="函数的声明和调用"><a href="#函数的声明和调用" class="headerlink" title="函数的声明和调用"></a>函数的声明和调用</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//声明一个函数</span></span><br><span class="line"><span class="comment">//制作好一个工具，但是这个工具默认情况下是不会被使用的</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sayHello</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你好&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//函数的调用</span></span><br><span class="line"><span class="comment">//使用工具</span></span><br><span class="line"><span class="title function_">sayHello</span>();</span><br></pre></td></tr></table></figure>

<p>语法:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> 函数名() &#123;</span><br><span class="line">  <span class="comment">//函数体</span></span><br><span class="line">  <span class="comment">//函数封装的代码</span></span><br><span class="line">&#125;</span><br><span class="line">函数名();</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ol>
<li>函数的命名规则和之前的变量命名规则一样</li>
<li>函数要尽量做到见名知意(函数通常使用动词更多)</li>
<li>函数定义完后，里面的代码不会执行，必须调用才会执行</li>
</ol>
<h3 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h3><p>增加函数的通用性，针对相同的逻辑处理，能适应更多变的数据就有了函数的参数</p>
<ul>
<li>在函数的内部，把参数当作变量使用，进行你要的处理</li>
<li>函数调用时，按照函数参数的定义时的顺序，传递进去</li>
<li>形参(param):<strong>定义</strong>函数时，小括号中的参数，是用来接受实际参数用的，在函数内部 作为变量使用</li>
<li>实参(argument):<strong>调用</strong>函数时,小括号中的参数,是用来把真实的数据传递到函数内部用的</li>
</ul>
<h3 id="函数的返回值"><a href="#函数的返回值" class="headerlink" title="函数的返回值"></a>函数的返回值</h3><p>return 关键字来定义返回值<br>return 除了返回值以外还能终止函数的执行</p>
<h3 id="arguments-实参列表"><a href="#arguments-实参列表" class="headerlink" title="arguments 实参列表"></a>arguments 实参列表</h3><p>函数内部存在特别的对象:arguments 对象<br>里面存放的是函数接受到的所有实际参数<br>他的数据类型是一个 object 类型，伪数组(array-like)</p>
<p>你调用函数的时候，传递了多少个实参，这个变量里面就有多少个数据索引&#x2F;下标:从0开始，依次+1</p>
<p>访问arguments内的每一个数据：利用索引访问:arguments[索引]  <code> arguments[0]</code></p>
<p>arguments的长度调用函数时具体传递的实际参数的个数<code> arguments.length</code></p>
<h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><p>函数自己调用自己有一个专业的名词，叫递归(Recursion)</p>
<p>将一个复杂的任务，转化成重复执行的相同(小)任务。</p>
<h3 id="局部和全局变量"><a href="#局部和全局变量" class="headerlink" title="局部和全局变量"></a>局部和全局变量</h3><h4 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h4><p>在 js(es6 之前)中没有块级作用域的概念的，但是函数是可以定义自己的作用域的</p>
<ul>
<li>作用域(Scope)：表示一些标识符的作用有效范围(那块代码这个变量可以使用)</li>
<li>函数作用域:表示在函数内部定义的变量，只有函数内部可以访问到</li>
</ul>
<h4 id="局部和全局变量-1"><a href="#局部和全局变量-1" class="headerlink" title="局部和全局变量"></a>局部和全局变量</h4><ul>
<li>局部变量:定义在函数内部的变量，称为局部变量</li>
<li>外部变量:定义在函数外部的变量,称为外部变量</li>
<li>全局变量:在任何函数中&#x2F;函数外都能访问到的变量，就是全局变量(var 声明的全局变量是在 window 上添加一个属性)</li>
</ul>
<h4 id="变量定义的机制"><a href="#变量定义的机制" class="headerlink" title="变量定义的机制"></a>变量定义的机制</h4><p>​      你定义在那个作用域下的变量，就是那个作用域的私有变量，就只能在该作用域及其后代作用域中使用</p>
<h4 id="变量的访问顺序"><a href="#变量的访问顺序" class="headerlink" title="变量的访问顺序"></a>变量的访问顺序</h4><p>在函数中访问变量时，优先找自己，如果自己没有就去外部找，最终找到 window 都没有那就报错</p>
<ul>
<li>块级作用域，作用域链，变量提升，AO，VO，GO 高阶学习</li>
</ul>
<h4 id="变量的赋值"><a href="#变量的赋值" class="headerlink" title="变量的赋值"></a>变量的赋值</h4><pre><code>     1. 当你给一个变量赋值的时候
</code></pre>
<ol start="2">
<li><p>如果自己作用域内有该变量，那么给自己赋值</p>
</li>
<li><p>如果自己作用域内没有，那么给父级的变量赋值</p>
</li>
<li><p>如果父级还没有，那就给父级的父级变量赋值</p>
</li>
<li><p>以此类推到window对象，还没有</p>
</li>
<li><p>那么就会把这个变量定义为全局变量，并且赋值</p>
</li>
</ol>
<h3 id="函数的头等公民"><a href="#函数的头等公民" class="headerlink" title="函数的头等公民"></a>函数的头等公民</h3><p>函数的表达式(Function Expressions)<br>在 js 中函数并不是神奇的语法结构，而是一种特殊的值(是一种特殊的对象 Object 类型)<br>之前我们定义函数的方式–函数的声明(Function Declaration)<br>其实，还有另一种写法是函数表达式</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> foo = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;foo函数&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>头等函数(first-class-function:第一级函数),指在程序设计语言中，函数被当作头等公民</p>
<ul>
<li>函数可以作为其他函数的参数、函数的返回值、赋值给变量、或者存储在其他的数据结构中</li>
<li>通常对头等函数的编程方式，称为函数式编程。</li>
</ul>
<h3 id="回调函数（callback-function）"><a href="#回调函数（callback-function）" class="headerlink" title="回调函数（callback function）"></a>回调函数（callback function）</h3><p>高阶函数必须满足以下两个条件之一</p>
<ul>
<li>接收一个&#x2F;多个函数作为参数</li>
<li>输出一个函数(返回一个函数)</li>
</ul>
<h3 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h3><p>Immediately-Invoked Function Expression(IIFE)</p>
<h3 id="预解析"><a href="#预解析" class="headerlink" title="预解析"></a>预解析</h3><ul>
<li>在所有代码执行之前，对代码进行通读并解释</li>
</ul>
<h4 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h4><p>function以及用var 关键字定义的变量，在浏览器解析的时候会首先将<strong>声明</strong>提升至前排，再按照顺序解析<strong>定义</strong></p>
<p>这就是为什么下面代码块会提示undefined而不是直接报错。</p>
<h4 id="预解析-var-关键字"><a href="#预解析-var-关键字" class="headerlink" title="预解析 var 关键字"></a>预解析 var 关键字</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">//undefined</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//解析var关键字</span></span><br><span class="line"><span class="comment">//1. var num</span></span><br><span class="line"><span class="comment">//2. num=100</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">//100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">打开页面</span></span><br><span class="line"><span class="comment">  预解析</span></span><br><span class="line"><span class="comment">    =&gt; var num</span></span><br><span class="line"><span class="comment">      -&gt;告诉浏览器我定义一个变量叫num，但是没有赋值</span></span><br><span class="line"><span class="comment">  执行代码</span></span><br><span class="line"><span class="comment">    = 第一行代码 在控制台打印num</span></span><br><span class="line"><span class="comment">      - 因为预解析的时候，已经声明过num变量，但是没有赋值</span></span><br><span class="line"><span class="comment">      - num存在，但是没有值</span></span><br><span class="line"><span class="comment">      - undefined</span></span><br><span class="line"><span class="comment">    = 第二行代码</span></span><br><span class="line"><span class="comment">      - 给已经声明的num赋值为100</span></span><br><span class="line"><span class="comment">    = 第三行代码</span></span><br><span class="line"><span class="comment">      - 打印num变量</span></span><br><span class="line"><span class="comment">      - 由于第二行代码的执行 num已经被赋值为100</span></span><br><span class="line"><span class="comment">      - 打印100    </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"><span class="keyword">var</span> fn = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是fn&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">  1 fn()</span></span><br><span class="line"><span class="comment">  2 var fn = funciton()&#123;&#125;</span></span><br><span class="line"><span class="comment">  3 fn()</span></span><br><span class="line"><span class="comment">  打开页面</span></span><br><span class="line"><span class="comment">    预解析</span></span><br><span class="line"><span class="comment">      = var fn</span></span><br><span class="line"><span class="comment">        - 告诉浏览器我定义了一个变量叫fn，但是没有赋值</span></span><br><span class="line"><span class="comment">    执行代码</span></span><br><span class="line"><span class="comment">      = 第一行代码 fn()</span></span><br><span class="line"><span class="comment">        - 把fn变量名，当作函数名来调用</span></span><br><span class="line"><span class="comment">        - 但是fn只是声明了变量，并没有赋值，所以fn是undefined</span></span><br><span class="line"><span class="comment">        - 我们就相当于在做 undefined()</span></span><br><span class="line"><span class="comment">        - 报错 fn is not a function    </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h4 id="解析-声明式-函数"><a href="#解析-声明式-函数" class="headerlink" title="解析 声明式 函数"></a>解析 声明式 函数</h4><ul>
<li>在所有代码执行前，把函数名进行声明提前，并且赋值为一个函数</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是fn&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">1 fn()</span></span><br><span class="line"><span class="comment">2 function fn()&#123;&#125;</span></span><br><span class="line"><span class="comment">3 fn()</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">打开页面</span></span><br><span class="line"><span class="comment">  预解析</span></span><br><span class="line"><span class="comment">    = function fn()&#123;&#125;</span></span><br><span class="line"><span class="comment">    - 告诉浏览器，我定义了一个fn变量，并且这个fn变量里面保存的是一个函数</span></span><br><span class="line"><span class="comment">  代码执行</span></span><br><span class="line"><span class="comment">    = 第一行代码 fn()</span></span><br><span class="line"><span class="comment">      - 拿到fn变量保存的值，当作一个函数来使用</span></span><br><span class="line"><span class="comment">      - 因为预解析阶段，fn里面就是一个函数</span></span><br><span class="line"><span class="comment">      - 正常调用 不报错</span></span><br><span class="line"><span class="comment">    = 第二行代码</span></span><br><span class="line"><span class="comment">    = 第三行代码</span></span><br><span class="line"><span class="comment">      - 拿到fn变量保存的值，当作一个函数来使用</span></span><br><span class="line"><span class="comment">      - 因为预解析阶段，fn里面就是一个函数</span></span><br><span class="line"><span class="comment">      - 正常调用 不报错</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h4 id="预解析的无节操"><a href="#预解析的无节操" class="headerlink" title="预解析的无节操"></a>预解析的无节操</h4><ol>
<li>不管 if 是否为 true，if 里面的代码依旧会预解析</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">false</span>) &#123;</span><br><span class="line">  <span class="comment">//var num会提升到最顶上，但是num=100赋值操作还是留在原地</span></span><br><span class="line">  <span class="keyword">var</span> num = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line"></span><br><span class="line"><span class="comment">//相当于如下代码</span></span><br><span class="line"><span class="keyword">var</span> num;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">//undefined</span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">false</span>) &#123;</span><br><span class="line">  num = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">//undefined</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>函数体内，return 后面的代码虽然不执行，但是还是会预解析</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是fn内的代码&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(anum); <span class="comment">//undefined  不会报错，因为var anum提升到函数作用域内的顶部</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">var</span> anum = <span class="number">100</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(anum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//相当于如下代码</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> anum;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是fn内的代码&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(anum);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">var</span> anum = <span class="number">100</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(anum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>重名问题</li>
</ol>
<ul>
<li>当你使用 var 定义的变量 和 声明式的函数 重名的时候 以函数为准</li>
<li>只在预解析阶段以函数为准</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">num</span>();</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">100</span>;</span><br><span class="line"><span class="title function_">num</span>();</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">num</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是num&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">num</span>();</span><br><span class="line"><span class="comment">//相当于如下代码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">num</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是num&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> num;</span><br><span class="line"><span class="title function_">num</span>();</span><br><span class="line">num = <span class="number">100</span>;</span><br><span class="line"><span class="title function_">num</span>();</span><br><span class="line"><span class="title function_">num</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">1 num();</span></span><br><span class="line"><span class="comment">2 var num = 100;</span></span><br><span class="line"><span class="comment">3 num();</span></span><br><span class="line"><span class="comment">4 function num() &#123; console.log(&#x27;我是num&#x27;);&#125;</span></span><br><span class="line"><span class="comment">5 num();</span></span><br><span class="line"><span class="comment">  打开页面</span></span><br><span class="line"><span class="comment">    预解析</span></span><br><span class="line"><span class="comment">    = var num</span></span><br><span class="line"><span class="comment">      - 告诉浏览器我定义了一个变量叫做num，但是没有赋值</span></span><br><span class="line"><span class="comment">    = function num()&#123;&#125;</span></span><br><span class="line"><span class="comment">      - 告诉浏览器，我定义了一个变量叫num，里面放的是头等公民--函数</span></span><br><span class="line"><span class="comment">    = 预解析结束</span></span><br><span class="line"><span class="comment">      - num里面放的是函数</span></span><br><span class="line"><span class="comment">    执行代码</span></span><br><span class="line"><span class="comment">      1 num()</span></span><br><span class="line"><span class="comment">        - 拿到num内的值，当作函数调用</span></span><br><span class="line"><span class="comment">        - 因为预解析，所以正常调用</span></span><br><span class="line"><span class="comment">      2 num=100</span></span><br><span class="line"><span class="comment">        - 把变量num内的值，我不管你之前里面是什么，现在是100</span></span><br><span class="line"><span class="comment">        - 从此以后，num里面就是100</span></span><br><span class="line"><span class="comment">      3 num()</span></span><br><span class="line"><span class="comment">        - 拿到num内的值，当作函数调用</span></span><br><span class="line"><span class="comment">        - 但是num里面已经是数字100而不是函数</span></span><br><span class="line"><span class="comment">        - 报错</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>面试题</p>
<blockquote>
<p>链式赋值会从右往左解析，例如下题就是先将10赋值给b，然后再将b的值赋值给a</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = (b = <span class="number">10</span>);</span><br><span class="line">a = <span class="number">20</span>;</span><br><span class="line">b = <span class="number">20</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">//20</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b); <span class="comment">//20</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = b; <span class="comment">//报错</span></span><br><span class="line"><span class="comment">//拿到b保存的值赋值给a</span></span><br><span class="line"><span class="comment">//访问b</span></span><br><span class="line"><span class="comment">//自己没有 全局也没有</span></span><br><span class="line"><span class="comment">//访问一个全局都不存在的变量 报错</span></span><br><span class="line">a = <span class="number">20</span>;</span><br><span class="line">b = <span class="number">20</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记03-js条件语句，switch语句，循环语句</title>
    <url>/2022/04/28/b06%20javascript%E5%85%A5%E9%97%A803/</url>
    <content><![CDATA[<h2 id="js条件语句，switch语句，循环语句"><a href="#js条件语句，switch语句，循环语句" class="headerlink" title="js条件语句，switch语句，循环语句"></a>js条件语句，switch语句，循环语句<span id="more"></span></h2><h3 id="if…else语句"><a href="#if…else语句" class="headerlink" title="if…else语句"></a>if…else语句</h3><p>我们可以用if来设置在条件为true的时候执行的代码，else则是在条件为false时执行的代码。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;function1()&quot;</span>&gt;</span>点我试试<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        p标签里原来要有一点文字</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">function1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> x =<span class="string">&quot;&quot;</span> ;<span class="comment">//注意给x一个空的值的表达</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> time = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getHours</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (time&lt;=<span class="number">20</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                x = <span class="string">&quot;还不起来上班！&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                x = <span class="string">&quot;狗都比你起的早！&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;1&quot;</span>).<span class="property">innerHTML</span>=x;<span class="comment">//注意驼峰命名</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="if…elseif-else语句"><a href="#if…elseif-else语句" class="headerlink" title="if…elseif..else语句"></a>if…elseif..else语句</h3><p>其实就是在中间再插入了一个条件为true时执行的代码块</p>
<p>例子：根据不同的时间产生亲切的问候</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">function1</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> x =<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">let</span> time = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getHours</span>();</span><br><span class="line">        <span class="keyword">if</span> (time&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            x = <span class="string">&quot;还不起来上班！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(time&gt;=<span class="number">10</span> &amp;&amp; time&lt;<span class="number">20</span>)&#123;</span><br><span class="line">            x =<span class="string">&quot;上班别摸鱼！&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            x = <span class="string">&quot;狗都比你起的早！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;1&quot;</span>).<span class="property">innerHTML</span>=x;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h3><p>用switch语句来基于不同的条件来执行不同的动作</p>
<p>工作原理：首先设置表达式 <em>n</em>（通常是一个变量）。随后表达式的值会与结构中的每个 case 的值做比较。如果存在匹配，则与该 case 关联的代码块会被执行。请使用 <strong>break</strong> 来阻止代码自动地向下一个 case 运行。</p>
<p>另外，我们还可以用<strong>default</strong>来设置当数据不匹配时返回的结果</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">let</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getDay</span>();</span><br><span class="line">    <span class="keyword">switch</span>(d)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:d=<span class="string">&quot;今天是星期日&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:d=<span class="string">&quot;今天是星期一&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:d=<span class="string">&quot;今天是星期二&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:d=<span class="string">&quot;今天是星期三&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:d=<span class="string">&quot;今天是疯狂星期四&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:d=<span class="string">&quot;今天是星期五&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="attr">default</span>:d=<span class="string">&quot;今天周六&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(d);</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><p>用for循环可以很方便的将函数执行多次</p>
<p>for 循环是您在希望创建循环时常会用到的工具。</p>
<p>下面是 for 循环的语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (*语句 1*; *语句 2*; *语句 3*)</span><br><span class="line">&#123;</span><br><span class="line">  *被执行的代码块*</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>语句 1</strong> （代码块）开始前执行</p>
<p><strong>语句 2</strong> 定义运行循环（代码块）的条件</p>
<p><strong>语句 3</strong> 在循环（代码块）已被执行之后执行</p>
<p>例子</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;function1()&quot;</span>&gt;</span>点我试试<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        p标签里原来要有一点文字</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">function1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> x = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;=<span class="number">5</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">                x=x+<span class="string">&quot;该数字为&quot;</span>+i+<span class="string">&quot;&lt;br&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;1&quot;</span>).<span class="property">innerHTML</span>=x;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>语句123都可以省略不写，但是要保留分号。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    car=[<span class="string">&quot;toyota&quot;</span>,<span class="string">&quot;honda&quot;</span>,<span class="string">&quot;lexus&quot;</span>,<span class="string">&quot;bmw&quot;</span>,<span class="string">&quot;benz&quot;</span>];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> i= <span class="number">2</span>;</span></span><br><span class="line"><span class="language-javascript">    l= car.<span class="property">length</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(;i&lt;l;)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">write</span>(car[i]+<span class="string">&quot;&lt;br&gt;&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            i++</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="for-x2F-in-循环"><a href="#for-x2F-in-循环" class="headerlink" title="for&#x2F;in 循环"></a>for&#x2F;in 循环</h3><p>in循环会遍历对象的属性：这里先做了解，后面会有详细的学习</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>点击下面的按钮，循环遍历对象 &quot;person&quot; 的属性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;myFunction()&quot;</span>&gt;</span>点击这里<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> x</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> txt=<span class="string">&quot;&quot;</span><span class="comment">//这里写这一行的顺序是给txt变量确定数据类型</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> person = &#123;<span class="attr">age</span>:<span class="number">56</span>,<span class="attr">name</span>:<span class="string">&quot;bill&quot;</span>,<span class="attr">lastname</span>:<span class="string">&quot;yes&quot;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(x <span class="keyword">in</span> person)&#123;</span></span><br><span class="line"><span class="language-javascript">            txt=txt+person[x]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span>=txt;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><p>while循环有点类似上面的for循环</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> x=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">while</span>(x&lt;<span class="number">10</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        y=<span class="string">&quot;现在显示的数字为&quot;</span>+x;</span></span><br><span class="line"><span class="language-javascript">        x++</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(y)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>while循环还有一个变体，do while循环</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> x=<span class="string">&quot;&quot;</span>;<span class="keyword">let</span> y=<span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">do</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        y=<span class="string">&quot;现在x的数字是&quot;</span>+x</span></span><br><span class="line"><span class="language-javascript">        x++ <span class="comment">//不要忘记加x++，不然会进入死循环</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">while</span>(x&lt;<span class="number">10</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(y)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>不要忘记添加循环中所用变量的值，否则循环将不会结束</strong>！</p>
<p>补充案例：如何在white循环里套if条件语句</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> x=<span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> sum= <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">while</span>(x&lt;=<span class="number">100</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(x%<span class="number">2</span>===<span class="number">0</span>)&#123;<span class="comment">//判断x是奇数还是偶数</span></span></span><br><span class="line"><span class="language-javascript">            sum=sum+x <span class="comment">//求x=1-100的总和</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        x++</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(sum);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>以上的案例首先判断x是否为偶数，只有偶数才累加进循环里</p>
<h3 id="break和continue语句"><a href="#break和continue语句" class="headerlink" title="break和continue语句"></a>break和continue语句</h3><ul>
<li>break语句可以跳出循环，continue效果是跳过循环中的一个迭代</li>
<li>break语句使用后，还会执行其后的代码（如有），而continue如果后面还有代码则不会执行.</li>
<li>形象的举例，break就是我要吃五个包子，在吃到第三个的时候有虫，于是剩下的都不吃看，continue是跳过有虫的第三个，继续吃第四个第五个。</li>
</ul>
<p>continue实例：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (i==<span class="number">3</span>) <span class="keyword">continue</span>;</span><br><span class="line">    x=x + <span class="string">&quot;The number is &quot;</span> + i + <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在for里面，在i&#x3D;3时，后面的函数会被跳过，不会输出结果。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript 笔记01-初认识</title>
    <url>/2022/04/27/b04%20javascript%E5%85%A5%E9%97%A801/</url>
    <content><![CDATA[<p>本系列文章是参考<a href="https://www.runoob.com/js/js-tutorial.html">JavaScript 教程 | 菜鸟教程 (runoob.com)</a>自学，以及结合课堂学习的一些个人笔记</p>
<span id="more"></span>

<h3 id="js的常用规范"><a href="#js的常用规范" class="headerlink" title="js的常用规范"></a>js的常用规范</h3><p>js一般使用驼峰命名法命名</p>
<h4 id="小驼峰法"><a href="#小驼峰法" class="headerlink" title="小驼峰法"></a>小驼峰法</h4><p>变量一般用小驼峰法标识。驼峰法的意思是：除第一个单词之外，其他单词首字母大写。譬如</p>
<p>int myStudentCount;</p>
<p>变量myStudentCount第一个单词是全部<a href="https://baike.baidu.com/item/%E5%B0%8F%E5%86%99/1769537?fromModule=lemma_inlink">小写</a>，后面的单词首字母大写。</p>
<p>常用于函数名。</p>
<h4 id="大驼峰法"><a href="#大驼峰法" class="headerlink" title="大驼峰法"></a>大驼峰法</h4><p>相比小<a href="https://baike.baidu.com/item/%E9%A9%BC%E5%B3%B0/18011182?fromModule=lemma_inlink">驼峰</a>法，大驼峰法（即<a href="https://baike.baidu.com/item/%E5%B8%95%E6%96%AF%E5%8D%A1%E5%91%BD%E5%90%8D%E6%B3%95/9464494?fromModule=lemma_inlink">帕斯卡命名法</a>）把第一个单词的首字母也大写了。常用于类名，属性，<a href="https://baike.baidu.com/item/%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/2887476?fromModule=lemma_inlink">命名空间</a>等。譬如</p>
<p>public class DataBaseUser;</p>
<h2 id="js的输出方式"><a href="#js的输出方式" class="headerlink" title="js的输出方式"></a>js的输出方式</h2><p>js本身没有任何可打印的函数，但是我们可以用几种命令将js运行的结果反应在控制台中或者html中</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用js输出</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">alert</span>()</span><br><span class="line"><span class="comment">// 弹窗提醒</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>()</span><br><span class="line"><span class="comment">// 打印log到控制台</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>()</span><br><span class="line"><span class="comment">// 直接写进HTML里</span></span><br><span class="line">innerhtml</span><br><span class="line"><span class="comment">// 常常配和id选择特定的html标签</span></span><br></pre></td></tr></table></figure>
<p>另外，还有一种方式用于操纵html元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>() </span><br></pre></td></tr></table></figure>

<p>这种方式需要html里的标签使用<code>id=&quot;&quot;</code></p>
<p>举例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        p标签里原来要有一点文字</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;1&quot;</span>).<span class="property">innerHTML</span> =<span class="string">&quot;页面已修改&quot;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//document.getElementById(&quot;demo&quot;) 是使用 id 属性来查找 HTML 元素的 JavaScript 代码 。</span></span></span><br><span class="line"><span class="language-javascript">		<span class="comment">//innerHTML = &quot;段落已修改。&quot; 是用于修改元素的 HTML 内容(innerHTML)的 JavaScript 代码。</span></span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 同样的代码，只是大小写不同，运行后只能显示正确的那个</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title function_">date</span>());</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 注意js有大小写敏感，要注意大小写！</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title class_">Date</span>());</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//js同样可以直接将一个值写进html中</span></span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>上个例子的script标签放在<strong>body的底部</strong>，这和html的加载顺序有关，要注意代码规范！</p>
<h3 id="打印到控制台"><a href="#打印到控制台" class="headerlink" title="打印到控制台"></a>打印到控制台</h3><p>举例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Date</span>());</span><br></pre></td></tr></table></figure>

<p>我向控制台输出了Date（）的值，在浏览器开f12可以看到</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230327154300419.png" alt="image-20230327154300419"></p>
<h2 id="js语法、语句"><a href="#js语法、语句" class="headerlink" title="js语法、语句"></a>js语法、语句</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>​		字面量，即文本，分为：</p>
<ul>
<li><p><strong>数字字面量</strong>（123这类数字），如果其中有使用运算符，即成为表达式字面量</p>
</li>
<li><p><strong>字符串字面量</strong>（“123”、“一二三”、’123’这类用单引号或者双引号括起来的文本或者数字，叫字符串</p>
</li>
<li><p>数组字面量，[1,2,3,4,5,6],</p>
</li>
<li><p>对象(object)字面量<code>&#123;firstName:&quot;John&quot;, lastName:&quot;Doe&quot;, age:50, eyeColor:&quot;blue&quot;&#125;</code></p>
</li>
<li><p>函数字面量，即定义函数·<code>function myFunction(a, b) &#123; return a * b;&#125;</code>js的数据类型</p>
</li>
</ul>
<p>在 2015 年以前，我们使用 var 关键字来声明 JavaScript 变量。</p>
<p>在 2015 后的 JavaScript 版本 (ES6) 允许我们使用 const 关键字来定义一个常量，使用 let 关键字定义的限定范围内作用域的变量。</p>
<p>更多 const 和 let 内容可以参阅：<a href="https://www.runoob.com/js/js-let-const.html">JavaScript let 和 const。</a></p>
<p>Safari 10 和 Edge 14 是第一批支持 ES6 所有特性的浏览器：</p>
<p>可以通过<code>var</code>或者<code>let</code>来创建一个新的变量，给变量复制</p>
<p>举例：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> length = <span class="number">16</span>;                                  <span class="comment">// Number 通过数字字面量赋值</span></span><br><span class="line"><span class="keyword">var</span> points = x * <span class="number">10</span>;                              <span class="comment">// Number 通过表达式字面量赋值</span></span><br><span class="line"><span class="keyword">var</span> lastName = <span class="string">&quot;Johnson&quot;</span>;                         <span class="comment">// String 通过字符串字面量赋值</span></span><br><span class="line"><span class="keyword">var</span> cars = [<span class="string">&quot;Saab&quot;</span>, <span class="string">&quot;Volvo&quot;</span>, <span class="string">&quot;BMW&quot;</span>];              <span class="comment">// Array  通过数组字面量赋值</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;<span class="attr">firstName</span>:<span class="string">&quot;John&quot;</span>, <span class="attr">lastName</span>:<span class="string">&quot;Doe&quot;</span>&#125;;  <span class="comment">// Object 通过对象字面量赋值</span></span><br></pre></td></tr></table></figure>

<p>数据类型是一个重要的概念，“123”和123的数据类型完全不同</p>
<h3 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h3><p>浏览器将会按顺序执行js语句</p>
<p>js的规范比较类似之前的html和css，</p>
<ul>
<li>用<code>；</code>结尾</li>
<li>可以用<code>&#123;&#125;</code>来将不同的js语句结合在一起</li>
<li>使用<code>\</code>反斜杠对代码进行折行</li>
<li>使用<code>//</code>添加单行注释</li>
<li>使用<code>/* */</code>添加多行注释</li>
</ul>
<h3 id="js数据类型"><a href="#js数据类型" class="headerlink" title="js数据类型"></a>js数据类型</h3><p>**值类型(基本类型)**：字符串（String）、数字(Number)、布尔(Boolean)、空（Null）、未定义（Undefined）、Symbol。</p>
<p><strong>引用数据类型（对象类型）</strong>：对象(Object)、数组(Array)、函数(Function)，还有两个特殊的对象：正则（RegExp）和日期（Date）。</p>
<p>关于各个类型的详细定义，请到<a href="https://www.runoob.com/js/js-datatypes.html">JavaScript 数据类型 | 菜鸟教程 (runoob.com)</a>查看。</p>
<p>js拥有动态类型，即给一个对象可以赋多次不同类型的值，会覆盖前一次的赋值。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x;               <span class="comment">// x 为 undefined</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">5</span>;           <span class="comment">// 现在 x 为数字</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="string">&quot;John&quot;</span>;      <span class="comment">// 现在 x 为字符串</span></span><br></pre></td></tr></table></figure>

<p>可以用<code>typeof</code>命令查询当前对象的值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="string">&quot;John&quot;</span>                <span class="comment">// 返回 string</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">3.14</span>                  <span class="comment">// 返回 number</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">false</span>                 <span class="comment">// 返回 boolean</span></span><br><span class="line"><span class="keyword">typeof</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]             <span class="comment">// 返回 object</span></span><br><span class="line"><span class="keyword">typeof</span> &#123;<span class="attr">name</span>:<span class="string">&#x27;John&#x27;</span>, <span class="attr">age</span>:<span class="number">34</span>&#125; <span class="comment">// 返回 object</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>对象是我们对一个物体进行描述</p>
<p>真实生活中，一辆汽车是一个对象。</p>
<p>对象有它的属性，如重量和颜色等，方法有启动停止等:</p>
<p><img src="https://img-1317399392.cos.ap-guangzhou.myqcloud.com/img/image-20230327163741115.png" alt="汽车模型"></p>
<p>对象的定义：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;<span class="attr">firstName</span>:<span class="string">&quot;John&quot;</span>, <span class="attr">lastName</span>:<span class="string">&quot;Doe&quot;</span>, <span class="attr">age</span>:<span class="number">50</span>, <span class="attr">eyeColor</span>:<span class="string">&quot;blue&quot;</span>&#125;;</span><br></pre></td></tr></table></figure>

<p>在定义对象的时候要注意里面的<strong>数据类型</strong></p>
<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p><strong>函数是由事件驱动的或者当它被调用时执行的可重复使用的代码块。</strong>汽车是否可以批量生产？因为对象已经定义好了（设计图已经设计好了），接下来只等重复调用（生产）即可</p>
<p>函数练习：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        p标签里原来要有一点文字</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;welcome(&#x27;ricky&#x27;,&#x27;driver&#x27;)&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 点击这个按钮的时候会向welcome这个函数返回两个值 --&gt;</span></span><br><span class="line">        点我试试</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> person = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">age</span>:<span class="number">50</span>,<span class="attr">name</span>:<span class="string">&quot;joe&quot;</span>,<span class="attr">lastname</span>:<span class="string">&quot;trump&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            fullname : <span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>+<span class="string">&quot;&quot;</span>+<span class="variable language_">this</span>.<span class="property">lastname</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;1&quot;</span>).<span class="property">innerHTML</span> = person.<span class="title function_">fullname</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//注意：引用函数的时候我在fullname后面加了一对括号，才会返回函数的值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;1&quot;</span>).<span class="property">innerHTML</span> = person.<span class="property">fullname</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//如果我这里不加括号的话，则会直接返回fullname : function()</span></span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">welcome</span>(<span class="params">name,job</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(<span class="string">&quot;welcome&quot;</span>+name+<span class="string">&quot;the&quot;</span>+job);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>注意练习里面的注释，加括号表示是返回对象的”方法”，联想一下汽车的图，汽车的方法是？加油门，刹车等</p>
</li>
<li><p>函数可以调用参数，如上面代码框的welcome函数，可以在调用的时候给其赋值，返回不同的结果。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 01 md基本语法</title>
    <url>/2021/03/20/00%20md%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<ul>
<li><p>这个系列的文章是将我在学生时期学习的一些笔记上传留作纪念和备份，如果能帮助到一些新手朋友那就更好了。</p>
</li>
<li><p>如果笔记有误或者有更多建议，欢迎在评论区指出！</p>
<span id="more"></span></li>
</ul>
<h1 id="代表一级标题"><a href="#代表一级标题" class="headerlink" title="#代表一级标题"></a>#代表一级标题</h1><h2 id="代表二级"><a href="#代表二级" class="headerlink" title="代表二级"></a>代表二级</h2><h3 id="三级，一共有六级标题"><a href="#三级，一共有六级标题" class="headerlink" title="三级，一共有六级标题"></a>三级，一共有六级标题</h3><p>字体<br><strong>两个星号包裹的文字会加粗</strong><br><em>一个星号或者两边下划线包裹的文字会倾斜</em><br><em>这里也是倾斜</em><br><em><strong>斜体加粗</strong></em><br><del>英文波浪线删除</del></p>
<blockquote>
<p>用大于号</p>
<blockquote>
<p>引用的内容可以嵌套引用</p>
</blockquote>
</blockquote>
<hr>
<p>三个—代表分割线<br><img src="/img.jpg"><br>超链接<br><a href="http://www.baidu.com/">百度</a></p>
<p>列表</p>
<p>无序列表</p>
<ul>
<li>列表1</li>
<li>列表2</li>
</ul>
<p>有序列表</p>
<ol>
<li>有序列表1</li>
<li>有序列表2</li>
</ol>
<h2 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h2><p>单行代码<br><code>hello wolrd</code></p>
<p>多行代码框</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 03 表单、表格</title>
    <url>/2021/03/20/02%20%E8%A1%A8%E5%8D%95%E3%80%81%E8%A1%A8%E6%A0%BC/</url>
    <content><![CDATA[<h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><span id="more"></span>

<h3 id="表单的基本结构"><a href="#表单的基本结构" class="headerlink" title="表单的基本结构"></a>表单的基本结构</h3><p>一个可以和后台进行数据交互的表单,至少要包含<strong>form 标签</strong>，输入框，提交按钮</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;地址&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 用户名 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 密码 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 提交 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="form-元素特有的属性"><a href="#form-元素特有的属性" class="headerlink" title="form 元素特有的属性"></a>form 元素特有的属性</h3><h4 id="action-属性"><a href="#action-属性" class="headerlink" title="action 属性"></a>action 属性</h4><p>action 用于设置将数据发送给谁，表单的数据提交目标</p>
<h4 id="method-属性"><a href="#method-属性" class="headerlink" title="method 属性"></a>method 属性</h4><ul>
<li>get 明文发送(数据通过地址栏传递)</li>
<li>post 暗文发送数据(数据不通过地址栏发送)</li>
</ul>
<h3 id="input-元素"><a href="#input-元素" class="headerlink" title="input 元素"></a>input 元素</h3><p>input 元素的表现形式是由该元素的 type 值来决定的</p>
<ul>
<li>type:确定 input 展示为那种类型的输入框</li>
<li>name:规定 input 元素的名称，提交表单的时候 name 作为数据一起提交</li>
<li>value:input 的值，如果填写的话就作为 input 的默认值</li>
<li>readonly:只读，用户不能修改</li>
<li><strong>required:设置为必填项，提交表单时，该内容绝对不能为空</strong></li>
<li><strong>placeholder:当内容为空时，展示的提示信息</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 文本框 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;alex&quot;</span> <span class="attr">readonly</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 密码框 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- input[type=&quot;password&quot;] --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入你的密码，注意保密&quot;</span> <span class="attr">required</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 数字输入框 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">min</span>=<span class="string">&quot;10&quot;</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">step</span>=<span class="string">&quot;10&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 单选框 要想实现当选必须有相同的name属性--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> /&gt;</span>男</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> /&gt;</span>女</span><br><span class="line">  <span class="comment">&lt;!-- 多选 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;eat&quot;</span> /&gt;</span>吃饭</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sleep&quot;</span> /&gt;</span>睡觉</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;steam&quot;</span> /&gt;</span>学英语</span><br><span class="line">  <span class="comment">&lt;!-- 文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 重置按钮 清空表单内的所有用户输入的数据，恢复到默认状态--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 按钮 需要程序员通过js来定义对应的操作--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;普通按钮&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 提交按钮 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- label标签,点击文字也能选中 提升用户体验 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 单选框 要想实现当选必须有相同的name属性--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> /&gt;</span>男</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> /&gt;</span>女</span><br><span class="line">  <span class="comment">&lt;!-- 多选 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;eat&quot;</span> /&gt;</span>吃饭 <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sleep&quot;</span> /&gt;</span>睡觉</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;steam&quot;</span> /&gt;</span>学英语</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- selected表示默认情况下选中的元素 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4399&quot;</span>&gt;</span>4399小游戏<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;7k7k&quot;</span> <span class="attr">selected</span>&gt;</span>7k7k小游戏<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 给下拉框分组</span></span><br><span class="line"><span class="comment">        optgroup=option group</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">&quot;游戏&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;flash&quot;</span>&gt;</span>4399<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;fps&quot;</span>&gt;</span>csgo<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;moba&quot;</span>&gt;</span>dota<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">&quot;吃饭&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;goodEat&quot;</span>&gt;</span>美餐乐<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;m&quot;</span>&gt;</span>金拱门<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;w&quot;</span>&gt;</span>喷射战士<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="文本域"><a href="#文本域" class="headerlink" title="文本域"></a>文本域</h3><p>文本域可以通过css定义宽高，注意<strong>不要漏了form标签</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        cols和rows</span></span><br><span class="line"><span class="comment">        column列</span></span><br><span class="line"><span class="comment">        row行</span></span><br><span class="line"><span class="comment">        并不是限制文本域内文字内容的行列数</span></span><br><span class="line"><span class="comment">        而且控制文本域的宽高</span></span><br><span class="line"><span class="comment">       --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;10&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>一般实际开发除特殊场合外，不推荐用表格来搭建页面结构。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span></span><br><span class="line">    表格标题</span><br><span class="line">  <span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>header<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>header<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>header<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- tr*2&gt;td&#123;$&#125;*3 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>table 一个表格</li>
<li>caption 表格标题 加粗居中</li>
<li>thead 表格的头部区域</li>
<li>tbody 表格的主体区域</li>
<li>tfoot 表格的底部区域</li>
<li>tr 表格的行</li>
<li>th 表格的表头单元格 加粗</li>
<li>td 表格的单元格 一般是 tbody&#x2F;tfoot 中 tr 的子元素</li>
</ul>
<h3 id="表格的嵌套规则"><a href="#表格的嵌套规则" class="headerlink" title="表格的嵌套规则"></a>表格的嵌套规则</h3><p><code>table</code>元素下 只能直接包含 <code>caption,thead,tbody,tfoot</code></p>
<blockquote>
<p>实际尝试后，可以直接用td、tr搭建页面结构，但是这种方法不规范</p>
</blockquote>
<p><code>thead,tbody,tfoot</code>下可以直接包含<code>tr</code></p>
<p><code>tr</code>下可以包含的是<code>td</code></p>
<h3 id="表格的单元格合并-important"><a href="#表格的单元格合并-important" class="headerlink" title="表格的单元格合并!important"></a>表格的单元格合并!important</h3><blockquote>
<p>单元格的合并不是<strong>吞并</strong>而是扩大,每次合并单元格后，记得删除多余的那个</p>
</blockquote>
<p>rowspan 行合并 下一个 tr 中同样位置的第 n 个<br>colspan 列合并 同个 tr 中根据 n 来决定</p>
<h3 id="表格相关的一些问题"><a href="#表格相关的一些问题" class="headerlink" title="表格相关的一些问题"></a>表格相关的一些问题</h3><ol>
<li>caption 是否必须<br>标题标签不是必须的，对于一个 table 来说，可能存在标题，也可能不存在。</li>
<li>tbody，thead，tfoot 是否必须<br>他们都是非必须书写的，对于 tbody 也可以不写，现在的主流浏览器都会自动添加 tbody，但是为了规范，最好加上</li>
<li>tbody，thead，tfoot 元素的顺序是否能改变<br>完全可以，只是不利于维护阅读。</li>
</ol>
<h2 id="表格表单练习"><a href="#表格表单练习" class="headerlink" title="表格表单练习"></a>表格表单练习</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>用户注册页面<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">bordercolor</span>=<span class="string">&quot;red&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> /&gt;</span>男</span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> /&gt;</span>女</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span>听音乐 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span>看电影</span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span>玩游戏</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 04 css介绍</title>
    <url>/2021/03/20/03%20css%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h1 id="css"><a href="#css" class="headerlink" title="css"></a><strong>css</strong></h1><span id="more"></span>

<p>层叠样式表<br>美化网页</p>
<h3 id="语言特点"><a href="#语言特点" class="headerlink" title="语言特点"></a>语言特点</h3><p>从上往下执行，同名覆盖<br>三大特性: <strong>继承性，优先级，层叠性</strong></p>
<ul>
<li>结构与表现分离(html 只负责结构,使得页面更加的简洁)</li>
<li>减少开发的工作量(子元素可以继承父元素的样式，减少了重复的代码)</li>
<li>提高了页面的浏览速度</li>
<li>易于升级</li>
</ul>
<h3 id="厂商前缀"><a href="#厂商前缀" class="headerlink" title="厂商前缀"></a>厂商前缀</h3><p>浏览器厂商通过<strong>厂商前缀</strong>来标记试验性的功能或者属于该厂商的浏览器专属属性<br>Chrome -webkit-<br>Opera -o-<br>IE -ms-<br>FireFox -moz-</p>
<h3 id="引入方式"><a href="#引入方式" class="headerlink" title="引入方式"></a>引入方式</h3><ol>
<li>行内(内联)样式<br><code>&lt;header style=&quot;font-size: 12px&quot;&gt;&lt;/header&gt;</code></li>
<li>页内<br>直接在 html 的头部中<code>style</code>进行设置</li>
<li>页外<br>在头部 通过<code> &lt;link rel=&quot;stylesheet&quot; href=&quot;&quot;&gt;</code>引入</li>
</ol>
<h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><h3 id="1-元素选择器"><a href="#1-元素选择器" class="headerlink" title="1. 元素选择器"></a>1. 元素选择器</h3><p>通过一个简单的<strong>元素选择器</strong>，就能大范围的将所有该元素的样式进行统一的修改</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-群组选择器"><a href="#2-群组选择器" class="headerlink" title="2.群组选择器"></a>2.群组选择器</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>,</span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-通配符选择器"><a href="#3-通配符选择器" class="headerlink" title="3.通配符选择器"></a>3.通配符选择器</h3><p>通配符选择器,能匹配到所有元素</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>页面中所有的字体颜色都会变成红色</p>
<h3 id="4-类-和-id-选择器"><a href="#4-类-和-id-选择器" class="headerlink" title="4. 类 和 id 选择器"></a>4. 类 和 id 选择器</h3><p>类选择器<br>通过 class 属性添加，css 的样式是通过<code>.</code>+<code>类名</code>去选择到对应类名的标签</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.alex</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: lightgreen;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>id 选择器<br>通过 id 属性添加，css 的样式是通过<code>#</code>+<code>id 名</code>来选择到对应的标签</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#alex</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: lightgreen;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5-权重问题"><a href="#5-权重问题" class="headerlink" title="5.权重问题"></a>5.权重问题</h3><p>!important 无限大权重<br>行内样式 优先级 1000<br>id 选择器 0100<br>类选择器 0010<br>元素选择器 0001<br>通配符选择器 0000</p>
<h3 id="6-关系选择器"><a href="#6-关系选择器" class="headerlink" title="6.关系选择器"></a>6.关系选择器</h3><p>关系选择器，是根据文档的结构来进行选择。</p>
<h4 id="同时选择两个元素"><a href="#同时选择两个元素" class="headerlink" title="同时选择两个元素"></a>同时选择两个元素</h4><p>用逗号隔开，可以同时选中两个元素</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>,<span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h4><p>祖先元素 <code>space</code> 后代元素<br>用<strong>空格</strong>隔开</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="子代选择器"><a href="#子代选择器" class="headerlink" title="子代选择器"></a>子代选择器</h4><p>使用<code>&gt;</code>分隔,来选择某个子代的元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">div &gt; span &#123;</span><br><span class="line">  font-size: 100px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">    1 号 span，在 div 中。</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>2 号 span，在 div 中的 span 中。<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>3 号 span，不在 div 中。<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">/* 此时，只有div下的1号span，才会将字体大小变成100px */</span><br></pre></td></tr></table></figure>

<h4 id="相邻选择器"><a href="#相邻选择器" class="headerlink" title="相邻选择器"></a>相邻选择器</h4><p>使用<code>+</code>来分隔，选择与该元素相邻的元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">h1</span> + <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: lightgreen;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>alex老师非常努力<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>经过多年的摸爬滚打<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>终于在社会阶级上<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>往下掉到了底层<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此时只有内容为‘经过多年的摸爬滚打’的 span 标签字体颜色有变化，其他的 span 标签字体颜色则没有变化</p>
<h4 id="兄弟选择器"><a href="#兄弟选择器" class="headerlink" title="兄弟选择器"></a>兄弟选择器</h4><p><code>~</code>来分隔，选择与该元素同级的元素</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> ~ <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: lightgreen;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="复杂选择器"><a href="#复杂选择器" class="headerlink" title="复杂选择器"></a>复杂选择器</h2><h3 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><p>伪类选择器大致分两种,一种是<strong>结构类的伪类选择器</strong>，另外一种是<strong>与用户界面相关的伪类选择器</strong></p>
<h4 id="a-标签的"><a href="#a-标签的" class="headerlink" title="a 标签的"></a>a 标签的</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 链接未被访问时字体的颜色 默认蓝色*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: skyblue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 链接被访问过 默认紫色 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 鼠标悬停时 默认是pointer*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* cursor: none; */</span></span><br><span class="line">  <span class="comment">/* 文字装饰属性 */</span></span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 点击 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意<code>a</code>设置伪类的状态时，必须遵循一定的顺序<br><code>:link</code>&gt;<code>:visited</code>&gt;<code>:hover</code>&gt;<code>active</code></p>
</blockquote>
<h4 id="input-相关的"><a href="#input-相关的" class="headerlink" title="input 相关的"></a>input 相关的</h4><p>单选、复选框用<code>appearance: none;</code>来取消默认的样式比较合适。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 获取焦点 */</span></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.username</span><span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 外轮廓  solid单实线 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">outline</span>: <span class="number">5px</span> solid pink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.password</span><span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 背景色 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: lightgreen;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.checkbox</span><span class="selector-pseudo">:checked</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 清除单选/多选框的默认样式 */</span></span></span><br><span class="line"><span class="language-css">    appearance: none;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 边框 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">10px</span> solid skyblue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.radio</span><span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line"><span class="language-css">    appearance: none;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 边框 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">10px</span> solid pink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">class</span>=<span class="string">&quot;radio&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="匹配任意顺序的元素"><a href="#匹配任意顺序的元素" class="headerlink" title="匹配任意顺序的元素"></a>匹配任意顺序的元素</h4><p>掌握<code>child</code>和<code>type</code>的应用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span> <span class="selector-tag">p</span><span class="selector-pseudo">:first</span>-child &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span> <span class="selector-tag">span</span><span class="selector-pseudo">:first</span>-child &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">      p是父元素的第一个子元素，上面的代码会导致第一个p标签的字体颜色发生改变</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      当我们将p改为span后，并没有出现我们想要的效果-div中第一个span标签字体颜色改变</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      因为span并不是div的第一个子元素(first-child) 所以样式 没有生效</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      last-child</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      */</span></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span> <span class="selector-tag">span</span><span class="selector-pseudo">:first</span>-of-type &#123;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* div中第一个类型为span标签的字体设置为蓝色 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* div中最后一个p标签 */</span></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span> <span class="selector-tag">p</span><span class="selector-pseudo">:last-of-type</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* ul下的 第三个 li标签 */</span></span></span><br><span class="line"><span class="language-css">  <span class="comment">/* ul li:nth-child(3) &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        font-size: 30px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      &#125; */</span></span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 偶数 odd*/</span></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(odd) &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 奇数 even*/</span></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(even) &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是 p 标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span> 我是 span 标签 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是 p 标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span> 我是 span 标签 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是 p 标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span> 我是 span 标签 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是 p 标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span> 我是 span 标签 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是 p 标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span> 我是 span 标签 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第1个元素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第2个元素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第3个元素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第4个元素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第5个元素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第6个元素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第7个元素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第8个元素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><p><code>标签名[属性]&#123;样式&#125;</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 选中type属性为text的input框 设置背景色为红色 */</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&#x27;text&#x27;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h3><p>首字母，首行，</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 首字母 */</span></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">p</span><span class="selector-pseudo">::first-letter</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">200%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 字体大小除了可以设置像素值以外 还可以用百分比 */</span></span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 首行 </span></span></span><br><span class="line"><span class="comment"><span class="language-css">      不管有多少个字/词语，只要在首行，样式就会生效</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      */</span></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span><span class="selector-pseudo">::first-line</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: lightgreen;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">200%</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Today is hot<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是第二行<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>前置，后置</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 前置内容元素 */</span></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">h2</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">content</span>: <span class="string">&#x27;[[&#x27;</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: silver;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 后置内容元素 */</span></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">h2</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">content</span>: <span class="string">&#x27;&gt;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="样式重置"><a href="#样式重置" class="headerlink" title="样式重置"></a>样式重置</h3><p>做练习&#x2F;平常写作业，直接使用如下重置方式</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="comment">/* 清除列表 前面的序号/圆点 */</span></span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>重置样式表<br><a href="https://meyerweb.com/eric/tools/css/reset/">重置样式表</a><br>往往命名为<code>_reset.css</code></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 05 HTML5语义化</title>
    <url>/2021/03/20/04%20html5%20%E8%AF%AD%E4%B9%89%E5%8C%96/</url>
    <content><![CDATA[<h2 id="语义化"><a href="#语义化" class="headerlink" title="语义化"></a>语义化</h2><span id="more"></span>

<h3 id="1-为什么需要语义化"><a href="#1-为什么需要语义化" class="headerlink" title="1.为什么需要语义化"></a>1.为什么需要语义化</h3><ul>
<li>由于语义化的可读性，便于团队的开发和维护</li>
<li>在没有 css 的情况下，页面也能呈现出很好的内容和结构</li>
<li>搜索引擎能够更好的理解页面，可以更快更准确的搜索到信息</li>
</ul>
<h3 id="2-新增的语义元素"><a href="#2-新增的语义元素" class="headerlink" title="2.新增的语义元素"></a>2.新增的语义元素</h3><ol>
<li>header 页面头部</li>
<li>footer 页面的底部</li>
<li>main 主体部分</li>
<li>nav 导航栏</li>
<li>aside 侧边栏</li>
<li>section 节&#x2F;段</li>
<li>article 文章 论坛里的帖子 某个用户的评论</li>
</ol>
<h3 id="3-使用的注意事项"><a href="#3-使用的注意事项" class="headerlink" title="3. 使用的注意事项"></a>3. 使用的注意事项</h3><ul>
<li>没有语义的情况下，就要使用 div</li>
<li>不要为了语义而语义</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content_header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content_article&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content_footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>对比</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span>&gt;</span><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">aside</span>&gt;</span><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 07 显示模式</title>
    <url>/2021/03/20/06%20%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="显示模式"><a href="#显示模式" class="headerlink" title="显示模式"></a>显示模式</h2><span id="more"></span>

<ol>
<li>元素的主要显示模式有哪些</li>
<li>块级元素和行内元素的特点和区别</li>
</ol>
<h3 id="显示模式-1"><a href="#显示模式-1" class="headerlink" title="显示模式"></a>显示模式</h3><p>元素的显示模式，规定了元素在页面上以<strong>什么方式</strong>显示,例如<code>p</code>标签会独占一行，而<code>span</code>却可以同行排列</p>
<p>这些元素的特性(元素的显示模式),由<code>display</code>这个属性来控制的</p>
<h4 id="显示属性-display"><a href="#显示属性-display" class="headerlink" title="显示属性 display"></a>显示属性 display</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">display</span>: block;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>none 此元素不会被渲染</p>
</li>
<li><p>block 此元素会显示为块级元素，该元素前后带有换行符</p>
</li>
<li><p>inline 此元素会显示为内联元素，前后没有换行符</p>
</li>
<li><p>inline-block 此元素显示为行内块元素，同时具有行内和块级的一些特点</p>
</li>
<li><p>list-item 此元素会作为列表显示，例如<code>&lt;li&gt;</code></p>
</li>
<li><p>table 此元素会作为块级表格来展示，例如<code>&lt;table&gt;</code></p>
</li>
</ul>
<h4 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h4><ul>
<li>默认的宽高由内容撑开，与其他(非块级)元素 能够共行</li>
<li>不能设置宽高</li>
<li>外边距失效</li>
<li>内部只能嵌套行内元素</li>
</ul>
<h4 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h4><ul>
<li>默认独占父级的一整行，不能与其他元素共行</li>
<li>能够设置宽高和外边距</li>
<li>内部可以嵌套块级元素和行内元素</li>
</ul>
<h4 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h4><ul>
<li>可以和行内、行内块元素共行，但是会存在空白间隙</li>
<li>默认宽高由内容撑开</li>
<li>宽高和边距都能手动设置</li>
</ul>
<h4 id="display-在开发中真正的用途"><a href="#display-在开发中真正的用途" class="headerlink" title="display 在开发中真正的用途"></a>display 在开发中真正的用途</h4><p><code>none</code>,<code>inline-block</code>,<code>block</code></p>
<ul>
<li>某些特定情况下，需要更改标签的显示属性</li>
<li>在一些超链接的文本中，我们会设置<code>a</code>标签为<code>display:block;</code>，扩大或者缩小超链接的范围</li>
<li>对于图像标签，我们会设置<code>display:block;</code>,来清除空白间隙</li>
<li>在 js 制作一些网页特效的时候，会比较频繁的用到<code>display:none;</code>和<code>display:block;</code>来控制元素的显示隐藏</li>
</ul>
<h3 id="置换元素和非置换元素"><a href="#置换元素和非置换元素" class="headerlink" title="置换元素和非置换元素"></a>置换元素和非置换元素</h3><h4 id="置换元素"><a href="#置换元素" class="headerlink" title="置换元素"></a>置换元素</h4><p>css 渲染模型不会考虑对此内容进行渲染，也就是说浏览器会根据元素的标签和属性，来决定元素的具体显示内容</p>
<p>比如 img 标签，最终展示在页面上是一张图片，但是我们查看具体的源代码，看不到图片的具体信息内容<br>img input a select</p>
<h4 id="非置换元素"><a href="#非置换元素" class="headerlink" title="非置换元素"></a>非置换元素</h4><p>html 绝大多数标签都是非置换元素，内容是什么，页面就渲染什么</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 06 css字体</title>
    <url>/2021/03/20/05%20css%E5%AD%97%E4%BD%93/</url>
    <content><![CDATA[<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><span id="more"></span>

<h3 id="字体类的样式"><a href="#字体类的样式" class="headerlink" title="字体类的样式"></a>字体类的样式</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">font</span>: font-style font-weight font-size/line-height font-family;</span><br><span class="line"><span class="comment">/* 例子 */</span></span><br><span class="line"><span class="attribute">font</span>: normal bold <span class="number">30px</span>/<span class="number">50px</span> Times;</span><br></pre></td></tr></table></figure>

<p>使用 font 属性必须按照上述顺序来书写，而且<code>font-size</code>和<code>font-family</code>是不可忽略的。<br>每个参数仅允许有一个值，忽略将会使用默认值。</p>
<p><strong>实际开发，更倾向于分开来设置字体属性</strong></p>
<h4 id="字体风格-font-style"><a href="#字体风格-font-style" class="headerlink" title="字体风格 font-style"></a>字体风格 font-style</h4><p>设置元素的字体风格(是否倾斜)</p>
<ul>
<li>默认 normal 指定字体的文本样式为正常的字体</li>
<li>italic 指定字体的文本样式为斜体 展示该字体的斜体</li>
<li>oblique 斜体 强行把字体斜着</li>
<li>inherit 继承 继承父元素的字体样式</li>
</ul>
<h4 id="字体粗细-font-weight"><a href="#字体粗细-font-weight" class="headerlink" title="字体粗细 font-weight"></a>字体粗细 font-weight</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">font-weight</span>: normal | bold |bolder|lighter |&lt;integer&gt;;</span><br></pre></td></tr></table></figure>

<ul>
<li>默认值:normal 正常字体 相当于数值 400</li>
<li>bold:粗体，相当于数值 700</li>
<li>bolder:定义比继承更重的字体</li>
<li>lighter:定义比继承更轻的字体</li>
<li>integer:用数字来表示字体的粗细，100-900</li>
<li>bolder 和 lighter 表示的字体的粗细是基于从父元素继承而来的字重计算得到的，与 normal 和 bold 所表示的字重无关</li>
</ul>
<h4 id="字体大小-font-size"><a href="#字体大小-font-size" class="headerlink" title="字体大小 font-size"></a>字体大小 font-size</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">font-size</span>: length | % |em;</span><br></pre></td></tr></table></figure>

<ul>
<li>length 和% 是平时开发中最常用的书写方式</li>
<li>em 主要用于移动端，是相对于父元素字体大小的一个相对长度</li>
<li>网页中最小的字体:12px</li>
<li>chrome 默认字体大小:16px</li>
</ul>
<h4 id="字体颜色"><a href="#字体颜色" class="headerlink" title="字体颜色"></a>字体颜色</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span>: red|<span class="number">#000</span>|<span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<h4 id="自定义字体类型"><a href="#自定义字体类型" class="headerlink" title="自定义字体类型"></a>自定义字体类型</h4><p><a href="https://www.fontsquirrel.com/">字体下载网站</a></p>
<p>使用方式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="keyword">@font-face</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 是为我们自己引入的字体提供一个名称 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-family</span>: myFont;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;../alex-brush/AlexBrush-Regular.ttf&#x27;</span>);</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-family</span>: myFont;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>Today is KFC Crazy Thursday<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>Today is KFC Crazy Thursday<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h2><h3 id="line-height行高"><a href="#line-height行高" class="headerlink" title="line-height行高"></a><code>line-height</code>行高</h3><p>设置当前元素中每行文本的高度</p>
<p>normal:默认，合理的行高<br>length:设置固定的，例如 30px 的行高<br>%:用百分比指定行高，基于文本的<code>font-size</code>进行计算</p>
<p>使用 line-height 时尽量不要让行高小于字体大小，这样会导致多行文本的情况下，发生上下行文字重叠的情况</p>
<p>单行文本居中:设置行高为容器高度</p>
<h3 id="文本装饰text-decoration"><a href="#文本装饰text-decoration" class="headerlink" title="文本装饰text-decoration"></a>文本装饰<code>text-decoration</code></h3><p>设置元素的文本修饰，比如下划线，上划线，删除线。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">text-decoration</span>: text-decoration-line||text-decoration-style||text-decoration-color;</span><br></pre></td></tr></table></figure>

<ol>
<li>text-decoration-line<br>none 没有<br>underline 下划线<br>overline 上划线<br>line-through 贯穿线</li>
<li>text-decoration-style<br>solid 单实线<br>double 双实线<br>dotted 点划线<br>dashed 虚线<br>wavy 波浪线</li>
<li>text-decoration-color<br>设置装饰线的颜色</li>
</ol>
<p>实际开发中我们往往只需要用到第一个<br><code>text-decoration-line</code></p>
<h3 id="首行缩进-text-indent"><a href="#首行缩进-text-indent" class="headerlink" title="首行缩进 text-indent"></a>首行缩进 <code>text-indent</code></h3><p><code>text-indent: 2em;</code></p>
<blockquote>
<p>为什么<code>text-indent</code>最常用的单位是 em<br>假设当前的段落字体大小 16px，如果你希望一个段落的文字能够缩进两个字体大小，可以用<code>text-indent:32px;</code>;也可以使用<code>text-indent:2em</code>。假如后期段落字体大小调整为 14px，如果之前写的是 32，现在就需要修改为 28px，但是如果是 em 的话，就不需要任何变动.</p>
</blockquote>
<h3 id="水平文本对齐text-align-重点"><a href="#水平文本对齐text-align-重点" class="headerlink" title="水平文本对齐text-align (重点)"></a>水平文本对齐<code>text-align</code> (重点)</h3><p>设置元素中文本的水平对齐方式<br>left 左对齐<br>right 右对齐<br>center 居中对齐<br>start 内容对齐开始边界<br>end 内容对齐结束边界<br>justify 内容两端对齐 但是对于强制打断的行以及最后一行(包括 only 一行文字的情况)不会两端对齐而是遵循默认的对齐方式</p>
<h3 id="word-spacing-和-letter-spacing"><a href="#word-spacing-和-letter-spacing" class="headerlink" title="word-spacing 和 letter-spacing"></a>word-spacing 和 letter-spacing</h3><p>word-spacing 单词间隔<br>letter-spacing 字母间隔</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.wrap</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 下外边距 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.word_longger</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">word-spacing</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.word_shorter</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">word-spacing</span>: -<span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.letter_longer</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">letter-spacing</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.letter_shorter</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">letter-spacing</span>: -<span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是正常的<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;word_longger&quot;</span>&gt;</span>加大 word-spacing<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;word_shorter&quot;</span>&gt;</span>减小 word-spacing<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;letter_longer&quot;</span>&gt;</span>加大 letter-spacing<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;letter_shorter&quot;</span>&gt;</span>减小 letter-spacing<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>简单来说，<code>letter-spacing</code>添加的是字母(中文文字)之间的空白;<code>word-spacing</code>添加每个单词之间的空白，对中文无效</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 09 图形绘制以及圆角边框</title>
    <url>/2021/03/20/08%20%E5%9B%BE%E5%BD%A2%E7%BB%98%E5%88%B6%E4%B8%8E%E5%9C%86%E8%A7%92%E8%BE%B9%E6%A1%86/</url>
    <content><![CDATA[<h2 id="图形绘制与圆角边框"><a href="#图形绘制与圆角边框" class="headerlink" title="图形绘制与圆角边框"></a>图形绘制与圆角边框</h2><span id="more"></span>

<h3 id="图形绘制"><a href="#图形绘制" class="headerlink" title="图形绘制"></a>图形绘制</h3><p>理解三角形如何绘制</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">100px</span> solid;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#f30</span> <span class="number">#00f</span> <span class="number">#396</span> <span class="number">#0f0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时我们会得到一个花花绿绿的图形<br>既然每个边框都能设置颜色，能不能设置成透明的</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">100px</span> solid;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#f30</span> transparent transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>得到了一个等腰梯形,而且发现这个等腰梯形窄边的宽度由内容宽度来决定，当我们把盒子的宽度设置为 0 的时候，就形成了一个尖角，这样就得到了我们的三角形</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">100px</span> solid;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#f30</span> transparent transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>三角形的宽高与 width 和 height 无关，是由边框的厚度来决定的</p>
<p>小练习</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">200px</span> <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#f30</span> <span class="number">#f30</span> transparent transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="圆角边框"><a href="#圆角边框" class="headerlink" title="圆角边框"></a>圆角边框</h3><p>小米 200w 图标<br>画圆，设置<code>border-radius</code>为宽高的一半或者 50%都可</p>
<p>圆角边框<br><code>border-radius:lenght|%</code></p>
<ul>
<li>一个值:4 个角的值相同</li>
<li>两个值:左上和右下；右上和左下</li>
<li>三个值:左上；右上和左下；右下</li>
<li>四个值:左上；右上；右下；左下</li>
</ul>
<p>理解圆角边框:内切圆<br>练习</p>
<p>实心上半圆</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="comment">/* 是宽度的一半 */</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50px</span> <span class="number">50px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>实心左半圆</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="comment">/* 宽度要是高度的一半 */</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>圆角矩形</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">  <span class="comment">/* 半径最少是高度的一半 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="盒子阴影"><a href="#盒子阴影" class="headerlink" title="盒子阴影"></a>盒子阴影</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>:h-shadow v-shadow blur     spread color inset;</span><br><span class="line">盒子阴影 ： x轴偏移量 y轴偏移量  模糊半径  阴影扩散范围  颜色  投影方式</span><br></pre></td></tr></table></figure>

<p>x 轴偏移量:正值右移动，负值左移动<br>y 轴：正值上移动，负值下移动<br>模糊半径：值越大越模糊 为 0 时 和原来的图形一样<br>阴影扩散范围：正值放大，负值缩小<br>投影方式：inset&#x2F;outset 内阴影&#x2F;外阴影</p>
<p>实际开发我们调阴影会选择<a href="https://shadows.brumm.af/">阴影</a>来加快效率</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 08 盒子模型</title>
    <url>/2021/03/20/07%20%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><span id="more"></span>

<ol>
<li>什么是盒子模型</li>
<li>盒子模型由哪几部分构成</li>
<li>边框，边距，统一设置，单边设置的方法</li>
<li>margin 使块级元素水平居中的原理</li>
<li>标准盒模型和怪异盒模型的区别</li>
</ol>
<h3 id="什么是盒子模型"><a href="#什么是盒子模型" class="headerlink" title="什么是盒子模型"></a>什么是盒子模型</h3><p>在 html 中，每个元素在浏览器中的解析，都可以被看作一个<strong>盒子</strong>，拥有盒子一样的外形和平面空间。完整的盒子模型是由<strong>width,height</strong>（宽度和高度构成的内容区域），<strong>border(边框)</strong>,<strong>padding（内边距</strong>，<strong>margin（外边距)</strong></p>
<ul>
<li>margin 外边距 透明的</li>
<li>border 围绕在内边距和外边距的边框</li>
<li>padding 围绕在内容周围的区域 透明的</li>
<li>content 盒子的内容 显示的是文本或者图像</li>
</ul>
<h3 id="生活中的盒模型–鱼缸"><a href="#生活中的盒模型–鱼缸" class="headerlink" title="生活中的盒模型–鱼缸"></a>生活中的盒模型–鱼缸</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>最终的效果：<br>蓝色区域-鱼缸<br>绿色区域-泡沫<br>黑色区域-纸盒厚度<br>橙色-外部间隙</p>
<h3 id="标准盒模型和怪异盒-ie-模型"><a href="#标准盒模型和怪异盒-ie-模型" class="headerlink" title="标准盒模型和怪异盒(ie)模型"></a>标准盒模型和怪异盒(ie)模型</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.border-box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.content-box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">box-sizing</span>: content-box;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box border-box&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box content-box&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol>
<li>标准盒模型中 width 指的是内容 content 的宽度；<br>标准盒模型下 盒子大小&#x3D;content+border+padding+margin</li>
<li>怪异盒模型中 width 指的是<strong>内容，边框，内边距</strong>的总宽度（content+border+padding）；<br>怪异盒模型下 盒子的大小&#x3D;width(content+border+padding)+margin</li>
</ol>
<h3 id="尺寸"><a href="#尺寸" class="headerlink" title="尺寸"></a>尺寸</h3><p>css 尺寸属性允许我们控制元素的高度和宽度</p>
<p>默认情况下，元素的宽度<code>width</code>是指从 左内边界 到 右内边界 的 距离<br>当他的值为百分比时，它是相对于父元素的宽度或者高度</p>
<h3 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h3><p><code>border</code>是一个复合属性，一个边框包括边框的宽度，边框的颜色，边框的类型<br><code>border:5px solid pink;</code></p>
<h4 id="边框宽度"><a href="#边框宽度" class="headerlink" title="边框宽度"></a>边框宽度</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-width</span>: <span class="number">3px</span>｜<span class="number">3em</span>;</span><br></pre></td></tr></table></figure>

<h4 id="边框的样式"><a href="#边框的样式" class="headerlink" title="边框的样式"></a>边框的样式</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-style</span>: &lt;style&gt;;</span><br></pre></td></tr></table></figure>

<ul>
<li>none 默认值，无边框</li>
<li>solid 单实线</li>
<li>dotted 点划线</li>
<li>dashed 虚线</li>
<li>double 双实线</li>
</ul>
<h4 id="边框的颜色"><a href="#边框的颜色" class="headerlink" title="边框的颜色"></a>边框的颜色</h4><p>边框的颜色实际上是根据字体颜色来决定的，当然也可以单独设置</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border</span>: red|<span class="number">#000</span>|<span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>) |<span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)</span><br><span class="line">  |transparent透明|inherit继承;</span><br></pre></td></tr></table></figure>

<p>rbga:和 rbg 概念一样，只是多了一个 alpha 的属性值，它代表了透明度，(0~1),0 是全透明，1 是不透明</p>
<h4 id="单边框的设置"><a href="#单边框的设置" class="headerlink" title="单边框的设置"></a>单边框的设置</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">border-top-style</span>: dotted;</span><br><span class="line">  <span class="attribute">border-right-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-bottom-style</span>: double;</span><br><span class="line">  <span class="attribute">border-left-style</span>: dashed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>top 上<br>right 右<br>bottom 下<br>left 左<br>除了边框的样式<code>witdh color</code>都可以单独设置一边的</p>
<h3 id="外边距"><a href="#外边距" class="headerlink" title="外边距"></a>外边距</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">margin</span>: auto|length|percentage;</span><br></pre></td></tr></table></figure>

<ul>
<li>auto:浏览器自动计算外边距</li>
<li>length:具体单位比如 100px em…</li>
<li><code>%</code>:基于<strong>父元素宽度</strong>的百分比外边距，如果父元素没有宽度，则寻找祖辈元素的宽度，如果都没有，就会按照屏幕的宽度来作为参考对象.</li>
</ul>
<h4 id="margin-分写属性"><a href="#margin-分写属性" class="headerlink" title="margin 分写属性"></a>margin 分写属性</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">margin-top</span>: <span class="number">100px</span>;</span><br></pre></td></tr></table></figure>

<p>这种方式书写起来代码比较多，使用场景相对特殊，通常我们都用合写的写法。</p>
<h4 id="margin-合写属性"><a href="#margin-合写属性" class="headerlink" title="margin 合写属性"></a>margin 合写属性</h4><p><code>magin</code>属性合写属性一共有 4 个值，值与方向的对应顺序为 从顶部顺时针转下来<br>这种方式书写起来比较常用</p>
<h5 id="分别设置上下，左右两部分的值"><a href="#分别设置上下，左右两部分的值" class="headerlink" title="分别设置上下，左右两部分的值"></a>分别设置上下，左右两部分的值</h5><p>第一个值是上下外边距，第二个值是左右外边距</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">margin</span>: <span class="number">100px</span> <span class="number">200px</span>;</span><br><span class="line"><span class="comment">/* 等同于下面的设置 */</span></span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">margin-right</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">100px</span>;</span><br></pre></td></tr></table></figure>

<h5 id="分别设置上，左右，下三个部分的值"><a href="#分别设置上，左右，下三个部分的值" class="headerlink" title="分别设置上，左右，下三个部分的值"></a>分别设置上，左右，下三个部分的值</h5><p>第一个值 上外边距<br>第二个值 左右外边距<br>第三个值 下外边距</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">margin</span>: <span class="number">100px</span> <span class="number">200px</span> <span class="number">300px</span>;</span><br><span class="line"><span class="comment">/* 等同于下面的设置 */</span></span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">margin-right</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">200px</span>;</span><br></pre></td></tr></table></figure>

<h4 id="margin-的特殊作用"><a href="#margin-的特殊作用" class="headerlink" title="margin 的特殊作用"></a>margin 的特殊作用</h4><p>将元素的水平方向 margin 值 设为<code>auto</code>，可以让块级元素在父级盒子内水平居中.</p>
<blockquote>
<p>如果想要垂直居中，后面会提到flex布局的应用</p>
</blockquote>
<h3 id="内边距"><a href="#内边距" class="headerlink" title="内边距"></a>内边距</h3><p><code>padding</code>内边距，即盒子模型中，边框距离内容区域的距离，这个区域会被盒子的背景色填充。<br>也可以理解为<strong>当前元素与元素的边框之间的距离</strong></p>
<ul>
<li>内边距的值与外边距的值类似,都有 4 个值，计算的方式 方向也相同</li>
<li>内边距也有 padding-left 的设置，也有四个方向的分写写法</li>
<li>内边距没有负值，设置负值时相当于<code>padding:0px;</code></li>
<li>内边距为百分比时，也是相对于<strong>父元素的宽度</strong>进行计算</li>
</ul>
<p>在没有设置盒子的宽高时，<code>padding</code>值不会影响到盒子大小</p>
<h3 id="关于盒模型的一些常见的问题"><a href="#关于盒模型的一些常见的问题" class="headerlink" title="关于盒模型的一些常见的问题"></a>关于盒模型的一些常见的问题</h3><h4 id="margin-0-auto-中的auto到底是什么含义？"><a href="#margin-0-auto-中的auto到底是什么含义？" class="headerlink" title="margin:0 auto;中的auto到底是什么含义？"></a><code>margin:0 auto;</code>中的<code>auto</code>到底是什么含义？</h4><p>垂直方向的外边距为 0，水平方向的外边距为<code>auto</code>，此时左右外边距的具体值<br><strong>(父级元素内容区域宽度-含边框内边距的当前元素宽度)&#x2F;2</strong></p>
<p>auto 这个属性做了一件事:将父元素的剩余空间<strong>平分</strong>给子元素的左右外边距，这样就会实现水平居中。</p>
<h4 id="如果对行内元素使用margin-0-auto-会怎么样？"><a href="#如果对行内元素使用margin-0-auto-会怎么样？" class="headerlink" title="如果对行内元素使用margin:0 auto;会怎么样？"></a>如果对行内元素使用<code>margin:0 auto;</code>会怎么样？</h4><p>不能居中，而且宽高属性失效了.<br>其实是<strong>行内元素不支持宽高属性，也不支持内外边距的设置</strong></p>
<h4 id="一定要给元素设置宽度才能水平居中吗？"><a href="#一定要给元素设置宽度才能水平居中吗？" class="headerlink" title="一定要给元素设置宽度才能水平居中吗？"></a>一定要给元素设置宽度才能水平居中吗？</h4><p><code>auto</code>居中的原理是将父元素的剩余空间<strong>平分</strong>给子元素的左右外边距，当你不设置宽度时，<strong>块级元素的宽度默认继承父级元素 100%的宽度</strong>,导致没有剩余空间分配给外边距.</p>
<h4 id="border-0-和border-none-的区别"><a href="#border-0-和border-none-的区别" class="headerlink" title="border:0;和border:none;的区别"></a><code>border:0;</code>和<code>border:none;</code>的区别</h4><p>当<code>border:0;</code>时，表示设置边框，只是边框的宽度为 0，此时浏览器还是要正常的渲染元素的边框，会占用内存空间.<br>当<code>border:none;</code>时，表示不设置边框，浏览器不会进行任何边框相关的渲染，不会占用内存空间.</p>
<p>所以取消边框时，尽量用<code>border:none;</code>来实现.</p>
<h4 id="纵向外边距叠加"><a href="#纵向外边距叠加" class="headerlink" title="纵向外边距叠加"></a>纵向外边距叠加</h4><p>通过后续的<strong>BFC</strong>来解决</p>
<h4 id="padding-和-margin-的选择"><a href="#padding-和-margin-的选择" class="headerlink" title="padding 和 margin 的选择"></a>padding 和 margin 的选择</h4><p>父子用 padding<br>兄弟用 margin</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.boxA</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* padding: 70px 55px; */</span></span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.boxB</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">196px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">196px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* margin-bottom: 40px; */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">70px</span> <span class="number">55px</span> <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.boxC</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">196px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">196px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">55px</span> <span class="number">70px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boxA&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boxB&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boxC&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 10 定位</title>
    <url>/2021/03/20/09%20%E5%AE%9A%E4%BD%8D/</url>
    <content><![CDATA[<h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><span id="more"></span>

<p>常见的布局方式：浮动，定位，弹性，(网格)。</p>
<p>多个层叠状态，会优先考虑定位布局。如：弹窗，返回顶部按钮…</p>
<p>语法</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">position</span>: static|relative|absolute|fixed|sticky;</span><br></pre></td></tr></table></figure>

<p>元素可以使用顶部，底部，左侧，右侧这四个定位属性；然而这四个属性无法工作，除非你设定了 position 属性。</p>
<h3 id="static-静态定位"><a href="#static-静态定位" class="headerlink" title="static 静态定位"></a>static 静态定位</h3><p>html 元素默认值，没有定位，遵循正常文档流的现象，静态定位的元素不会收到 top,bottom,left,right 的影响。</p>
<h3 id="relative-相对定位"><a href="#relative-相对定位" class="headerlink" title="relative 相对定位"></a>relative 相对定位</h3><p>relative 表示，相对默认位置(static)进行你要的偏移，即相对定位的基准点是元素的默认位置(static)，遵循正常文档流</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.app</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: -<span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>移动相对定位的元素，但是它原本所占的空间并不会改变<br>相对定位的元素，常常被用来作为绝对定位元素的容器</p>
<h3 id="absolute-绝对定位"><a href="#absolute-绝对定位" class="headerlink" title="absolute 绝对定位"></a>absolute 绝对定位</h3><p>absolute 表示，相对于最近的一个定位属性不为<code>static</code>的祖先元素，如果都没有，则一直回溯到 html 元素。脱离文档流</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.parent</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.children</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>absolute定位使得元素脱离文档流，因此不占据空间<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>absolute定位的元素可以和其他元素重叠<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;children&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="fixed-固定定位"><a href="#fixed-固定定位" class="headerlink" title="fixed 固定定位"></a>fixed 固定定位</h3><p>元素的位置相对于浏览器窗口固定<br>即使是窗口滚动它也不会动</p>
<p>fixed 使得元素脱离文档流，也不占据空间<br>fixed 元素可以和其他元素重叠</p>
<h3 id="三个特点"><a href="#三个特点" class="headerlink" title="三个特点"></a>三个特点</h3><p>absolute 和 fixed 的元素有三个特点<br>块状化，包裹性，破坏性。</p>
<h3 id="粘性定位"><a href="#粘性定位" class="headerlink" title="粘性定位"></a>粘性定位</h3><p>在<strong>设置的值</strong>(阈值)到达前都是 relative，到达后变成了 fixed<br>阈值，一定要设置;<code>top``bottom``left``right </code>必须有一个，才能使得粘性定位生效</p>
<p>sticky由于使用时bug多，不推荐使用。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.stickyCon</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">10000px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.sticky</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: sticky;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;stickyCon&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>123123123123123312<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;sticky&quot;</span>&gt;</span>我是粘性定位的鬼东西<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>很多个p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="重叠元素的-z-index"><a href="#重叠元素的-z-index" class="headerlink" title="重叠元素的 z-index"></a>重叠元素的 z-index</h3><p>谁的 z-index 大，谁在上面</p>
<p>练习</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>钝角<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.father</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-width</span>: <span class="number">200px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-style</span>: solid;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-color</span>: transparent <span class="number">#f30</span> <span class="number">#f30</span> transparent;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: -<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">bottom</span>: -<span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-width</span>: <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-style</span>: solid;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-color</span>: transparent <span class="number">#fff</span> <span class="number">#fff</span> transparent;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>定位练习 1</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.blue</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.black</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: -<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.green</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: lightgreen;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: -<span class="number">175px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">125px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: -<span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.yellow_box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.yellow</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;black&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;yellow_box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>定位练习 2</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-left</span>: -<span class="number">250px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son1</span>,</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son2</span>,</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son3</span>,</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son4</span>,</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son5</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son1</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: bisque;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son2</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son3</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: -<span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son4</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: blueviolet;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son5</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-left</span>: -<span class="number">75px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 11 emmrt和bfc</title>
    <url>/2021/03/20/10%20emmet%E5%92%8CBFC/</url>
    <content><![CDATA[<h2 id="emmet-和-BFC"><a href="#emmet-和-BFC" class="headerlink" title="emmet 和 BFC"></a>emmet 和 BFC</h2><span id="more"></span>

<h3 id="emmet"><a href="#emmet" class="headerlink" title="emmet"></a>emmet</h3><ol>
<li>子元素<code>&gt;</code></li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- div&gt;ul&gt;li --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>相邻元素<code>+</code></li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- div+p+h1 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>层级提升<code>^</code></li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- div+div&gt;p&gt;span+span^^h1 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>数量<code>*</code></li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ul&gt;li*5 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>分组<code>()</code></li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 没有分组 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- div&gt;header&gt;ul&gt;li*2&gt;a+footer&gt;p --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 有分组 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- div&gt;(header&gt;ul&gt;li*2&gt;a)+footer&gt;p --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li>id 和 class</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- span.a 生成类名为a的span标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- span#b 生成id为b的span标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;b&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>7.条目自动生成序号<code>$</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ul&gt;li.item$*5  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ul&gt;li.item$$$*5 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item001&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item002&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item003&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item005&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="8">
<li>内容</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- p&#123;我是段落&#125; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="BFC"><a href="#BFC" class="headerlink" title="BFC"></a>BFC</h2><p><code>BFC</code>即 Block Formatting Context（块级格式化上下文），它是页面中的一块区域，并且有一套渲染规则，它将决定其子元素如何定位，以及对其他元素的影响</p>
<p>具有 BFC 特性的元素，可以看作是隔离的独立容器，容器里面的元素不会在布局上影响到外面的元素，而且 BFC 容器具有一些其他普通容器没有的特点。</p>
<h3 id="如何创建-bfc"><a href="#如何创建-bfc" class="headerlink" title="如何创建 bfc"></a>如何创建 bfc</h3><ul>
<li>body 根元素</li>
<li>float 除了 none 以外的值</li>
<li>绝对定位的元素</li>
<li>display 为 inline-block、flex</li>
<li>overflow 除了 visible 以外的值(hidden、auto、scroll)</li>
</ul>
<h3 id="BFC-特性的应用"><a href="#BFC-特性的应用" class="headerlink" title="BFC 特性的应用"></a>BFC 特性的应用</h3><p>触发BFC可以解决外边距塌陷的问题（盒子之间的margin值相加而不是默认的取大值）</p>
<ol>
<li>外边距重叠<br>由于两个 div 同处于一个 BFC 下，所以第一个 div 的 margin-bottom 会和第二个的 margin-top 发生重叠</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.boxA</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-bottom</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.boxB</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 触发了BFC，生成了独立的容器盒子，在没有触发之前明明应该距离200px的a和b此时却只有100，加上下面这行代码之后 顶开的距离变成了我们想要的200 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boxA&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boxB&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>清除浮动(解决父元素高度塌陷)</p>
<blockquote>
<p>高度塌陷：指父元素如果没有指定height，则不会被内容撑开（因为盒子的内容已经浮动脱出标准流了）</p>
</blockquote>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>父子元素的 margin 传递问题</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>阻止元素被浮动覆盖</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.aa</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.bb</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 下方的代码可以让bb盒子不被浮动元素覆盖掉 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;aa&quot;</span>&gt;</span>我是一个左浮动的元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bb&quot;</span>&gt;</span>我是一个没有设置浮动，也没有触发bfc的元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 13 git命令</title>
    <url>/2021/03/20/12%20git/</url>
    <content><![CDATA[<span id="more"></span>

<p>git –version<br>git add .<br>git commit -m ‘init’<br>git clone</p>
<p>配置用户信息<br>git config –global user.name ‘手机号’<br>git config -g user.email ‘邮箱’<br>git config -g user.password ‘密码’</p>
<h2 id="上传作业的步骤"><a href="#上传作业的步骤" class="headerlink" title="上传作业的步骤"></a>上传作业的步骤</h2><h3 id="在删除本地文件的情况下"><a href="#在删除本地文件的情况下" class="headerlink" title="在删除本地文件的情况下"></a>在删除本地文件的情况下</h3><ul>
<li>git clone 克隆远程的仓库</li>
</ul>
<h3 id="其余步骤都是通用的步骤"><a href="#其余步骤都是通用的步骤" class="headerlink" title="其余步骤都是通用的步骤"></a>其余步骤都是通用的步骤</h3><ul>
<li>cd 仓库名字，进入仓库</li>
<li>git add .    把当前仓库的所有内容添加到提交队列</li>
<li>git commit -m ‘你的备注’ 准备提交至远程，可以修改备注</li>
<li>git push     开始提交</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 14 背景与精灵图</title>
    <url>/2021/03/20/13%20%E8%83%8C%E6%99%AF%E5%92%8C%E7%B2%BE%E7%81%B5%E5%9B%BE/</url>
    <content><![CDATA[<span id="more"></span>

<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><h3 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background-color</span>: red|<span class="number">#000</span>|<span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) |<span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>)</span><br><span class="line">  |transparent（默认值）;</span><br></pre></td></tr></table></figure>

<p>transparent 不要忘记</p>
<h3 id="背景图"><a href="#背景图" class="headerlink" title="背景图"></a>背景图</h3><p>任何元素，都可以有背景图<br>背景图的设置要通过<code>background-image:url();</code><br>其中 url 就是图片路径</p>
<h3 id="背景重复"><a href="#背景重复" class="headerlink" title="背景重复"></a>背景重复</h3><p><code>background-repeat</code></p>
<ul>
<li>repeat 默认，背景图将会在 x 轴 y 轴上重复</li>
<li>no-repeat 不重复，背景图只显示一次</li>
<li>repeat-y 背景图只在 y 轴重复</li>
<li>repeat-x 背景图只在 x 轴重复</li>
</ul>
<h3 id="背景位置"><a href="#背景位置" class="headerlink" title="背景位置"></a>背景位置</h3><p>控制背景图从哪里开始显示<br><code>background-position:x y;</code><br>常见的是像素值，但是实际上我们更常用的<br>top right left bottom center<br>可以只写一个值，此时另外一个值默认为<code>center</code></p>
<h3 id="背景固定"><a href="#背景固定" class="headerlink" title="背景固定"></a>背景固定</h3><p><code>background-attachment</code></p>
<ul>
<li>scroll 默认值，背景图会跟随页面滚动</li>
<li>fixed 背景图固定，常常用来做<strong>视差滚动</strong></li>
</ul>
<h3 id="背景尺寸"><a href="#背景尺寸" class="headerlink" title="背景尺寸"></a>背景尺寸</h3><p><code>background-size:&lt;length&gt;|%|||</code></p>
<ul>
<li>length 第一个值为水平宽度，第二个值为垂直高度，当只写一个值的时候，另一个为 auto</li>
<li><code>%</code> 也是两个值，是相对于父元素的百分比</li>
<li>cover 让图片完全覆盖背景，这个属性一般会让背景图显示不全</li>
<li>contain 会把图片缩放到合适大小，让图片完全显示，一般会让部分区域空白</li>
</ul>
<h3 id="复合写法"><a href="#复合写法" class="headerlink" title="复合写法"></a>复合写法</h3><p><code>background: 颜色 路径 重复？ 位置/尺寸</code></p>
<ul>
<li>背景尺寸必须紧跟在背景位置的后面，两者之间用一条<code>/</code>分隔</li>
<li>值的规则仍然适用，横向的值在前，纵向的值在后</li>
</ul>
<h3 id="一些注意事项"><a href="#一些注意事项" class="headerlink" title="一些注意事项"></a>一些注意事项</h3><ol>
<li>背景图和背景颜色，从哪里开始显示?(边框？内边距？)<br>背景颜色从<strong>边框区域</strong>开始渲染,而背景图片从<strong>内边距</strong>开始渲染<br>某些情况下，需要将背景图渲染的位置发生改变，我们就可以用到<br><code>background-origin:border-box|padding-box|content-box</code></li>
</ol>
<ul>
<li>border-box:图像从边框区域开始</li>
<li>padding-box:图像从内边距开始(默认值)</li>
<li>content-box:图像从内容区域开始</li>
</ul>
<h3 id="2-什么时候用-img？什么时候用-bgi"><a href="#2-什么时候用-img？什么时候用-bgi" class="headerlink" title="2.什么时候用 img？什么时候用 bgi?"></a>2.什么时候用 img？什么时候用 bgi?</h3><ul>
<li><p>img<br>img 标签虽然不是块级元素，但是他可以设置宽高，占位<br>img 设置宽度以后，高度会自动匹配，如果设置高度那么宽度也一样，如果同时设置宽高，图片可能会变形。</p>
</li>
<li><p>bgi<br>他只是一个 css 属性，并不占位，可以结合其他属性来设置背景图的大小，位置，重复与否。她所在的元素必须设置宽高</p>
</li>
</ul>
<p>他们的不同</p>
<ol>
<li>img 是标签占位；bgi 不是标签不占位</li>
<li>img 是 docment 对象中可以操作的，但是 bgi 不行</li>
<li>在网页的加载过程中，img 是结构的一部分，会在加载结构的时候加载，而 bgi 是样式，它会在结构加载完成以后再加载</li>
<li>img 标签点击会选中&#x2F;放大图片，bgi 不会</li>
</ol>
<p>使用 img</p>
<ul>
<li>作为结构</li>
<li>展示后台传过来的数据</li>
<li>对图片进行缩放</li>
<li>seo 搜索引擎优化</li>
<li>对语义化有明确要求</li>
<li>图片是作为页面的组成部份而不是修饰部份</li>
<li>显示图片只给定宽&#x2F;定高 而且不能截断的时候</li>
</ul>
<p>使用 bgi</p>
<ul>
<li>不是结构的一部分</li>
<li>图像代替文本使用</li>
<li>禁止用户缩放时</li>
<li>允许图片 拉伸 重复平铺 截取</li>
</ul>
<h2 id="雪碧图"><a href="#雪碧图" class="headerlink" title="雪碧图"></a>雪碧图</h2><p>雪碧图是一种网页处理图片的方式，它允许将一个页面涉及到的所有零星的图片都整合到一张大图中。当访问该页面的时候，载入的图片就不会像往常那样慢慢显示出来。</p>
<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>简单来说，使用雪碧图的主要目的就是为了<strong>有效的减少 Http 请求数量</strong>和<strong>加速内容的显示</strong></p>
<h3 id="雪碧图的使用规则"><a href="#雪碧图的使用规则" class="headerlink" title="雪碧图的使用规则"></a>雪碧图的使用规则</h3><p>虽然 css sprite 能够优化网络资源的加载情况，但是并不是每个图片适合用雪碧图，必须满足以下条件</p>
<ul>
<li>静态图片，不会因为用户的差异性而发生变化</li>
<li>小图片，图片的体积比较小，对清晰度要求不高</li>
</ul>
<h2 id="git-的使用"><a href="#git-的使用" class="headerlink" title="git 的使用"></a>git 的使用</h2><p>安装<br><a href="https://git-scm.com/">git 官网</a></p>
<p>配置环境变量</p>
<p>clear 清屏<br>git –version 查看版本号<br>git add . 把当前仓库的所有内容添加到提交队列<br>git commit -m ‘提交信息’<br>git push<br>git clone 从远端拉取仓库</p>
<p>配置用户信息<br>git config –global user.name ‘手机号码’<br>git config –global user.email ‘你的邮箱’<br>git config –global user.password ‘你的 git 密码’</p>
<p>查看 git 的配置<br>git config -l</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 12 浮动</title>
    <url>/2021/03/20/11%20%E6%B5%AE%E5%8A%A8/</url>
    <content><![CDATA[<h2 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h2><span id="more"></span>

<h3 id="浮动属性"><a href="#浮动属性" class="headerlink" title="浮动属性"></a>浮动属性</h3><p>语法<br><code>float:left|right|none;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.wrap</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box3</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1 box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2 box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3 box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>当父元素的宽度&gt;450px 时，三个元素共行；<br>宽度&lt;450px 时，第三个元素被换到第二行<br>宽度&lt;300px 时，三个元素各占一行</p>
<h3 id="可能被阻挡的浮动元素"><a href="#可能被阻挡的浮动元素" class="headerlink" title="可能被阻挡的浮动元素"></a>可能被阻挡的浮动元素</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.wrap</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box3</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box4</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1 box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2 box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3 box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box4 box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="浮动的影响"><a href="#浮动的影响" class="headerlink" title="浮动的影响"></a>浮动的影响</h3><p>文档流</p>
<p>元素一般存在两种情况：一种是普通流(文档流)，另一种叫脱离文档流(脱标)。</p>
<p>普通流</p>
<blockquote>
<p>普通流又称为常规流，文档流。是文档可显示独享排列时所占用的位置。可以将整个网页看成一个文档，这个文档自上而下分成一行一行的，并且在每行中按照从左到右的顺序，依次排放元素.</p>
</blockquote>
<p>脱离文档流</p>
<blockquote>
<p>设置了浮动，绝对定位的元素会脱离文档流，此时该元素不存在普通流中，而是飞到了普通元素的上方，就像云层一样。<br>由于这种特性，导致本属于普通流的元素设置浮动或者定位后，其父元素内部不存在其他元素。就到导致父元素高度为 0 的现象，这个现象就叫高度塌陷</p>
</blockquote>
<h3 id="浮动元素对父元素高度的影响"><a href="#浮动元素对父元素高度的影响" class="headerlink" title="浮动元素对父元素高度的影响"></a>浮动元素对父元素高度的影响</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.wrap</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* height: 500px; */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="浮动元素对兄弟元素布局的影响"><a href="#浮动元素对兄弟元素布局的影响" class="headerlink" title="浮动元素对兄弟元素布局的影响"></a>浮动元素对兄弟元素布局的影响</h3><p>浮动元素会对兄弟元素造成影响，但是仅仅只针对他后面的兄弟元素，并不会对前面的元素布局造成影响。</p>
<h3 id="清除浮动的影响"><a href="#清除浮动的影响" class="headerlink" title="清除浮动的影响"></a>清除浮动的影响</h3><p>对与浮动元素或者浮动元素的父元素我们需要进行一些微操，微操的目的就是为了清除浮动</p>
<p>clear 属性<br>用于清除浮动，规定元素的那一侧不允许存在其他浮动元素<br><code>clear:both|left|right|none;</code></p>
<ul>
<li>both 元素左右两侧都不允许出现浮动元素</li>
<li>left 左侧不允许出现浮动元素</li>
<li>right 右侧不允许出现浮动元素</li>
<li>none 默认值 允许两侧出现浮动元素</li>
</ul>
<h4 id="为兄弟元素清除浮动影响"><a href="#为兄弟元素清除浮动影响" class="headerlink" title="为兄弟元素清除浮动影响"></a>为兄弟元素清除浮动影响</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.wrap</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.con1</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.con2</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.con3</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 清除con2浮动带来的影响 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">clear</span>: left;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;con1&quot;</span>&gt;</span>第1个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;con2&quot;</span>&gt;</span>第2个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;con3&quot;</span>&gt;</span>第3个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>并非所有浮动元素的兄弟元素都需要清除浮动，只需要对浮动元素的下一个兄弟元素设置清除浮动即可让所有的元素恢复正常布局<br>如果希望在浮动元素和正常元素之间有一定的间距，给正常元素设置时会失效(会与上方空白处叠加)，now 可以给浮动元素设置 margin 值即可</p>
</blockquote>
<h4 id="空标签清除浮动"><a href="#空标签清除浮动" class="headerlink" title="空标签清除浮动"></a>空标签清除浮动</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.clear</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;clear&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>虽然空标签清除浮动通俗易懂，操作方便，但是会添加大量的无意义标签，不利于后期维护.</p>
<h4 id="为父元素设置overflow-hidden"><a href="#为父元素设置overflow-hidden" class="headerlink" title="为父元素设置overflow:hidden;"></a>为父元素设置<code>overflow:hidden;</code></h4><p>原理是在父元素中创建了一个 BFC(块级格式化上下文)</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="利用伪元素清除浮动"><a href="#利用伪元素清除浮动" class="headerlink" title="利用伪元素清除浮动"></a>利用伪元素清除浮动</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* .box::after &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        content: &#x27;&#x27;;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        clear: both;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        display: block;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        height: 0;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      &#125; */</span></span></span><br><span class="line"><span class="language-css">      <span class="comment">/* 实际开发 往往专门 封装一个类用来清除浮动 */</span></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box clearfix&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>浮动的练习 1-分页器</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">ul</span>,</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">a</span><span class="selector-class">.next</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">a</span><span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>9<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span>下一页 <span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>浮动的练习 2</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.wrap</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">1190px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: purple;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">290px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.item</span><span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">370px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.item</span><span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">180px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* margin负值的应用 */</span></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-right</span>: -<span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* .item:nth-child(4),</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      .item:nth-child(6) &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        margin-right: 0px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      &#125; */</span></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>浮动的练习 3</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.wrap</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">1100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.wrap</span> <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">221px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">167px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid blue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-right</span>: -<span class="number">1px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.wrap</span> <span class="selector-class">.item</span><span class="selector-class">.special</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">220px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item special&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 15 动画与形变</title>
    <url>/2021/03/20/14%20%E5%8A%A8%E7%94%BB%EF%BC%8C%E5%BD%A2%E5%8F%98/</url>
    <content><![CDATA[<h2 id="元素的显示隐藏"><a href="#元素的显示隐藏" class="headerlink" title="元素的显示隐藏"></a>元素的显示隐藏</h2><span id="more"></span>

<p>隐藏元素<br><code>display:none;</code> 从页面布局中消失<br><code>visibility:hidden;</code> 该元素还是会占位<br><code>opacity:0;</code> 该元素还是会占位<br><code>宽高设为0</code>该元素还是会占位<br><code>设置绝对定位并移动到页面不可见的区域</code> 该元素还是会占位</p>
<h2 id="文本溢出处理"><a href="#文本溢出处理" class="headerlink" title="文本溢出处理"></a>文本溢出处理</h2><p><code>overflow:visible|hidden|scroll|auto</code></p>
<ul>
<li>visible 默认值，溢出的部份可见</li>
<li>hidden 溢出部份不可见</li>
<li>scroll 溢出的部份会被裁剪但是可以通过滚动条看见</li>
<li>auto 没有溢出正常显示，有溢出就显示为滚动条</li>
</ul>
<h3 id="1-单行"><a href="#1-单行" class="headerlink" title="1.单行"></a>1.单行</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">h2</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: solid;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 第一步 把超出的部份隐藏掉 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 第二步 强制文本不换行 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">white-space</span>: nowrap;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 第三步 溢出部份显示为省略号 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-overflow</span>: ellipsis;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>疯狂星期四，谁请我吃<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-多行"><a href="#2-多行" class="headerlink" title="2.多行"></a>2.多行</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  * &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">h2</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100vw</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: solid;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 第一步 隐藏溢出部份 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 第二步 设置元素为弹性伸缩盒 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: -webkit-box;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 第三步 设置盒子纵向排列 */</span></span></span><br><span class="line"><span class="language-css">    -webkit-box-orient: vertical;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 第四步 设置显示多少行以后将内容隐藏*/</span></span></span><br><span class="line"><span class="language-css">    -webkit-line-clamp: <span class="number">3</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>很多文字<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h2><p>css3 渐变 可以让我们再两个或者多个指定的颜色之间显示平稳的过渡</p>
<h3 id="线性渐变-从上到下-默认"><a href="#线性渐变-从上到下-默认" class="headerlink" title="线性渐变-从上到下(默认)"></a>线性渐变-从上到下(默认)</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="comment">/* skyblue是开始的颜色 pink是结束的颜色*/</span></span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(skyblue, pink);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="线性渐变-从左到右"><a href="#线性渐变-从左到右" class="headerlink" title="线性渐变-从左到右"></a>线性渐变-从左到右</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right, skyblue, pink);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="线性渐变-对角"><a href="#线性渐变-对角" class="headerlink" title="线性渐变-对角"></a>线性渐变-对角</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to bottom right, skyblue, pink);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="重复的线性渐变"><a href="#重复的线性渐变" class="headerlink" title="重复的线性渐变"></a>重复的线性渐变</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">repeating-linear-gradient</span>(</span><br><span class="line">    <span class="number">10deg</span>,</span><br><span class="line">    red,</span><br><span class="line">    yellow <span class="number">10%</span>,</span><br><span class="line">    green <span class="number">20%</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="径向渐变"><a href="#径向渐变" class="headerlink" title="径向渐变"></a>径向渐变</h3><p>可以指定渐变的中心，渐变的形状，大小</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(形状 大小 位置, 颜色, ..., 颜色);</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">        默认是根据盒子的宽高</span></span><br><span class="line"><span class="comment">        circle是圆</span></span><br><span class="line"><span class="comment">        ellipse椭圆</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">  <span class="comment">/* 设置位置就不能设置形状 */</span></span><br><span class="line">  <span class="comment">/* closest-side关闭渐变的位置</span></span><br><span class="line"><span class="comment">        第一个值x轴 第二个值y轴 */</span></span><br><span class="line">  <span class="comment">/*farthest-side   </span></span><br><span class="line"><span class="comment">        第一个值x轴 第二个值y轴</span></span><br><span class="line"><span class="comment">        它往往会放大我们的渐变</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(</span><br><span class="line">    farthest-side at <span class="number">80%</span> <span class="number">55%</span>,</span><br><span class="line">    red,</span><br><span class="line">    green,</span><br><span class="line">    black</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="形变-transform"><a href="#形变-transform" class="headerlink" title="形变 transform"></a>形变 transform</h2><h3 id="1-rotate-旋转"><a href="#1-rotate-旋转" class="headerlink" title="1. rotate 旋转"></a>1. rotate 旋转</h3><p><code>transform: rotate(30deg);</code><br>旋转是以顺时针方向来旋转，默认以元素本身为旋转中心</p>
<ul>
<li>当值为+，以顺时针方向</li>
<li>当值为负值，逆时针</li>
</ul>
<blockquote>
<p>如果角度大于 360 度，将按照 360 的余数的角度旋转</p>
</blockquote>
<p>形变中心 transform-origin<br><code>transform-origin:left top;</code><br>他的属性可以使用如下的值(x,y)</p>
<ul>
<li>left right top bottom center</li>
<li>20% 60%</li>
<li>10px 400px</li>
</ul>
<h3 id="2-平移-translate"><a href="#2-平移-translate" class="headerlink" title="2.平移 translate"></a>2.平移 translate</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">100px</span>, <span class="number">100px</span>);</span><br><span class="line"><span class="comment">/* 水平移动50px */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">50px</span>);</span><br><span class="line"><span class="comment">/* 垂直移动 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">50px</span>);</span><br></pre></td></tr></table></figure>

<h3 id="3-缩放-scale"><a href="#3-缩放-scale" class="headerlink" title="3.缩放 scale"></a>3.缩放 scale</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(x, y);</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scaleX</span>();</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scaleY</span>();</span><br></pre></td></tr></table></figure>

<p>表示缩放但是不需要单位，1 原始大小，&lt;1 缩小，&gt;1 放大</p>
<h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h3><ol>
<li>translateX 中的 x 是不是一定要大写？<br>可以不大写，但是建议大写，主要是方便开发人员查看</li>
<li>对于 rotate(0deg)可以不可以写成 rotate(0)?<br>原则上来说可以简写，但是在 firefox 的部分版本中无法读取没有单位的角度值，出于兼容性的考虑，不要省略单位</li>
<li>变形的顺序会不会影响结果？<br>可能会有影响，所以在日常开发中，需要先考虑好变形的顺序，防止因为变形产生莫名其妙的问题</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.a</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100px</span>) <span class="built_in">rotate</span>(<span class="number">30deg</span>);</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.b</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">30deg</span>) <span class="built_in">translateX</span>(<span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span>&gt;</span>456<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="过渡-transition"><a href="#过渡-transition" class="headerlink" title="过渡 transition"></a>过渡 transition</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>一个元素在不同样式之间的变化自动添加了 补间动画。即在一段时间内属性值从一个变成另一个，让整个变化过程更加丝滑 流畅</p>
<h3 id="过渡基本属性"><a href="#过渡基本属性" class="headerlink" title="过渡基本属性"></a>过渡基本属性</h3><ul>
<li>transition-porperty 过渡的属性名称 比如 color，实际往往直接写 all</li>
<li>transition-duration 过渡的时间 默认是 0s，必须添加 s 的单位</li>
<li>transition-timing-function 过渡方式<ul>
<li>linear 线性过渡</li>
<li>ease 平滑过渡 逐渐变慢</li>
<li>ease-in 由慢到快</li>
<li>ease-out 由快到慢</li>
<li>ease-in-out 先加速后减速</li>
<li>bezier 值 <a href="https://cubic-bezier.com/#.17,.67,.83,.67">在线贝塞尔曲线</a></li>
</ul>
</li>
</ul>
<h3 id="transition-合写属性"><a href="#transition-合写属性" class="headerlink" title="transition 合写属性"></a>transition 合写属性</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transition</span>: 过渡的属性||过渡的时间||过渡方式||过渡的延迟时间;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="comment">/* transition-property: all;</span></span><br><span class="line"><span class="comment">        transition-duration: 0.6s;</span></span><br><span class="line"><span class="comment">        transition-timing-function: ease; */</span></span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.6s</span> ease;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><h3 id="定义动画"><a href="#定义动画" class="headerlink" title="定义动画"></a>定义动画</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> 动画名称 &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="关键帧选择符"><a href="#关键帧选择符" class="headerlink" title="关键帧选择符"></a>关键帧选择符</h3><p>from-0%<br>to-100%<br>如果关键帧属性值一样，也可以用,一起书写</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> 动画名称 &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">25%</span>,</span><br><span class="line">  <span class="number">75%</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="动画的属性"><a href="#动画的属性" class="headerlink" title="动画的属性"></a>动画的属性</h3><ol>
<li>name 必填 动画名称</li>
<li>duration 必填 动画时长</li>
<li>timing-function 默认是 ease 也可以用类似过渡的里面的贝塞尔值</li>
<li>delay 动画的延迟时间</li>
<li>iteration-count 循环的次数 默认是 1 infinite 无限次</li>
<li>direction 动画是否反向运动 normal 正常 alternate 反向</li>
<li>fill-mode 最后动画停住时 是运行还是暂停 running paused</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="keyword">@keyframes</span> move &#123;</span></span><br><span class="line"><span class="language-css">        <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="number">25%</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">left</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="number">50%</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">left</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">top</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="number">75%</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">top</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation</span>: move <span class="number">1s</span> ease <span class="number">0s</span> infinite alternate;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="逐帧动画（步进动画）"><a href="#逐帧动画（步进动画）" class="headerlink" title="逐帧动画（步进动画）"></a>逐帧动画（步进动画）</h3><p>利用 timing-function 的特殊值<br>steps(数字)，数字代表这个动画有多少帧</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.rocket</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">149px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">249px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;./rocket.png&#x27;</span>);</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="keyword">@keyframes</span> fly &#123;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">from</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">background-position</span>: -<span class="number">148px</span> <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">to</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">background-position</span>: -<span class="number">892px</span> <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.rocket</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation</span>: fly <span class="number">0.3s</span> <span class="built_in">steps</span>(<span class="number">5</span>) <span class="number">0s</span> infinite;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;rocket&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/2023-03-10-10-55-14.png"></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 16 flex布局</title>
    <url>/2021/03/20/15%20flex/</url>
    <content><![CDATA[<h1 id="flex"><a href="#flex" class="headerlink" title="flex"></a>flex</h1><span id="more"></span>

<h3 id="Flexbox-翻译为弹性盒子"><a href="#Flexbox-翻译为弹性盒子" class="headerlink" title="Flexbox 翻译为弹性盒子"></a>Flexbox 翻译为弹性盒子</h3><ul>
<li>弹性盒子是一种用于按行或者按列布局元素的一维的布局方法;</li>
<li>元素可以膨胀以填充额外的空间，收缩以适应更小的空间</li>
<li>通常我们用 flexbox 来布局的方案称之为 flex 布局(flex layout)<br><img src="/2023-03-10-10-55-14.png"></li>
</ul>
<h3 id="flex-布局的重要概念"><a href="#flex-布局的重要概念" class="headerlink" title="flex 布局的重要概念"></a>flex 布局的重要概念</h3><p>两个重要的概念</p>
<ul>
<li>开启了 flex 布局的元素叫 flex container</li>
<li>flex container 里面的<strong>直接</strong>子元素叫做 flex item</li>
</ul>
<p>当 flex container 中的子元素变成 flex item 时，具备以下一些特点</p>
<ul>
<li>flex item 的布局将受到 flex container 的属性来控制</li>
<li>flex item 不再严格区分块级&#x2F;行内级元素</li>
<li>flex item 默认情况下是包裹内容的，但是可以设置宽高</li>
</ul>
<p>设置 display 属性为 flex 或者 inline-flex 可以成为 flex container</p>
<h2 id="flex-的属性"><a href="#flex-的属性" class="headerlink" title="flex 的属性"></a>flex 的属性</h2><ul>
<li>flex container 上的属性<ol>
<li>flex-flow</li>
<li>flex-direction</li>
<li>flex-wrap</li>
<li>justify-content</li>
<li>align-items</li>
<li>align-content</li>
</ol>
</li>
<li>flex item 上的属性<ol>
<li>flex-grow</li>
<li>flex-shrink</li>
<li>flex-basis</li>
<li>order</li>
<li>align-self</li>
<li>flex</li>
</ol>
</li>
</ul>
<h2 id="flex-direction-主轴方向"><a href="#flex-direction-主轴方向" class="headerlink" title="flex-direction 主轴方向"></a>flex-direction 主轴方向</h2><p>flex items 默认都是沿着主轴方向从 main start 开始往 main end 排布</p>
<ul>
<li>row(默认值)</li>
<li>row-reverse 行反转</li>
<li>column 列排布</li>
<li>column-reverse 列反转</li>
</ul>
<h2 id="flex-wrap"><a href="#flex-wrap" class="headerlink" title="flex-wrap"></a>flex-wrap</h2><p>flex-wrap 决定了 flex container 是一行还是多行</p>
<ul>
<li>nowrap 默认 单行</li>
<li>wrap 多行</li>
<li>wrap-reverse 多行而且 cross start 和 cross end 反转</li>
</ul>
<h3 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h3><p>flex-flow 是 flex-direction 和 flex-wrap 的简写</p>
<ul>
<li>任何顺序，而且两个可以随便省略</li>
</ul>
<h3 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h3><p>justify-content 决定了 flex items 在 main axis 上的排列方式</p>
<ul>
<li>flex-start 默认值 与 main start 对齐</li>
<li>flex-end 与 main end 对齐</li>
<li>center 居中对齐</li>
<li>space-between<ul>
<li>flex items 之间距离相等</li>
<li>与 main start ，main end 两端对齐</li>
</ul>
</li>
<li>space-evenly<ul>
<li>flex items 之间距离相等</li>
<li>flex item 与 main start，main end 之间的距离 等于 flex item 之间的距离</li>
</ul>
</li>
<li>space-around<ul>
<li>flex items 之间距离相等</li>
<li>flex item 与 main start，main end 之间的距离 等于 flex item 之间的距离的一半</li>
</ul>
</li>
</ul>
<h3 id="align-items"><a href="#align-items" class="headerlink" title="align-items"></a>align-items</h3><p>align-items 用于控制交叉轴上的排布方式</p>
<ul>
<li>normal 在弹性布局中和 stretch 一样</li>
<li>stretch 当 flex item 在 cross axis 方向上的 size 为 auto 时 会自动拉伸填充 flex container</li>
<li>flex-start(默认)：与 cross start 对齐</li>
<li>flex-end：与 cross end 对齐</li>
<li>center 居中对齐</li>
<li>baseline 基线对齐</li>
</ul>
<h3 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h3><p>align-content 决定了多行的 flex items 在 cross axis 上的对齐方式，用法和 justify-content 类似</p>
<ul>
<li>stretch（默认）：与 align-items 的很相似</li>
<li>flex-start：与 cross start 对齐</li>
<li>flex-end：与 cross end 对齐</li>
<li>center 居中对齐</li>
<li>space-between</li>
<li>space-around</li>
<li>space-evenly</li>
</ul>
<h3 id="order"><a href="#order" class="headerlink" title="order"></a>order</h3><p>order 决定了元素的顺序</p>
<ul>
<li>默认是 0</li>
<li>可以设置任意整数，值越小排在越前面</li>
</ul>
<h3 id="align-self"><a href="#align-self" class="headerlink" title="align-self"></a>align-self</h3><p>flex items 可以通过 align-self 属性来覆盖 flex container 容器设置的 align-items</p>
<ul>
<li>auto(默认):遵循容器设置的值</li>
<li>其余的值和 align-items 一样</li>
</ul>
<h3 id="flex-grow"><a href="#flex-grow" class="headerlink" title="flex-grow"></a>flex-grow</h3><p>flex-grow 决定了 flex items 是如何拉伸的</p>
<ul>
<li>可以设置任意的非负的数字(正整数，正小数，0) 默认是 0 不成长</li>
<li>当 flex container 在 main axis 上有剩余的 size 时，flex-grow 才能生效，如果所有 flex item 的 flex-grow 属性总和 sum 超过了 1，那么每个 flex items 扩展的 size 为</li>
</ul>
<p><code>flex container的剩余size*flex-grow/sum</code></p>
<h3 id="flex-shrink"><a href="#flex-shrink" class="headerlink" title="flex-shrink"></a>flex-shrink</h3><p>flex-shrink 决定了 flex items 如何缩小</p>
<ul>
<li>可以设置任意的非负的数字(正整数，正小数，0) 默认是 1 可以被压缩</li>
<li>当 flex items 在 main axis 上超过了 flex container 的 size flex-shrink 才会生效</li>
</ul>
<p>如果所有的 flex items 的总和超过 1，每个 flex items 它收缩的 size 为</p>
<p><code>flex items超出的container的size*收缩比例/所有flex items的flex-shrink的之和</code></p>
<p>flex items 收缩后 最终展现出来的宽度不能小于 min-width</p>
<h3 id="flex-basis"><a href="#flex-basis" class="headerlink" title="flex-basis"></a>flex-basis</h3><p>用来设置 flex items 在 main axis 方向上的 base size</p>
<ul>
<li>auto(默认值) 、具体的宽度数值</li>
</ul>
<p>决定 flex items 最终的宽度的影响因素有多个,优先级从高到低</p>
<ul>
<li>max-width\min-width\max-height\min-height</li>
<li>flex-basis</li>
<li>width&#x2F;height</li>
<li>内容本身的 size</li>
</ul>
<h3 id="flex-1"><a href="#flex-1" class="headerlink" title="flex"></a>flex</h3><p>是 flex-grow、flex-shrink、flex-basis 的缩写属性</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">flex</span> =</span><br><span class="line">  <span class="attribute">none</span> |</span><br><span class="line">  <span class="selector-attr">[ &lt;<span class="string">&#x27;flex-grow&#x27;</span>&gt; &lt;<span class="string">&#x27;flex-shrink&#x27;</span>&gt;? || &lt;<span class="string">&#x27;flex-basis&#x27;</span>&gt; ]</span></span><br></pre></td></tr></table></figure>

<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex"></a></p>
<p>flex:1<br>grow 为 1 shrink 为 0 basis 默认</p>
<h3 id="flex-布局-solution"><a href="#flex-布局-solution" class="headerlink" title="flex 布局 solution"></a>flex 布局 solution</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: space-around;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">350px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* height: 500px; */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">110px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">140px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.container</span> &gt; <span class="selector-tag">i</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">110px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* background-color: #fff; */</span></span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 添加i的个数 是需要额外补充上去的元素个数 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/itemRandomColor.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 17 scss安装与使用</title>
    <url>/2021/03/20/16%20scss/</url>
    <content><![CDATA[<h2 id="scss"><a href="#scss" class="headerlink" title="scss"></a>scss</h2><span id="more"></span>

<h3 id="安装-scss"><a href="#安装-scss" class="headerlink" title="安装 scss"></a>安装 scss</h3><ol>
<li>mac<br>安装前检查版本 更新</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gem update --system</span><br></pre></td></tr></table></figure>

<p>安装走起</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gem install sass</span><br><span class="line">gem install compass</span><br></pre></td></tr></table></figure>

<p>检查是否安装成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sass -v</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果上述命令不提示则输入下方命令</span></span><br><span class="line">sass --version</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>windows</li>
</ol>
<p>要先安装 Ruby 环境<br><a href="https://rubyinstaller.org/downloads/"></a><br>务必以管理员身份运行安装包，安装的时候注意勾选<code>Add Ruby executables to your PATH</code>,将 Rub<br>y 添加到环境变量<br>安装完成后，在 cmd 运行以下命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ruby -v</span><br></pre></td></tr></table></figure>

<p>正确显示版本号以后 安装 sass</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gem install sass</span><br><span class="line">gem install compass</span><br></pre></td></tr></table></figure>

<p>检查是否安装成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sass -v</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果上述命令不提示则输入下方命令</span></span><br><span class="line">sass --version</span><br></pre></td></tr></table></figure>

<h3 id="单文件编译"><a href="#单文件编译" class="headerlink" title="单文件编译"></a>单文件编译</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scss --watch input.scss:output.css</span><br></pre></td></tr></table></figure>

<p>这句话的意思是用 scss 自动监听当前文件夹下的<strong>input.scss</strong>,并且编译成<br><strong>output.css</strong><br>如果要编译 scss 文件夹里面的 scss 文件并输出到 css 文件夹下可以这样写</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scss --watch scss/input.scss:css/output.css</span><br></pre></td></tr></table></figure>

<p>多个 scss 文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scss --watch scss:css</span><br></pre></td></tr></table></figure>

<p>实际开发使用<code>live sass compiler</code>插件帮助我们编译并且自动生成到对应的文件夹下，此插件有 bug 不能有中文路径</p>
<h3 id="导入其他样式文件"><a href="#导入其他样式文件" class="headerlink" title="导入其他样式文件"></a>导入其他样式文件</h3><p><code>@import &quot;文件名.scss&quot;</code></p>
<h3 id="忽略编译"><a href="#忽略编译" class="headerlink" title="忽略编译"></a>忽略编译</h3><p>以<code>_</code>开头的文件，将不会被编译，另外在引入这种文件的时候，可以不带上下划线，而且 3.7.4 版本的 scss 可以不带文件后缀名.</p>
<h3 id="scss-五大基础语法"><a href="#scss-五大基础语法" class="headerlink" title="scss 五大基础语法"></a>scss 五大基础语法</h3><h4 id="1-变量"><a href="#1-变量" class="headerlink" title="1. 变量"></a>1. 变量</h4><p><code>$变量名:变量值;</code></p>
<h4 id="2-嵌套"><a href="#2-嵌套" class="headerlink" title="2.嵌套"></a>2.嵌套</h4><p>可以按照 html 的结构来嵌套</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$bgc</span>: <span class="number">#87ceeb</span>;</span><br><span class="line"><span class="variable">$w</span>: <span class="number">1000px</span>;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$w</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1000px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">$bgc</span>;</span><br><span class="line">  &amp; &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.son</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">    <span class="comment">// &amp;代表的是父元素</span></span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="variable">$bgc</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-继承"><a href="#3-继承" class="headerlink" title="3.继承"></a>3.继承</h4><p>允许一个选择器继承另一个选择器的属性<br>通过<code>@extend 选择器名</code></p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$bgc</span>: <span class="number">#87ceeb</span>;</span><br><span class="line"><span class="variable">$w</span>: <span class="number">1000px</span>;</span><br><span class="line"><span class="selector-class">.common-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">$bgc</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$w</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1000px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">$bgc</span>;</span><br><span class="line">  &amp; &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.son</span> &#123;</span><br><span class="line">    <span class="keyword">@extend</span> .common-wrap;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>占位符<code>%</code><br>用占位符声明的代码，如果不被<code>@extend</code>调用就不回被编译</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">%common &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.son</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> %common;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-Mixin-混合器"><a href="#4-Mixin-混合器" class="headerlink" title="4.Mixin 混合器"></a>4.Mixin 混合器</h4><p>需要先声明再使用</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> gColor &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#87ceeb</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="keyword">@include</span> gColor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以传递参数</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> gColor(<span class="variable">$color</span>: pink, <span class="variable">$size</span>: <span class="number">20px</span>) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">$color</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="variable">$size</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="keyword">@include</span> gColor(skyblue, <span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 单独改变size</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="keyword">@include</span> gColor(<span class="variable">$size</span>: <span class="number">50px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>还可以传递样式片段</p>
<p>在 mixin 中添加<code>@content</code>语句即可，后续传递的代码片段就会取代<code>@content</code>，出现在对应的位置</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> common &#123;</span><br><span class="line">  <span class="attribute">color</span>: pink;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="keyword">@content</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> common &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="5-自定义函数"><a href="#5-自定义函数" class="headerlink" title="5.自定义函数"></a>5.自定义函数</h4><p>需要通过<code>@function</code>来声明一个函数，然后通过<code>@return</code>来返回值</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@function</span> sum(<span class="variable">$sumA</span>, <span class="variable">$sumB</span>) &#123;</span><br><span class="line">  <span class="keyword">@return</span> <span class="variable">$sumA</span> + <span class="variable">$sumB</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="built_in">sum</span>(<span class="number">10px</span>, <span class="number">30px</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="问题，用-mixin-还是用-extend"><a href="#问题，用-mixin-还是用-extend" class="headerlink" title="问题，用@mixin 还是用@extend?"></a>问题，用@mixin 还是用@extend?</h4><ol>
<li>如果某段样式代码不需要用到自定义参数，那可以考虑继承</li>
<li>mixin 和 extend 的区别</li>
</ol>
<p>extend 的编译结果</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.button-b</span>,</span><br><span class="line"><span class="selector-class">.button-a</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">&#125; <span class="comment">/*# sourceMappingURL=index.css.map */</span></span><br></pre></td></tr></table></figure>

<p>mixin 的结果</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.button-a</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.button-b</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以，在使用继承时，我们首先要保证不需要传递参数，然后要确保继承的元素最好是同一类型的。那么用<br><code>@extend</code>来创造<strong>DRY</strong>代码是一个不错的选择，其他情况下，还是用<code>@mixin</code></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World!我的第一篇blog</title>
    <url>/2021/03/20/b01%20%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87blog&amp;%E5%BB%BA%E7%AB%99%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<h2 id="写在最前面"><a href="#写在最前面" class="headerlink" title="写在最前面"></a>写在最前面</h2><p>今天肝了一天总算把一个博客的基本框架支棱起来了，目前还需要修改一些网站的样式：</p>
<ol>
<li>选择网站的主题色，采用6:3:1的方法选择</li>
<li>为网站选择一个logo，准备尝试一下下ai设计</li>
<li>添加背景图</li>
<li>掌握md语法输出文章</li>
</ol>
<h2 id="总结一下建站的心得"><a href="#总结一下建站的心得" class="headerlink" title="总结一下建站的心得"></a>总结一下建站的心得</h2><ol>
<li>总花费：8元</li>
<li>耗时6个钟<span id="more"></span></li>
</ol>
<p>我选择的教程是知乎上<strong>枫叶</strong>大神的教程，<br><a href="https://zhuanlan.zhihu.com/p/102592286">枫叶大佬的知乎文章</a>共分为8个章节，下面我根据章节来总结下遇到的坑。</p>
<h3 id="第一节：注册github"><a href="#第一节：注册github" class="headerlink" title="第一节：注册github"></a>第一节：注册github</h3><p>这一节并不难，只需要一个魔法上网连接到github（有时候可以裸连），然后就按照教程一步步走即可。</p>
<h3 id="第二节：安装git"><a href="#第二节：安装git" class="headerlink" title="第二节：安装git"></a>第二节：安装git</h3><p>按教程的一步步走，建议在非系统盘中安装</p>
<h3 id="第三节：绑定github仓库"><a href="#第三节：绑定github仓库" class="headerlink" title="第三节：绑定github仓库"></a>第三节：绑定github仓库</h3><p>绑定github命令，建议使用下面的办法</p>
<ol>
<li><p>本地在非系统盘中新建文件夹用于克隆远程仓库，新建完成后右键，点击git bash here,然后输入以下命令：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">git clone</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这个命令的作用是克隆github上远程的仓库下来</p>
</blockquote>
</li>
<li><p>克隆下来后打开vscode,左边工作区添加刚刚克隆的文件夹至资源区，然后新建文件测试能否传回到仓库里。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add . </span><br><span class="line">&lt;!-- 把当前仓库的所有内容添加到提交队列 --&gt;</span><br><span class="line">   </span><br><span class="line">git commit -m &#x27;你的备注&#x27;</span><br><span class="line">&lt;!-- 这个是将刚刚的队列提交到缓存区，可以修改&#x27;你的备注&#x27;为你想说的话作为提交时的备注 --&gt;</span><br><span class="line">   </span><br><span class="line">git push</span><br><span class="line">&lt;!-- 开始提交！ --&gt;</span><br></pre></td></tr></table></figure>
<p>首次提交会<strong>弹出github的登录页面</strong>，按照链接的教程登录一下即可。成功后在远程仓库就可以看到你刚刚上传的测试文件了。</p>
</li>
</ol>
<h3 id="第四节：域名的购买"><a href="#第四节：域名的购买" class="headerlink" title="第四节：域名的购买"></a>第四节：域名的购买</h3><ul>
<li>推荐使用阿里云，域名比较便宜，如果有钱的话可以使用.com域名，没有的话选择便宜的即可，按照教程上传<strong>身份证</strong>和<strong>相关信息</strong>审核，大约两个半小时可以审核完成。</li>
<li>域名选择尽量选择规范的好记的域名，方便他人访问你的博客。</li>
</ul>
<h3 id="第五节：下载node-js以及hexo"><a href="#第五节：下载node-js以及hexo" class="headerlink" title="第五节：下载node.js以及hexo"></a>第五节：下载node.js以及hexo</h3><p>这里有提到这种类型的博客采用的是hexo框架搭建的，目前我刚刚接触，还不是很熟悉。</p>
<ul>
<li>首先需要注意的是：</li>
<li><strong>github已经将主分支名字改成main，而不是原来的master</strong>，如果你没有改的话，将会新建一个master分支来部署，则会直接导致后面的步骤失败！！</li>
<li>补救方法：去github上把master分支删掉，重新正确跑一次代码即可。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repository: github.com/fengye97/fen #你的仓库地址</span><br><span class="line">branch: main #在做到这一步的时候,记得把master改成main</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="第六节：解析域名"><a href="#第六节：解析域名" class="headerlink" title="第六节：解析域名"></a>第六节：解析域名</h3><p>根据教程走，如果你的域名已经正确绑定，但是提示ip地址不对，或者dns错误，可以尝试以下方法：</p>
<blockquote>
<p>“可以试试在解析中多加几条记录 A @ 185.199.108.153 和 A @ 185.199.109.153 和 A @ 185.199.110.153 和 A @ 185.199.111.153 这就相当于把所有可能的都加上了，因为我的github上的IP老是在这几个里面变来变去。如果还不行的，就把这篇文章做的全部删除，删除域名解析，先看一下上一篇文章的最后的结果能不能展现出来，如果可以就再把这篇的做一遍，还是不行的话就等一会就好了”<br>—来自知乎@来搞笑的</p>
</blockquote>
<h3 id="第七节：样式修改，写博文等等"><a href="#第七节：样式修改，写博文等等" class="headerlink" title="第七节：样式修改，写博文等等"></a>第七节：样式修改，写博文等等</h3><p>大佬的教程中没有提到如何写博文，我的目录：D:\02-blog\hexo\source_posts<br>就是在里面新增md文件，添加完后按hexo“三部曲”同步到github上。</p>
<ul>
<li>后续的样式更新如果遇到问题，我会再更新博客文章来记录。</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>博客编写</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 18 HTML补充知识</title>
    <url>/2021/03/20/17%20css%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h2 id="URL-地址"><a href="#URL-地址" class="headerlink" title="URL 地址"></a>URL 地址</h2><span id="more"></span>

<h3 id="认识-url"><a href="#认识-url" class="headerlink" title="认识 url"></a>认识 url</h3><ul>
<li>url 统一资源定位符(Uniform Resource Locator)</li>
<li>url 无非就是给定的独特资源在 web 上的地址<ul>
<li>每个有效的 url 都指向一个唯一的资源</li>
<li>这个资源可以是一个 html 页面，一个 css 文档，一副图像…</li>
</ul>
</li>
</ul>
<h3 id="URL-的格式"><a href="#URL-的格式" class="headerlink" title="URL 的格式"></a>URL 的格式</h3><ul>
<li>url 的标准格式如下:<ul>
<li><code>[协议类型]://[服务器地址]:[端口号]/[文件路径][文件名]?[查询]#[片段ID]</code></li>
<li><code>https://john.deo@www.example.com:123/forum/question/?tag=network&amp;news#top</code></li>
</ul>
</li>
</ul>
<h3 id="URI-的区别"><a href="#URI-的区别" class="headerlink" title="URI 的区别"></a>URI 的区别</h3><ul>
<li>URI:Uniform Resource Identifier 统一资源<strong>标识符</strong>，用于标识<strong>web 技术使用的逻辑或者物理资源</strong></li>
<li>URI 在某一个规则下能把一个资源独一无二的识别出来</li>
<li>URL 是 URI 的一个子集</li>
</ul>
<blockquote>
<p><strong>Locators are also identifiers</strong>,so every URL is also a URI,but there are URIs which are not URLs.</p>
</blockquote>
<h3 id="浏览器渲染流程"><a href="#浏览器渲染流程" class="headerlink" title="浏览器渲染流程"></a>浏览器渲染流程</h3><p><img src="/assets/2023-03-20-10-33-03.png" alt="2023-03-20-10-33-03.png"></p>
<h3 id="input-元素的扩展内容"><a href="#input-元素的扩展内容" class="headerlink" title="input 元素的扩展内容"></a>input 元素的扩展内容</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- autofocus自动聚焦 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;的防晒好大风&quot;</span> <span class="attr">autofocus</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- single  multiple支持多选--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>橘子<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>草莓<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- input的type值还有非常多的类型 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;color&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;date&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">min</span>=<span class="string">&quot;0&quot;</span> <span class="attr">max</span>=<span class="string">&quot;1000&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>placeholder 也是 html 新增的<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/input">mdn</a></p>
<h3 id="全局属性data"><a href="#全局属性data" class="headerlink" title="全局属性data-*"></a>全局属性<code>data-*</code></h3><ul>
<li>在 html5 中，新增的一种全局属性的格式<code>data-*</code>,用于自定义属性<ul>
<li>data 设置的属性可以在 js 中的 dom 操作通过<strong>dataset</strong>拿到</li>
<li>通常用于 html 和 js 数据之间的传递</li>
</ul>
</li>
<li>在小程序中，就是通过<code>data-*</code>来传递数据的，所以必须掌握</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">&quot;box&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">age</span>=<span class="string">&quot;18&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-name</span>=<span class="string">&quot;jack&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-age</span>=<span class="string">&quot;18&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-gender</span>=<span class="string">&quot;female&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> boxEl = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(boxEl.<span class="property">dataset</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="css-常见的函数扩展"><a href="#css-常见的函数扩展" class="headerlink" title="css 常见的函数扩展"></a>css 常见的函数扩展</h2><ul>
<li>在前面我们已经使用过了很多个 css 的函数<ul>
<li>比如 rgb&#x2F;rgba&#x2F;translate&#x2F;rotate&#x2F;scale&#x2F;…</li>
<li>css 函数通常可以帮助我们更加灵活的来编写样式的值</li>
</ul>
</li>
<li>var&#x2F;calc&#x2F;blur</li>
</ul>
<h3 id="css-函数-var"><a href="#css-函数-var" class="headerlink" title="css 函数 -var"></a>css 函数 -var</h3><ul>
<li>css 中可以自定义属性<ul>
<li>属性名需要以两个减号(–)开始</li>
<li>属性值可以是任何有效的 css 值</li>
</ul>
</li>
<li>我们可以通过 var 函数来使用</li>
<li>推荐将自定义属性定义在 html 中，往往使用<code>:root</code>选择器</li>
</ul>
<h3 id="css-函数-calc"><a href="#css-函数-calc" class="headerlink" title="css 函数 - calc"></a>css 函数 - calc</h3><ul>
<li>calc（）函数允许在声明 css 值的时候执行一些计算<ul>
<li>计算支持加减乘除</li>
<li><code>+</code> 和 <code>-</code> 运算符两边必须有空白字符</li>
<li>通常用来设置一些元素的尺寸或者位置</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  * &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.item1</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#f00</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.item2</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#0f0</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item item1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item item2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="css-函数-blur"><a href="#css-函数-blur" class="headerlink" title="css 函数 - blur"></a>css 函数 - blur</h3><ul>
<li>blur()函数将高斯模糊应用于输出图片或者元素<ul>
<li>blur(radius)</li>
<li>radius，模糊半径，值越大越模糊</li>
</ul>
</li>
<li>通常会和其他属性一起使用<ul>
<li>filter:应用于元素</li>
<li>backdrop-filter:为元素的后面添加模糊&#x2F;其他效果</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.cover</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* backdrop-filter: blur(10px); */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">        <span class="attr">src</span>=<span class="string">&quot;https://img0.baidu.com/it/u=242767209,2541342896&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=889&amp;h=500&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">alt</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cover&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a>媒体查询</h2><p>媒体查询的使用方式有三种</p>
<ul>
<li><p>方式 1:通过@media 和@import 使用不同的 css 规则(常用)<br><code> &lt;style&gt; /* import是可以结合媒体查询来使用的 */ @import url(./demo.css) (max-width: 800px); &lt;/style&gt;</code></p>
</li>
<li><p>方式 2:使用 media 属性为<style>,<link>,<source>和其他 html 元素指定特定的媒体类型<br><code>&lt;link rel=&quot;stylesheet&quot; media=&quot;screen and (max-width:800px)&quot; href=&quot;./demo.css&quot; /&gt;</code></p>
</li>
<li><p>方式 3:使用 Window.matchMedia()和 MediaQueryList.addListener()方法来测试和监听媒体的状态</p>
</li>
<li><p>最常用的就是通过@media 来设置不同的 css 规则，必须掌握</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">800px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="媒体查询-媒体类型（Media-types）"><a href="#媒体查询-媒体类型（Media-types）" class="headerlink" title="媒体查询-媒体类型（Media types）"></a>媒体查询-媒体类型（Media types）</h3><ul>
<li>all 所有设备</li>
<li>print 打印预览模式下</li>
<li>screen 屏幕</li>
<li>speech 语音合成器</li>
</ul>
<h3 id="媒体查询-逻辑操作符-logical-operators"><a href="#媒体查询-逻辑操作符-logical-operators" class="headerlink" title="媒体查询- 逻辑操作符(logical operators)"></a>媒体查询- 逻辑操作符(logical operators)</h3><ul>
<li>and：和，都要满足</li>
<li>not：取反</li>
<li>only：只有</li>
<li>,:多个</li>
</ul>
<p>例子</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 屏幕宽度大于500 小于700时 红色背景 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">500px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">700px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>练习：</p>
<blockquote>
<p>不要拿到手就做!!!</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">      320-375 font-size:15px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      375-414 18</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      414-480 21</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      大于480 24</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      */</span></span></span><br><span class="line"><span class="language-css">      <span class="comment">/* @media (min-width: 320px) and (max-width: 375px) &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        .box &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">          font-size: 15px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      @media (min-width: 375px) and (max-width: 414px) &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        .box &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">          font-size: 18px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      @media (min-width: 414px) and (max-width: 480px) &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        .box &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">          font-size: 21px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      @media (min-width: 480px) &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        .box &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">          font-size: 24px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      &#125; */</span></span></span><br><span class="line"><span class="language-css">      <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">320px</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">font-size</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">375px</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">414px</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">font-size</span>: <span class="number">21px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">480px</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="css-常见单位"><a href="#css-常见单位" class="headerlink" title="css 常见单位"></a>css 常见单位</h2><p>px 是一个长度单位，css 还有很多的长度单位</p>
<h3 id="绝对单位-Absolute-length-Units"><a href="#绝对单位-Absolute-length-Units" class="headerlink" title="绝对单位(Absolute length Units)"></a>绝对单位(Absolute length Units)</h3><ul>
<li>与其他任何东西都无关，通常被认为总是相同的大小</li>
<li>这些值大多数在用于打印时比用于屏幕输出时更加有用</li>
<li>唯一一个比较常用的就是 px(像素)</li>
</ul>
<h3 id="相对单位-Relative-length-Units"><a href="#相对单位-Relative-length-Units" class="headerlink" title="相对单位(Relative length Units)"></a>相对单位(Relative length Units)</h3><ul>
<li>相对长度单位相对于一些其他的东西</li>
<li>比如父元素的字体大小，或者视图端口的大小</li>
<li>经过一些仔细的规划，可以使得文本或者其他元素的大小与页面上的其他内容相对应</li>
</ul>
<ol>
<li>em:相对于父元素的字体大小</li>
<li>rem:相对于 html(root)的字体大小</li>
<li>vw&#x2F;vh:视口宽度&#x2F;高度的百分比</li>
</ol>
<h2 id="理解-pixel-DPR-PPI"><a href="#理解-pixel-DPR-PPI" class="headerlink" title="理解 pixel DPR PPI"></a>理解 pixel DPR PPI</h2><h3 id="当我们在聊-pixel，到底在聊什么？"><a href="#当我们在聊-pixel，到底在聊什么？" class="headerlink" title="当我们在聊 pixel，到底在聊什么？"></a>当我们在聊 pixel，到底在聊什么？</h3><ul>
<li>像素是影响图片显示的基本单位</li>
<li>pix 是英文单词 picture 的缩写，加上 element 元素得到的 pixel</li>
<li>有些时候又称为 pel</li>
</ul>
<h3 id="像素的不同分类"><a href="#像素的不同分类" class="headerlink" title="像素的不同分类"></a>像素的不同分类</h3><ol>
<li>设备像素(物理像素)<ul>
<li>是指显示器上面的真实像素，每个像素的大小是屏幕固有属性，屏幕出厂以后就不会改变了</li>
<li>我们购买手机或者显示器的时候，提到的设备分辨率就是设备的像素大小</li>
<li>比如 iphone 14 pro <strong>2556 x 1179 像素分辨率</strong> 指的就是设备像素</li>
</ul>
</li>
<li>设备独立像素(逻辑像素)<ul>
<li>如果面向开发者我们使用设备像素显示一个 100px 的宽度，那么不同的屏幕上显示效果会不一样。</li>
<li>开发者针对不同的屏幕很难进行较好的适配，编写程序必须了解用户的分辨率来进行开发</li>
<li>所以在设备像素上，操作系统为开发者进行了抽象，提供了逻辑像素的概念</li>
</ul>
</li>
<li>css 像素<ul>
<li>pixel 他默认情况下等同于设备独立像素</li>
</ul>
</li>
</ol>
<p><code>screen.height``screen.width</code></p>
<h2 id="DPR、PPI、DPI"><a href="#DPR、PPI、DPI" class="headerlink" title="DPR、PPI、DPI"></a>DPR、PPI、DPI</h2><h3 id="DPR-device-pixel-ratio"><a href="#DPR-device-pixel-ratio" class="headerlink" title="DPR device pixel ratio"></a>DPR device pixel ratio</h3><p>在 iphone4 的 retina 屏，<strong>一个逻辑像素的长度</strong>相当于<strong>两个物理像素</strong>，这个比例称为设备像素比<br><code>window.devicePixelRatio</code></p>
<p>PPI DPI 每英寸像素</p>
<h2 id="居中-熟练"><a href="#居中-熟练" class="headerlink" title="居中(熟练)"></a>居中(熟练)</h2><ol>
<li>flex</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>flex 给子项设置</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>绝对定位+translate</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>table-cell</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: table-cell;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置元素在垂直方向上的对齐方式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>grid 设置</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">        place-<span class="attribute">content</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li>grid 给子设置</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="7">
<li>给容器加伪元素<br>适合文字居中</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="8">
<li>四个方向的定位为 0 配合 auto</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>什么是移动端适配？<br>什么是 viewport？<br>移动端适配的方案？</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>前端开发学习笔记 02 html基本标签</title>
    <url>/2021/02/20/01%20html%E5%9F%BA%E6%9C%AC%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h2 id="html-基本标签"><a href="#html-基本标签" class="headerlink" title="html 基本标签"></a>html 基本标签</h2><span id="more"></span>

<h3 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h3><p>总共有 6 级标题</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>4<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>5<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>6<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h3><p>段落标签是一个块级标签，前后添加了换行符</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是另一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="文本标签-span"><a href="#文本标签-span" class="headerlink" title="文本标签 span"></a>文本标签 span</h3><p>文本标签是行内标签，他不会独占一行，而且会和其他的行内标签共行</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>这是行内的一段文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>这是行内另的一段文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="换行标签-br"><a href="#换行标签-br" class="headerlink" title="换行标签 br"></a>换行标签 br</h3><p>在需要换行的地方添加 br 标签即可换行<br>换行标签是一个单标签</p>
<ul>
<li>双标签:由一个开始标签和一个结束标签组成 比如<code>&lt;p&gt;&lt;/p&gt;</code></li>
<li>单标签:只有一个 <code>&lt;br/&gt;</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="分割线-hr"><a href="#分割线-hr" class="headerlink" title="分割线 hr"></a>分割线 hr</h3><p>分割上下文</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是另一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h3><p>在网页中插入图片用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h4><ul>
<li>src 图片的地址</li>
<li>alt 图片加载失败显示的文字</li>
<li>width 图片的宽度</li>
<li>height 图片的高度</li>
<li>title 鼠标悬停时，显示的文字内容</li>
<li>相对地址:相对于文件所在的位置进行引入资源的路径，对当前文件所在位置非常敏感</li>
<li>绝对地址:不管文件在哪里，地址不变，图片始终能够正常引用</li>
</ul>
<h4 id="路径特殊符号"><a href="#路径特殊符号" class="headerlink" title="路径特殊符号"></a>路径特殊符号</h4><ul>
<li>.&#x2F; 代表当前目录</li>
<li>..&#x2F; 上一层目录</li>
<li>..&#x2F;..&#x2F; 上上一层目录</li>
</ul>
<h3 id="容器标签-div"><a href="#容器标签-div" class="headerlink" title="容器标签 div"></a>容器标签 div</h3><p>主要作用是组合其他 html 元素，他在语意上不代表任何特定的类型，但是他可以将某些内容按照需求来分组.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="超链接标签-a"><a href="#超链接标签-a" class="headerlink" title="超链接标签 a"></a>超链接标签 a</h3><p><code> &lt;a href=&quot;http://www.baidu.com&quot; target=&quot;_blank&quot;&gt;点我去百度&lt;/a&gt;</code><br>常用属性</p>
<ul>
<li>href 超链接指向的地址，也可以是某个锚点</li>
<li>target 超链接的打开方式<ul>
<li><code>_self</code> 默认值(缺省值)当前页面打开</li>
<li><code>_blank</code> 在新标签页中打开</li>
</ul>
</li>
</ul>
<h4 id="a-标签的应用-锚点跳转"><a href="#a-标签的应用-锚点跳转" class="headerlink" title="a 标签的应用 锚点跳转"></a>a 标签的应用 锚点跳转</h4><p>有两种方式可以实现返回页面最上部，使用name或者id属性</p>
<ul>
<li>利用元素的 id</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#tag&quot;</span>&gt;</span>点我秒杀<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- p&#123;$&#125;*100 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">&quot;tag&quot;</span>&gt;</span>0元秒杀<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>第一步:在需要跳转的标签中插入 id<br>第二步:在 a 中 href 填上对应的 id 即可 不要忘记加<code>#</code></p>
<ul>
<li>利用 a 标签的 name 属性</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;fly&quot;</span>&gt;</span>终点🏁<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- p&#123;$&#125;*30 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#fly&quot;</span>&gt;</span>芜湖🛫️<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span> 普通文本 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- b只是加粗文本，strong强调内容的重要性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      i显示该文本的斜体 </span></span><br><span class="line"><span class="comment">        em强行给他斜体</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>倾斜<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>斜了<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line">H <span class="tag">&lt;<span class="name">sub</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sub</span>&gt;</span>O</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">2 <span class="tag">&lt;<span class="name">sup</span>&gt;</span>5<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="字符实体"><a href="#字符实体" class="headerlink" title="字符实体"></a>字符实体</h3><p>在 html 中，有一些字符是已经预留好的，由于 html 标签是由<code>&lt;&gt;</code>包裹起来的，所以当内容存在这些符号时,浏览器可能误认为他们是标签。为了正确的显示这些字符，就采用了实体字符</p>
<p><a href="https://www.runoob.com/html/html-entities.html">字体字符</a></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 错误的写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>1+1&gt;1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 正确的写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>1+1 <span class="symbol">&amp;gt;</span> 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>列表分为 有序列表，无序列表，自定义列表</p>
<h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ol&gt;li&#123;$&#125;*3 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;1&quot;</span> <span class="attr">start</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第1项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第2项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第3项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;1&quot;</span> <span class="attr">reversed</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第1项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第2项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第3项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>有序列表的属性</p>
<ul>
<li>type 指定标号的类型<ul>
<li>1 数字(默认)</li>
<li>a 小写字母编号</li>
<li>A 大写字母编号</li>
<li>i 小写罗马数字编号</li>
<li>I 大写罗马数字编号</li>
</ul>
</li>
<li>start 指定列表的起始编号</li>
<li>reversed 列表是否倒叙，写上就是倒叙</li>
</ul>
<h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- li&#123;第$项&#125;*3 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;circle&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第1项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第2项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第3项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;square&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第1项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第2项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第3项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;disc&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第1项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第2项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第3项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>type 用于设置列表头部的样式</p>
<ul>
<li>circle 空心圆</li>
<li>square 实心方块</li>
<li>disc 实心圆</li>
</ul>
<h4 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>我是术语<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>我是术语的具体描述<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>windows<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>windows是一个操作系统<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="列表小练习"><a href="#列表小练习" class="headerlink" title="列表小练习"></a>列表小练习</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;circle&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    windows11</span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>windows10<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>windows9<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>windows8<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>windows7<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    windows6</span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>windows5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        windows4</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;square&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>windows3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    windows2</span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>windows1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
</search>
